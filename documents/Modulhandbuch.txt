Module Name: INF-BSc-101: Rechnerstrukturen (RS)
Englischer Modultitel: Computer Structure and Organisation
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: 1. Semester
Credits: 8
Aufwand: 270 (90/180)
Lehrveranstaltungssprache von Rechnerstrukturen (RS): Deutsch
Lehrinhalte von Rechnerstrukturen (RS): Ziel der Veranstaltung ist es, den Studierenden Grundkenntnisse der Funktionsweise von Rechensystemen als Ausführungsplattformen von Software zu vermitteln. Abgedeckt werden die Ebenen von der Assemblerprogrammierung (einschl. Nutzung zur Realisierung imperativer Programme) bis zur Gatterebene. Dabei wird sehr stark auf die Durchgängigkeit geachtet. Das Modul behandelt folgende Inhalte: Darstellung von Informationen in Rechnern, Boolesche Funktionen (Repräsentationen und Realisierung), Rechnerarithmetik, Schaltnetze, endliche Automaten und Schaltwerke. Auf der Ebene der Rechnerarchitektur werden folgende Themen behandelt: allgemeine Sicht auf die Befehlsschnittstelle, Assemblerprogrammierung am Beispiel MIPS, Assemblerprogrammierung mittels des SPIM-Simulators, Unterbrechungen und Systemaufrufe, die Register-Transfer-Ebene, Hardware-Komponenten zur Realisierung von Prozessoren, Speicherarchitektur, virtuelle Speicher, Caches, Ein-/Ausgabeorganisation, Datenübertragung innerund außerhalb des Rechners sowie Sekundärspeicher. Als Anwendung werden einfache Schnittstellen zur Ansteuerung von Robotern vorgestellt. Teilweise werden die RaViMultimediaeinheiten genutzt.
Ziel der Veranstaltung von Rechnerstrukturen (RS): Die Studierenden sollen nach dem Besuch der Veranstaltung in der Lage sein, die Wechselwirkungen zwischen Ausführungsplattformen und Systemsoftware bzw. Anwendungen beurteilen zu können. Insbesondere sollen sie die Konsequenzen der Ausführung von Anwendungen und Systemsoftware in den hardwarenahen Schichten von der Assemblersprache bis zu Gattern erkennen können. Sie sollen so in die Lage versetzt werden, Auswirkungen unterer Schichten auf die Leistung und die Gefährdung von Systemen abzuschätzen und geeignete Optionen vorzuschlagen.
Kompetenzen von Rechnerstrukturen (RS): Die Studierenden sollen nach dem Besuch der Veranstaltung in der Lage sein, die Wechselwirkungen zwischen Ausführungsplattformen und Systemsoftware bzw. Anwendungen beurteilen zu können. Insbesondere sollen sie die Konsequenzen der Ausführung von Anwendungen und Systemsoftware in den hardwarenahen Schichten von der Assemblersprache bis zu Gattern erkennen können. Sie sollen so in die Lage versetzt werden, Auswirkungen unterer Schichten auf die Leistung und die Gefährdung von Systemen abzuschätzen und geeignete Optionen vorzuschlagen.
Prüfungen von Rechnerstrukturen (RS): Modulprüfung: Klausur (90–120 Minuten) BOSS-NR. 60491 Studienleistung: • Aktive Teilnahme (inkl. Präsentation eigener Lösungen) Erreichen einer Mindestzahl von Punkten der Übungsaufgaben BOSS-NR. 60441 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Rechnerstrukturen (RS): –keine–
Modultyp und Verwendbarkeit des Moduls Rechnerstrukturen (RS): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Rechnerstrukturen (RS): Prof. Dr. J. Chen / Prof. Dr.-Ing. G. A. Fink
Zuständige Fakultät von Rechnerstrukturen (RS): Informatik


Module Name: INF-BSc-102: Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)
Englischer Modultitel: Data Structures, Algorithms, Programming 1
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jedes Semester
Dauer: 1 Semester
Studienabschnitt: 1. Semester
Credits: 12
Aufwand: 360 (120/240)
Lehrveranstaltungssprache von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Deutsch
Lehrinhalte von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Programmiersprachen: Einführung in die Sprache Java mit Konzepten für die strukturierte und objektorientierte Programmierung; informelle, exemplarische Diskussion von Syntax und Semantik einer Programmiersprache. Algorithmen: Sortieren auf Feldern, Verwalten von Listen, Verwalten und Traversieren von Bäumen mit verschiedenen Strategien, Suchen und Sortieren mit Bäumen; elementare Algorithmen auf Graphen. Datenstrukturen: Felder, Listen, Bäume, Graphen, implizite Datenstrukturen. Objektorientierte Software: Geheimnisprinzip und Kapselung bei der Konstruktion von Klassen, Nachrichtenaustausch zwischen Objekten, Vererbung, Aufbau von Spezialisierungshierarchien und Abbildung auf Vererbungshierarchien, Einsatz von Ausnahmebehandlung, Anwendung von Generizität, einfache Entwurfsmuster und objektorientierter Entwurf. Programmierung: Realisierung von Java-Programmen. Die begleitenden Übungen zu DAP 1 dienen zur Vertiefung des in der Vorlesung behandelten Stoffes. Dies geschieht durch regelmäßig ausgegebene Übungsaufgaben, die die Studierenden selbstständig bearbeiten. In den Präsenzzeiten der Übung werden die Lösungen der Aufgaben in kleineren Übungsgruppen besprochen. Im begleitenden Praktikum zu DAP 1 werden die behandelten Themen durch Arbeiten am Computer praktisch eingeübt.
Ziel der Veranstaltung von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Nach erfolgreichem Abschluss sollen die Studierenden die informellen Grundlagen für die Beschreibung von Programmiersprachen und exemplarisch deren Umsetzung im Rahmen der Programmiersprache Java können. Die Studierenden sollen die Grundlagen der objektorientierten Programmgestaltung beherrschen und für gegebene Problemstellungen selbstständig Lösungsalgorithmen formulieren und diese als Java-Programme realisieren können. Sie beherrschen ausgewählte Entwurfsmuster für die objektorientierte Softwarekonstruktion und können ihre Verwendbarkeit einschätzen.
Kompetenzen von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Nach erfolgreichem Abschluss sollen die Studierenden die informellen Grundlagen für die Beschreibung von Programmiersprachen und exemplarisch deren Umsetzung im Rahmen der Programmiersprache Java können. Die Studierenden sollen die Grundlagen der objektorientierten Programmgestaltung beherrschen und für gegebene Problemstellungen selbstständig Lösungsalgorithmen formulieren und diese als Java-Programme realisieren können. Sie beherrschen ausgewählte Entwurfsmuster für die objektorientierte Softwarekonstruktion und können ihre Verwendbarkeit einschätzen.
Prüfungen von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Modulprüfung: Klausur BOSS-NR. 60191 Studienleistung: • Praktikumsschein in Element 3 BOSS-NR. 60141 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): –keine–
Modultyp und Verwendbarkeit des Moduls Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Studiendekan; Dr. S. Dißmann
Zuständige Fakultät von Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1): Informatik


Module Name: INF-BSc-104: Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2)
Englischer Modultitel: Data Structures, Algorithms, Programming 2
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 2. Semester
Credits: 12
Aufwand: 360 (120/240)
Lehrveranstaltungssprache von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Deutsch
Lehrinhalte von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Die Vorlesung behandelt aufbauend auf den in DAP 1 behandelten Datenstrukturen spezielle statische Datenstrukturen (z.B. Mengendarstellungen, UNION-FIND, Segmentbäume, OBDDs) sowie dynamische Datenstrukturen (z.B. Hashing, spezielle Suchbäume inklusive B-Bäume, Skiplisten). Hierbei geht es nicht nur um die Datenstrukturen selbst und deren Einsatz für gewisse Datentypen, sondern vor allem um deren theoretische Analyse. Ein weiterer Schwerpunkt sind Entwurfsmethoden für effiziente Algorithmen, die teilweise zunächst am Sortierproblem diskutiert werden, bevor sie systematisch an verschiedenen Problemen behandelt werden (z.B. Greedy Algorithmen, dynamische Programmierung, Branch and Bound, Divide and Conquer, Sweep Line Technik, randomisierte Suchheuristiken). Die begleitenden Übungen zu DAP 2 dienen zur Vertiefung des in der Vorlesung kennen gelernten Stoffes. Hierzu dienen regelmäßig ausgegebene Übungsaufgaben, die die Studierenden selbstständig bearbeiten sollen. In den Präsenzzeiten kleinerer Übungsgruppen werden die Lösungen der Aufgaben besprochen. Im begleitenden Praktikum zu DAP 2 soll ein Teil der in der Vorlesung behandelten Algorithmen und Datenstrukturen selbstständig von den Studierenden in Programme umgesetzt werden.
Ziel der Veranstaltung von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Kenntnis elementarer Datenstrukturen, ihrer Eigenschaften, Vor- und Nachteile, Kenntnis wichtiger Entwurfsmethoden für effiziente Algorithmen, Kenntnis effizienter Algorithmen für grundlegende Probleme, Erfahrung in der Anwendung von Datenstrukturen und Entwurfsmethoden, Erfahrung in der Umsetzung von Datenstrukturen und Algorithmen in lauffähige Programme, Kenntnis von Methoden, um die Effizienz von Datenstrukturen und Algorithmen zu messen und von Anwendungen dieser Methoden.
Kompetenzen von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Kenntnis elementarer Datenstrukturen, ihrer Eigenschaften, Vor- und Nachteile, Kenntnis wichtiger Entwurfsmethoden für effiziente Algorithmen, Kenntnis effizienter Algorithmen für grundlegende Probleme, Erfahrung in der Anwendung von Datenstrukturen und Entwurfsmethoden, Erfahrung in der Umsetzung von Datenstrukturen und Algorithmen in lauffähige Programme, Kenntnis von Methoden, um die Effizienz von Datenstrukturen und Algorithmen zu messen und von Anwendungen dieser Methoden.
Prüfungen von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Modulprüfung: Klausur BOSS-NR. 60291 Studienleistung: (1) Erfolgreiche Teilnahme an Element 2 BOSS-NR. 60241 Zusätzliche Voraussetzung für den Modulabschluss: (2) Erfolgreiche Teilnahme an Element 3 BOSS-NR. 60242 Die Studienleistung (1) ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Erfolgreich abgeschlossen: Element 3 „Praktikum zu DAP 1“ des Moduls „Datenstrukturen, Algorithmen und Programmierung 1 (DAP1)“ Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1“ bzw. Modul „Höhere Mathematik 1“, Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP1)“
Modultyp und Verwendbarkeit des Moduls Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Prof. Dr. Coja-Oghlan
Zuständige Fakultät von Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2): Informatik


Module Name: INF-BSc-105: Hardware-Praktikum (HaPra)
Englischer Modultitel: Hardware Lab
Studiengang: Bachelorstudiengang Informatik
Turnus: Jedes Semester
Dauer: 1 Semester
Studienabschnitt: ab 2. Semester
Credits: 6
Aufwand: 180 (60/120)
Lehrveranstaltungssprache von Hardware-Praktikum (HaPra): Deutsch
Lehrinhalte von Hardware-Praktikum (HaPra): Ziel der Veranstaltung ist die Festigung der Inhalte der Veranstaltung „Rechnerstrukturen“ in Form eines Praktikums. Die Studierenden sollen „hands-on experience“ bei Umgang mit Ausführungsplattformen und deren technischen Grundlagen bekommen. Darüber hinaus werden in beschränktem Umfang Erweiterungen vorgenommen, soweit diese zum Verständnis von Ausführungsplattformen sinnvoll und eine Behandlung im Rahmen eines Praktikums angemessen sind. Zu den Inhalten gehören: die Repräsentation logischer Zustände durch elektronische Signale, Gatterbausteine (einschl. innerem Aufbau), Signalverläufe, Logikoptimierungen, Schaltnetze, Logische Grundschaltungen, (De)Multiplexer, (De)Codierer und Flip-Flops. Weiterhin werden Rechnerarithmetik und zugehörige Schaltungen sowie Automaten und deren Realisierungen behandelt. Im Kontext von Rechnern erfolgt eine Darstellung des Mikroprozessorkerns und Speichern sowie der Datenübertragung und Sensoren und Aktuatoren. An Beispiel der programmierung von LegoMindstorm-Robotern wird die Programmierung von einfachen Robotern erprobt.
Ziel der Veranstaltung von Hardware-Praktikum (HaPra): Nach dem Besuch der Veranstaltung sollen die Studierenden in der Lage sein, Grundlagen der technischen Informatik auf geeignete Demonstrationsumgebungen abzubilden und zu demonstrieren. Sie sollen grob skizzierte Hardware- und gemischte Hardware/Software-Systeme bis zu deren Simulierbarkeit bzw. Ausführbarkeit in einer solchen Umgebung vervollständigen können. Insbesondere sollen sie einfache, in der Regel digitale Hardware-Strukturen mittels geeigneter Elektronik-Entwurfsumgebungen modellieren und simulieren können.
Kompetenzen von Hardware-Praktikum (HaPra): Nach dem Besuch der Veranstaltung sollen die Studierenden in der Lage sein, Grundlagen der technischen Informatik auf geeignete Demonstrationsumgebungen abzubilden und zu demonstrieren. Sie sollen grob skizzierte Hardware- und gemischte Hardware/Software-Systeme bis zu deren Simulierbarkeit bzw. Ausführbarkeit in einer solchen Umgebung vervollständigen können. Insbesondere sollen sie einfache, in der Regel digitale Hardware-Strukturen mittels geeigneter Elektronik-Entwurfsumgebungen modellieren und simulieren können.
Prüfungen von Hardware-Praktikum (HaPra): Voraussetzungen für den Modulabschluss1 (1) Abschlusstestat BOSS-NR. 61391 (2) Erfolgreiche Bearbeitung der gestellten Aufgaben BOSS-NR.–keine– Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzung von Hardware-Praktikum (HaPra): Erfolgreich abgeschlossen: Modul „Rechnerstrukturen“ Wünschenswerte Kenntnisse: Modul „Elektrotechnik und Kommunikationstechnik“
Modultyp und Verwendbarkeit des Moduls Hardware-Praktikum (HaPra): Pflichtmodul im Bachelorstudiengang Informatik
Modulbeauftragte/r von Hardware-Praktikum (HaPra): Prof. Dr. J.-J. Chen, Dr. G. v.d. Brüggen
Zuständige Fakultät von Hardware-Praktikum (HaPra): Informatik


Module Name: INF-BSc-106: Logik für Informatik
Englischer Modultitel: Logic for Computer Science
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: 3. Semester
Credits: 5
Aufwand: 135 (45/90)
Lehrveranstaltungssprache von Logik für Informatik: Deutsch
Lehrinhalte von Logik für Informatik: Element 1 umfasst wesentliche Grundlagen der modernen mathematischen Logik, die für die Informatik relevant sind. Neben den klassischen logischen Systemen der Aussagenlogik und der Prädikatenlogik lernen die Studierenden auch neuere logische Systeme kennen, die in der Informatik verwendet werden, wie Modallogik und Temporallogik. Für diese Logiken werden untersucht: • Syntax und Semantik • einige algorithmische und modelltheoretische Eigenschaften, sowie • verschiedene Beweiskalküle mit denen man die Unerfüllbarkeit logischer Formeln untersuchen kann. Weiterhin werden die Grundlagen der logischen Programmierung vorgestellt. In Element 2 werden die grundlegenden Begriffe gefestigt und wesentliche Methoden geübt. Insbesondere die Modellierung mit Hilfe der Logik und der Umgang mit Beweiskalkülen werden vertieft.
Ziel der Veranstaltung von Logik für Informatik: Das Modul vermittelt die Fähigkeit, für die Modellierung einer gegebenen Problemstellung ein geeignetes logisches System zu finden bzw. zu entwickeln. Die Studierenden sollen Syntax und Semantik verschiedener logischer Systeme beherrschen und ggf. weiter entwickeln können. Sie sollen einige klassische Kalküle kennen und diese auf konkrete Problemstellungen anwenden können. Sie sollen ein grundlegendes Verständnis für die Logik-Programmierung entwickeln und in der Lage sein, einfache Sachverhalte durch Prolog-Programme auszudrücken.
Kompetenzen von Logik für Informatik: Das Modul vermittelt die Fähigkeit, für die Modellierung einer gegebenen Problemstellung ein geeignetes logisches System zu finden bzw. zu entwickeln. Die Studierenden sollen Syntax und Semantik verschiedener logischer Systeme beherrschen und ggf. weiter entwickeln können. Sie sollen einige klassische Kalküle kennen und diese auf konkrete Problemstellungen anwenden können. Sie sollen ein grundlegendes Verständnis für die Logik-Programmierung entwickeln und in der Lage sein, einfache Sachverhalte durch Prolog-Programme auszudrücken.
Prüfungen von Logik für Informatik: Modulprüfung: Klausur (120 Minuten) BOSS-NR. 61791 Studienleistung: • Aktive Mitarbeit in Element 2 Erreichen der Mindestpunktzahl der Übungsaufgaben in Element 2 BOSS-NR. 61741 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Logik für Informatik: Erfolgreich abgeschlossen: –keine–
Modultyp und Verwendbarkeit des Moduls Logik für Informatik: Pflichtmodul im Bachelorstudiengang Informatik und im Bachelorstudiengang Angewandte Informatik mit Anwendungsfach Dienstleistungsinformatik
Modulbeauftragte/r von Logik für Informatik: Prof. Dr. Th. Schwentick
Zuständige Fakultät von Logik für Informatik: Informatik


Module Name: INF-BSc-107: Informationssysteme (IS)
Englischer Modultitel: Information Systems
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 4., 6. oder 1. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Informationssysteme: Deutsch
Lehrinhalte von Informationssysteme: Die Veranstaltung behandelt die Architektur und den Einsatz von Informationssystemen, wobei Datenbank- und Information-Retrieval-Systeme im Vordergrund stehen. Bezüglich der Architektur wird insbesondere dargestellt, wie mächtige, deklarative Anfrage- und Änderungssprachen schrittweise auf rechnernahe, prozedurale Ausführungspläne zurückgeführt werden können. Bezüglich des Einsatzes wird insbesondere die Modellierung und Formalisierung von Anwendungen sowie der praktische Umgang mit einem objektrelationalen Datenbanksystem (ORACLE) geübt.
Kompetenzen von Informationssysteme: Die Studierenden sollen die Grundlagen von Syntax und Semantik von Informationssystem-Diensten verstehen, die Architektur von Informationssystemen kennen, und darauf aufbauend den Entwicklungszyklus von Anwendungen durchführen können.
Prüfungen von Informationssysteme: Modulprüfung: Klausur (60 Minuten) BOSS-NR. 60691 Studienleistungen: –keine–
Teilnahmevoraussetzungen von Informationssysteme: Erfolgreich abgeschlossen: –keine– Wünschenswerte Kenntnisse: Modul „Datenstrukturen Algorithmen und Programmierung 1 (DAP 1)“ (auch gleichzeitiger Besuch)
Modultyp und Verwendbarkeit des Moduls Informationssysteme: Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Informationssysteme: Prof. Dr. Jens Teubner
Zuständige Fakultät von Informationssysteme: Informatik


Name des Moduls: Grundbegriffe der Theoretischen Informatik (GTI)
Englischer Modultitel: Introduction to Theoretical Computer Science
Studiengang: Bachelorstudiengang Informatik
Turnus: Jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 4. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Grundbegriffe der Theoretischen Informatik (GTI): Deutsch (und eventuell 2–3 Vorlesungen englisch)
Lehrinhalte von Grundbegriffe der Theoretischen Informatik (GTI): Einführung in die wichtigsten Theorien der Informatik: Komplexitätsklassen, Reduzierbarkeit, NP-Vollständigkeitstheorie, Theorie endlicher Automaten, Einführung in Grammatiken als Basis von Programmiersprachen, Chomsky-Hierarchie, Automaten vs. Grammatiken, Beschreibungskomplexität. Dabei steht eine algorithmenorientierte Darstellung im Mittelpunkt.
Ziel der Veranstaltung von Grundbegriffe der Theoretischen Informatik (GTI): Die Studierenden sollen die Grundlagen der fundamentalen Theorien der Informatik kennen und auf Probleme anwenden können. Insbesondere: können sie einschätzen, ob ein Berechnungsproblem überhaupt algorithmisch lösbar ist oder ob es ein lösbares aber schwieriges algorithmisches Problem ist; kennen sie die wichtigsten Methoden zum Umgang mit (endlichen und Keller-)Automaten und können Sie anwenden; weiterhin können sie die erlernten Beweistechniken vielseitig anwenden.
Kompetenzen von Grundbegriffe der Theoretischen Informatik (GTI): Die Studierenden sollen die Grundlagen der fundamentalen Theorien der Informatik kennen und auf Probleme anwenden können. Insbesondere: können sie einschätzen, ob ein Berechnungsproblem überhaupt algorithmisch lösbar ist oder ob es ein lösbares aber schwieriges algorithmisches Problem ist; kennen sie die wichtigsten Methoden zum Umgang mit (endlichen und Keller-)Automaten und können Sie anwenden; weiterhin können sie die erlernten Beweistechniken vielseitig anwenden.
Prüfungen von Grundbegriffe der Theoretischen Informatik (GTI): Modulprüfung: Klausur BOSS-NR. 61291 Studienleistung: • aktive Mitarbeit Mindestpunktzahl bei den Übungen, Details laut Vorlesungsankündigung BOSS-NR. 61241 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Grundbegriffe der Theoretischen Informatik (GTI): Erfolgreich abgeschlossen: –keine– Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1“, Modul „Mathematik für Informatik 2“, Modul „Datenstrukturen Algorithmen und Programmierung 1 (DAP 1)“, „Datenstrukturen Algorithmen und Programmierung 2 (DAP 2)“
Modultyp und Verwendbarkeit des Moduls Grundbegriffe der Theoretischen Informatik (GTI): Pflichtmodul im Bachelorstudiengang Informatik
Modulbeauftragte/r von Grundbegriffe der Theoretischen Informatik (GTI): apl.Prof.Dr. B. Bollig, Prof. Dr. Th. Schwentick
Zuständige Fakultät von Grundbegriffe der Theoretischen Informatik (GTI): Informatik


Name des Moduls: Proseminar (ProS)
Englischer Modultitel: Undergraduate Seminar
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: In jedem Semester
Dauer: 1 Semester
Studienabschnitt: 3.–6. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Proseminar (ProS): Deutsch oder Englisch
Lehrinhalte von Proseminar (ProS): Im Proseminar soll Literatur gelesen werden, um die Studierenden mit aktuellen Themen eines speziellen Gebiets der Informatik vertraut zu machen. Die fachlichen Inhalte der Lehrveranstaltung ergeben sich im Wesentlichen aus der Themenstellung des Proseminars. Die Literatur hierzu wird entweder vorgegeben oder, einem gestellten Thema als Leitlinie folgend, von den Proseminarteilnehmern selbst gesucht, ihre Inhalte werden zu einer selbständigen Präsentation von den Teilnehmern aufbereitet und vorgetragen. Eine Ausarbeitung, die Selbständigkeit zeigen soll, manifestiert darüber hinaus die eigenständige Auseinandersetzung der Teilnehmer mit dem Thema und verdeutlicht die Fähigkeit, ein wissenschaftliches Thema schriftlich angemessen darzustellen. Element 1 führt – in der Regel – in einer Blockveranstaltung in elementare Präsentationstechniken ein.
Kompetenzen von Proseminar (ProS): Die Studierenden sollen ein einfaches Thema aus der Informatik eigenständig erarbeiten können. Sie sollen in der Lage sollen, mündlich und schriftlich in eigenen Worten darüber zu berichten und sich selbständig kritisch mit dem Thema auseinandersetzen. Die Studierenden sollen die elementaren Techniken der Literatursuche in Bibliotheken beherrschen und fremde Texte als solche angemessen zitieren können. Sie sollen in der Lage sein, eine mündliche Präsentation selbständig zu konzipieren und elementare Präsentationstechniken beherrschen. Sie sollen sich kritisch mit fremden Präsentationen auseinandersetzen können und Techniken der wissenschaftlichen Diskussion beherrschen.
Prüfungen von Proseminar (ProS): Modulprüfung: Vortrag und schriftliche Ausarbeitung in Element 2 BOSS-NR. 60891 Studienleistungen: (1) Erfolgreiche Teilnahme an Element 1 BOSS-Nr. 60841 (2) Aktive Teilnahme sowie weitere Leistungen nach Ankündigung des Veranstalters (z. B. Erstellen eines Exposes, Probevorträge) BOSS-Nr. –keine– Die Studienleistungen (1) und (2) sind Voraussetzung zur Teilnahme an der Modulprüfung. Die Studienleistung (2) muss in derselben Veranstaltung erworben sein, zu der die Modulprüfung abgelegt wird.
Teilnahmevoraussetzungen von Proseminar (ProS): Die Teilnahmevoraussetzungen werden durch den jeweiligen Veranstalter spezifiziert.
Modultyp und Verwendbarkeit des Moduls Proseminar (ProS): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Proseminar (ProS): Studiendekan
Zuständige Fakultät von Proseminar (ProS): Informatik


Name des Moduls: Bachelor-Abschluss-Modul (BA)
Englischer Modultitel: Bachelor Thesis Module
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: In jedem Semester
Dauer: 1 Semester
Studienabschnitt: 6. Semester
Credits: 15
Aufwand: 450 (15/435)
Lehrveranstaltungssprache von Bachelor-Abschluss-Modul (BA): Deutsch oder Englisch
Lehrinhalte von Bachelor-Abschluss-Modul (BA): Die Bachelor-Arbeit ist eine wissenschaftliche Arbeit auf dem Gebiet der Informatik. Im Bachelor-Studiengang Angewandte Informatik kann das Thema auch aus dem Anwendungsfach stammen, sofern es einen Bezug zur Informatik aufweist. Im Rahmen der Bachelor-Arbeit wenden die Studierenden selbstständig wissenschaftliche Methoden und Erkenntnisse auf ein klar umrissenes Thema an. Dadurch soll insbesondere belegt werden, dass die Kandidatin oder der Kandidat für einen Übergang in die Berufspraxis ausreichende Fachkenntnisse erworben hat und die Fähigkeit besitzt, zur Lösung fachlicher Probleme die geeigneten Methoden auszuwählen und sachgerecht anzuwenden. Im Bachelor-Seminar werden die Ergebnisse der Bachelor-Arbeit mündlich präsentiert.
Kompetenzen von Bachelor-Abschluss-Modul (BA): Mit der Bachelor-Arbeit sollen die Kandidatin bzw. der Kandidat die Fach- und Methodenkompetenz erwerben, innerhalb einer vorgegebenen Frist eine Fragestellung der Informatik selbstständig nach wissenschaftlichen Methoden zu bearbeiten. Im Bachelor-Seminar sollen sie lernen, eigene Lösungen vor dem Hintergrund des aktuellen Standes der Wissenschaft angemessen mündlich darzustellen und zu verteidigen. Als Teilnehmer und Teilnehmerinnen des Bachelor-Seminars sollen sie Kenntnisse über aktuelle Entwicklungen im Gebiet ihrer Bachelor-Arbeit erhalten und ihre Fähigkeit zur wissenschaftlichen Diskussion vertiefen.
Prüfungen von Bachelor-Abschluss-Modul (BA): Modulprüfung: Bachelor-Arbeit BOSS-Nr. ?????
zusätzliche Voraussetzungen für den Modulabschluss: • mündliche Präsentation und aktive Teilnahme in Element 2 im Rahmen des entsprechenden Bachelor-Seminars BOSS-Nr. ?????
Die Voraussetzungen für die Teilnahme an der Modulprüfung werden vom jeweiligen Veranstalter festgelegt.
Teilnahmevoraussetzungen von Bachelor-Abschluss-Modul (BA): Erfolgreich abgeschlossen: mindestens 120 Leistungspunkte (gemäß Prüfungsordnung), inhaltliche Voraussetzungen legt die Betreuerin oder der Betreuer fest
Modultyp und Verwendbarkeit des Moduls Bachelor-Abschluss-Modul (BA): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Bachelor-Abschluss-Modul (BA): Studiendekan
Zuständige Fakultät von Bachelor-Abschluss-Modul (BA): Informatik


Name des Moduls: Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI)
Englischer Modultitel: Theoretical Computer Science for Students of Applied Computer Science
Studiengang: Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 4. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Deutsch
Lehrinhalte von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Folgende zentrale Theorien werden behandelt: Komplexitätstheorie, Entscheidbarkeitstheorie, Theorie endlicher Automaten, Chomsky-Hierarchie, Theorie kontextfreier Sprachen und Grammatiken, lineare Optimierung. Es wird ein besonderer Wert darauf gelegt, positive Ergebnisse algorithmenorientiert darzustellen.
Ziel der Veranstaltung von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Basiskenntnisse in den zentralen Gebieten der theoretischen Informatik, Erkennen, warum bestimmte Probleme fundamental sind, Verbindung von Theorien und ihrem Einsatz in Anwendungsproblemen, Erlernen von Beweistechniken.
Kompetenzen von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Basiskenntnisse in den zentralen Gebieten der theoretischen Informatik, Erkennen, warum bestimmte Probleme fundamental sind, Verbindung von Theorien und ihrem Einsatz in Anwendungsproblemen, Erlernen von Beweistechniken.
Prüfungen von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Modulprüfung: Klausur oder mündliche Prüfung BOSS-NR. 61191 Studienleistung: • aktive Mitarbeit Mindestpunktzahl bei den Übungen, Details laut Vorlesungsankündigung BOSS-NR. 61141 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Erfolgreich abgeschlossen: –keine– Vorausgesetzte Kenntnisse: (Modul „Mathematik für Informatik 1“ oder Modul „Höhere Mathematik 1“), (Modul „Mathematik für Informatik 2“ oder Modul „Höhere Mathematik 2“), Modul „Datenstrukturen Algorithmen und Programmierung 1 (DAP 1)“, Modul „Datenstrukturen Algorithmen und Programmierung 2 (DAP 2)“
Modultyp und Verwendbarkeit des Moduls Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Pflichtmodul im Bachelor-Studiengang Angewandte Informatik
Modulbeauftragte/r von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): apl.Prof.Dr. B. Bollig, Prof. Dr. Th. Schwentick
Zuständige Fakultät von Theoretische Informatik für Studierende der Angewandten Informatik (TIfAI): Informatik


Name des Moduls: Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET)
Englischer Modultitel: Hardware Lab for Students with Minor in Electrical Engineering
Studiengang: Bachelorstudiengang Informatik
Turnus: Jedes Semester
Dauer: 1 Semester
Studienabschnitt: Ab 2. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Deutsch
Lehrinhalte von Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Ziel der Veranstaltung ist die Festigung der Inhalte der Veranstaltung „Rechnerstrukturen“ in Form eines Praktikums. Die Studierenden sollen „hands-on experience“ beim Umgang mit Ausführungsplattformen und deren technischen Grundlagen bekommen. Darüber hinaus werden in beschränktem Umfang Erweiterungen vorgenommen, soweit diese zum Verständnis von Ausführungsplattformen sinnvoll und eine Behandlung im Rahmen eines Praktikums angemessen sind. Zu den Inhalten gehören: Schaltnetze, Logikoptimierungen, Logische Grundschaltungen, (De)Multiplexer, (De)Codierer und Flip-Flops. Weiterhin werden Rechnerarithmetik und zugehörige Schaltungen sowie Automaten und deren Realisierungen behandelt. Im Kontext von Rechnern erfolgt eine Darstellung des Mikroprozessorkerns und Speichern sowie der Datenübertragung und Sensoren und Aktuatoren. Im Vergleich zum HaPra für Studierende mit einem anderen Nebenfach entfallen elektrotechniknahe Inhalte wie die Darstellung von Signalen und die interne Realisierung von Gattern. Auf diese Weise werden Überlappungen mit Veranstaltungen der Elektrotechnik vermieden.
Kompetenzen von Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Nach dem Besuch der Veranstaltung sollen die Studierenden in der Lage sein, Grundlagen der technischen Informatik auf geeignete Demonstrationsumgebungen abzubilden und zu demonstrieren. Sie sollen grob skizzierte Hardware- und gemischte Hardware/Software-Systeme bis zu deren Simulierbarkeit bzw. Ausführbarkeit in einer solchen Umgebung vervollständigen können. Insbesondere sollen sie einfache, in der Regel digitale Hardware-Strukturen mittels geeigneter Elektronik-Entwurfsumgebungen modellieren und simulieren können.
Prüfungen von Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Voraussetzungen für den Modulabschluss: (1) Abschlusstestat BOSS-NR. 70891 (2) Erfolgreiche Bearbeitung der gestellten Aufgaben BOSS-NR. –keine– Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzungen von Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Erfolgreich abgeschlossen: Modul „Rechnerstrukturen (RS)“. Wünschenswerte Kenntnisse: Modul „Elektrotechnik und Kommunikationstechnik“ oder Modul „Grundlagen der Elektrotechnik“ bei Nebenfach Elektrotechnik
Modultyp und Verwendbarkeit des Moduls Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Pflichtmodul im Bachelor-Studiengang Informatik
Modulbeauftragte/r von Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Prof. Dr. J.-J. Chen, Dr. G. v.d. Brüggen
Zuständige Fakultät von Hardware-Praktikum für Studierende mit Nebenfach Elektrotechnik (HaPra-ET): Informatik


Name des Moduls: Softwaretechnik (SWT)
Englischer Modultitel: Software Engineering
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 2. oder 4. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Softwaretechnik (SWT): Deutsch
Lehrinhalte von Softwaretechnik (SWT): Das Modul führt in das „Programming in the Large“ ein, wobei folgende Schwerpunkte gesetzt werden:
• Die graphische Modellierungssprache UML
• Benutzung von Softwareentwicklungswerkzeugen
• Elementare Entwurfsmuster und einfache Software-Architekturen
• Vertiefung des objektorientierten Paradigmas
• Grundzüge des Testens von Software-Systemen
In der Vorlesung werden Methoden und Verfahren aus der Software-Technik eingeführt, die Anwendung der Lehrinhalte in kleinen Beispielen erfolgt in den Übungen.
Kompetenzen von Softwaretechnik (SWT): Nach erfolgreichem Abschluss des Moduls sollen die Studierenden in der Lage sein, bei der Durchführung von Software-Entwicklungsprojekten den Entwicklungsprozess zu planen, in den einzelnen Phasen des Projekts UML zur Modellierung sinnvoll einzusetzen und die Realisierung des Projekts durchzuführen. Sie sollen Werkzeuge und Entwurfsmuster einsetzen können, um die Projektaufgaben zu lösen, und sie sollen in der Lage sein, unterschiedliche Lösungsalternativen zu diskutieren.
Prüfungen von Softwaretechnik (SWT): Modulprüfung: Klausur BOSS-NR. 60991 Studienleistungen: • Übungsschein in Element 2 BOSS-NR. 60941 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Softwaretechnik (SWT): Erfolgreich abgeschlossen: Modul „Datenstrukturen Algorithmen und Programmierung 1 (DAP 1)“
Modultyp und Verwendbarkeit des Moduls Softwaretechnik (SWT): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Softwaretechnik (SWT): Studiendekan; Dr. S. Dißmann
Zuständige Fakultät von Softwaretechnik (SWT): Informatik


Name des Moduls: Software-Praktikum (SoPra)
Englischer Modultitel: Software Lab
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Mehrfach jährlich
Dauer: 1 Semester
Studienabschnitt: 3., 4. oder 5. Semester
Credits: 6
Aufwand: 180 (60/120)
Lehrveranstaltungssprache von Software-Praktikum (SoPra): Deutsch
Lehrinhalte von Software-Praktikum (SoPra): Das Praktikum führt in die Softwareentwicklung im Rahmen von Projekten ein, die in Kleingruppen mit etwa 8 Studierenden bearbeitet werden. Die Aufgabenstellungen erfordern von den Studierenden das Durchführen von Anforderungsanalyse, technischem Entwurf, Implementierung und Test. Für die Anforderungen und den Entwurf werden grafische Modellierungssprachen, wie z.B. UML, eingesetzt. Für die Implementierung sind Java oder verwandte JVM-Sprachen vorgesehen. Die Vorgehensweise im Projekt orientiert sich an realistischen Szenarien und vermittelt so einen ersten Eindruck von der industriellen Softwareproduktion. Neben der Lösung fachlicher Probleme wird auch in die Verwendung von gängigen Werkzeugen zur Entwicklung und Versionsverwaltung sowie in Techniken der Gruppenarbeit eingeführt.
Kompetenzen von Software-Praktikum (SoPra): Nach erfolgreichem Abschluss des Moduls können die Studierenden einfache Softwareentwicklungsprojekte im Team durchführen, indem sie:
• Funktionale Anforderungen an Software definieren und modellieren,
• die Anwendungsdomäne einer Software entwickeln und bzgl. Vollständigkeit evaluieren,
• eine grafische Benutzeroberfläche designen und dokumentieren,
• als Vorbereitung auf die Umsetzung die einzelnen Komponenten dokumentieren,
• Software unter Verwendung von aktuellen Tools und Technologien der Softwareentwicklung implementieren,
• einzelne Komponenten mittels anerkannter Methoden testen,
• die fertiggestellte Applikation in Bezug auf die ursprünglich formulierten Anforderungen auf Vollständigkeit und Korrektheit überprüfen.
Die erlangten Kompetenzen bereiten auf die berufliche Tätigkeit der Softwareentwicklung im Team vor.
Prüfungen von Software-Praktikum (SoPra): Voraussetzungen für den Modulabschluss:
• Erfolgreiche Präsentationen zu den Projekten
• Selbstständige Erstellung von Dokumenten, Modellierungs- und Implementierungsarbeiten
• Aktive Mitarbeit an Diskussionen und Entscheidungsprozessen BOSS-NR. 61091
Teilnahmevoraussetzungen von Software-Praktikum (SoPra): Erfolgreich abgeschlossen: Modul „Software-Technik (SWT)“
Modultyp und Verwendbarkeit des Moduls Software-Praktikum (SoPra): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Software-Praktikum (SoPra): Prof. Dr. F. Howar
Zuständige Fakultät von Software-Praktikum (SoPra): Informatik


Name des Moduls: Betriebssysteme (BS)
Englischer Modultitel: Operating Systems
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 2. Semester
Credits: 5
Aufwand: 150 h (45/105)
Lehrveranstaltungssprache von Betriebssysteme (BS): Deutsch
Lehrinhalte von Betriebssysteme (BS): Die Vorlesung vermittelt grundlegende Kenntnisse über den Aufbau und die Funktionsweise von Betriebssystemen. Behandelt werden Betriebssystemabstraktionen wie Prozesse, virtueller Speicher, Dateien, Gerätedateien und Kommunikationsendpunkte sowie Techniken für deren effiziente Realisierung. Dazu gehören Strategien für das Prozess- und E/A-Scheduling, die Pufferung und die Haupt- und Hintergrundspeicherverwaltung. Weiterhin werden die Themen Sicherheit im Betriebssystemkontext und Betriebssysteme für Multiprozessorsysteme erörtert. In den vorlesungsbegleitenden Übungen erfolgt eine praktische Vertiefung des Stoffs anhand von Programmieraufgaben aus dem Bereich der UNIX-Systemprogrammierung.
Kompetenzen von Betriebssysteme (BS): Die Studierenden sollen durch das tiefere Verständnis von Betriebssystemen in der Lage sein, mögliche Phänomene beim Betrieb von Rechnern wie „Seitenflattern“ oder „Verklemmungen“ zu verstehen und zu vermeiden. Sie sollen systemnahe und nebenläufige Anwendungsprogramme entwickeln können, die die Systemdienste in richtiger und effizienter Weise nutzen, und dabei bzgl. potentieller Sicherheitsprobleme sensibilisiert sein.
Prüfungen von Betriebssysteme (BS): Modulprüfung: Klausur (60 Minuten) BOSS-NR. 61991 Studienleistung: • Erfolgreiche Bearbeitung der Übungsaufgaben BOSS-NR. 61941 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Betriebssysteme (BS): Erfolgreich abgeschlossen: –keine– Vorausgesetzte Kenntnisse: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Rechnerstrukturen (RS)“
Modultyp und Verwendbarkeit des Moduls Betriebssysteme (BS): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Betriebssysteme (BS): (Studiendekan)
Zuständige Fakultät von Betriebssysteme (BS): Informatik


Name des Moduls: Rechnernetze und verteilte Systeme (RvS)
Englischer Modultitel: Computer Networks and Distributed Systems
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: 3. Semester
Credits: 5
Aufwand: 150 h(45/105)
Lehrveranstaltungssprache von Rechnernetze und verteilte Systeme (RvS): Deutsch
Lehrinhalte von Rechnernetze und verteilte Systeme (RvS): Die grundlegenden Techniken zur Netzbildung und Kommunikation im Netz werden in Funktion, Aufbau und Verwendung anhand der Schichten des ISO/OSI- und des TCP/IP-Modells erläutert, d.h. Anwendungsschicht, Datentransport, Netzschicht sowie lokale Netze und Verbindungen werden im Prinzip und an Protokollbeispielen vorgestellt. Zusätzlich werden wesentliche Aspekte der Netzverwaltung, der Sicherheit im Netz, der Middleware-Plattformen und verteilter Algorithmen vorgestellt.
Kompetenzen von Rechnernetze und verteilte Systeme (RvS): Die Studierenden sollen die grundlegenden Techniken der Netzbildung, der Kommunikation im Netz und der Architektur verteilter Anwendungen beherrschen. Sie sollen einerseits in die Lage versetzt werden, Kommunikationssysteme und die notwendige Middleware auszuwählen und für gewünschte Einsatzfelder zu konfigurieren sowie ergänzende Funktionen dazu zu entwickeln. Weiterhin sollen sie befähigt werden, verteilte Anwendungen so zu entwickeln, dass sie die aus gegebenen Kommunikationssystemen sowie Middleware-Plattformen verfügbaren Unterstützungsfunktionen effizient nutzen. In der Vorlesung werden die theoretischen und methodischen Kenntnisse vermittelt, die in Übungen an praktischen Beispielen umgesetzt werden.
Prüfungen von Rechnernetze und verteilte Systeme (RvS): Modulprüfung: Klausur (60 Minuten) BOSS-NR. 62191 Studienleistung: • Erfolgreiche Bearbeitung der Übungsaufgaben BOSS-NR. 62141 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Rechnernetze und verteilte Systeme (RvS): Erfolgreich abgeschlossen: –keine– Vorausgesetzte Kenntnisse: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2)“
Modultyp und Verwendbarkeit des Moduls Rechnernetze und verteilte Systeme (RvS): Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Rechnernetze und verteilte Systeme (RvS): Prof. Dr. P. Buchholz
Zuständige Fakultät von Rechnernetze und verteilte Systeme (RvS): Informatik


Name des Moduls: Softwarekonstruktion (SWK)
Englischer Modultitel: Software Construction
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: In der Regel jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: Ab dem 5. Semester
Credits: 4
Aufwand: 120 Stunden (45 Präsenzzeit / 75 Selbststudium)
Lehrveranstaltungssprache von Softwarekonstruktion (SWK): Deutsch
Lehrinhalte von Softwarekonstruktion (SWK): Das Modul befasst sich mit der ingenieurmäßigen Konstruktion großer Softwaresysteme und vertieft die in der Veranstaltung Softwaretechnik diskutierten Vorgehensweisen. Es werden praktische Fragen zur Verifikation, Spezifikation von Systemen und Softwarearchitekturen behandelt. Die Schwerpunkte liegen auf der Einführung in konkrete Verifikationsmethoden, der Diskussion von Spezifikationssprachen und der Studie von Softwarearchitekturen.
Kompetenzen von Softwarekonstruktion (SWK): Die Studierenden sollen die grundlegenden Prinzipien der ingenieurmäßigen Konstruktion von Software beherrschen und auf mittelgroße Probleme anwenden können. Sie sollen formale Spezifikationssprachen zur Beschreibung von Systemarchitekturen nutzen können und Ansätze aus der Logik zur Überprüfung von Systementwürfen verstehen und anwenden können. Außerdem sollen sie die Organisation großer Softwaresysteme unter verschiedenen Gesichtspunkten prüfen können.
Prüfungen von Softwarekonstruktion (SWK): Modulprüfung: Klausur BOSS-NR. 65191 Studienleistung: • Übungsschein in Element 2 BOSS-NR. 65141 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Softwarekonstruktion (SWK): Erfolgreich abgeschlossen: 1 Modul „Software-Technik (SWT)“ Vorausgesetzte Kenntnisse: Gründliche Kenntnisse des objektorientierten Programmierparadigmas; vertiefte Programmierpraxis, bevorzugt in der Programmiersprache Java. Erfolgreich abgeschlossenes Modul "Software-Praktikum" war im Sommersemester 2015 Voraussetzung für die Teilnahme an der Modulprüfung oder außer Kraft gesetztes Modul „Software-Entwicklung (SE)“.
Modultyp und Verwendbarkeit des Moduls Softwarekonstruktion (SWK): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik Katalog: Konzepte für Software
Modulbeauftragte/r von Softwarekonstruktion (SWK): Prof. Dr. J. Rehof, Prof. Dr. F. Howar
Zuständige Fakultät von Softwarekonstruktion (SWK): Informatik


Name des Moduls: Übersetzerbau (ÜB)
Englischer Modultitel: Compiler Construction
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab dem 5. Semester
Credits: 4
Aufwand: 120 Stunden (45 Präsenzzeit / 75 Selbststudium)
Lehrveranstaltungssprache von Übersetzerbau (ÜB): Deutsch
Lehrinhalte von Übersetzerbau (ÜB): Die Lehrveranstaltung behandelt Grundlagen des Entwurfs und der Realisierung von Compilern. Insbesondere werden die relevanten Phasen eines optimierenden Compilers detailliert betrachtet: Lexikalische Analyse (reguläre Sprachen, endliche Automaten, Scanner), Syntaxanalyse (Top-Down und Bottom-Up Parser), konkrete und abstrakte Syntax, statisch semantische Analyse (Symboltabelle und Typüberprüfung), Laufzeitsystem (insbesondere Verwaltung von Stack und Heap), Codeerzeugung und Programmoptimierung. Zusätzlich werden auch Themen wie virtuelle Maschinen, Bootstrapping und die Übersetzung für deklarative Programmiersprachen angeschnitten.
Kompetenzen von Übersetzerbau (ÜB): Die Studierenden sollen grundlegende Entwurfs- und Implementierungstechniken kennenlernen, die mit der Parsierung, Analyse und/oder Transformation symbolischer Daten zu tun haben. Der Einsatz unterstützender Generatorwerkzeuge wird von prinzipieller und praktischer Seite beleuchtet.
Prüfungen von Übersetzerbau (ÜB): Modulprüfung: Klausur (120 Minuten) oder mündliche Prüfung BOSS-NR. 65291. Studienleistung: • Aktive Teilnahme (inkl. Präsentation eigener Lösungen) • Erreichen der Mindestpunktzahl der Übungsaufgaben BOSS-NR. 65241 Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Übersetzerbau (ÜB): Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: Programmiersprachliche Konstrukte. Wünschenswerte Kenntnisse: Modul „Grundbegriffe der Theoretischen Informatik (GTI)“ bzw. Modul „Theoretische Informatik für Angewandte Informatik“, Modul „Funktionale Programmierung“.
Modultyp und Verwendbarkeit des Moduls Übersetzerbau (ÜB): Wahlpflicht-Modul im Bachelor-Studiengang Informatik und Angewandte Informatik. Katalog: Konzepte für Software.
Modulbeauftragte/r von Übersetzerbau (ÜB): Prof. Dr. B. Steffen, Dr. O. Rüthing
Zuständige Fakultät von Übersetzerbau (ÜB): Informatik


Name des Moduls: Funktionale Programmierung (FuPro) 
Englischer Modultitel: Functional Programming
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: In der Regel jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: Ab dem 5. Semester
Credits: 4
Aufwand: 120 Stunden (45 Präsenzzeit / 75 Selbststudium)
Lehrveranstaltungssprache von Funktionale Programmierung (FuPro) : Deutsch
Lehrinhalte von Funktionale Programmierung (FuPro) : Die Lehrveranstaltung führt ein in Konzepte und Anwendungen funktionaler, musterbasierter und monadischer Programmierung anhand der zur Zeit mächtigsten und am weitesten verbreiteten funktionalen Programmiersprache Haskell. Der Kern eines funktionalen Programms ist ein System rekursiver Gleichungen zwischen funktionalen Ausdrücken. Seine Ausführung besteht – wie in der Algebra – in der Auswertung von Ausdrücken durch Anwendung der Gleichungen. Auch die Eingabe- und Ausgabedaten sind funktionale Ausdrücke, wobei hier die Funktionen auf Konstruktoren beschränkt sind, die allein den Aufbau der Daten(muster) beschreiben. Dieses Sprachmodell und der damit einhergehende Programmierstil unterscheiden sich zunächst stark von dem einer objektorientierten, imperativen und zustandsorientierten Sprache wie Java. Sie erlauben in der Regel weitaus problemnahere, häufig sehr flexible und generische Lösungen, die leicht an neue Anforderungen, modifizierte Datenstrukturen, etc., anpassbar sind. Darüber hinaus lassen sich diese Charakteristika funktionaler Programme mithilfe von Typklassen, insbesondere den monadischen, auch auf zustandsorientierte Lösungen übertragen, die deterministische, nichtdeterministische oder um differenzierte Ausnahmebehandlungen erweiterte Berechnungen realisieren. Schließlich lassen sich in Haskell auch klassischerweise der logischen oder relationalen Programmierung vorbehaltene Aufgaben lösen wie die Beantwortung prädikatenlogischer Anfragen, speziell die Lösung von Gleichungen. Dies ist eine Konsequenz der meistens lazy evaluation genannten call-by-need Strategie, der die Ausführung jedes Haskell-Programms folgt. Sie erlaubt u. a. auch das Rechnen mit potentiell unendlichen Datenströmen, Prozessbäumen, etc. Es geht also bei dieser Lehrveranstaltung neben dem Kennenlernen eines weiteren Programmierstils um die Klassifikation aller wichtigen Programm- und Datenstrukturen auf der Basis mathematischer Modelle und deren mehr oder weniger direkter Implementierung in Haskell. Umgekehrt wird Haskell damit auch als kompakte Modellierungs- und Entwurfssprache einsetzbar, in der sich formale Modelle direkt ausführen lassen (rapid prototyping).
Kompetenzen von Funktionale Programmierung (FuPro): Die Studierenden lernen den Umgang mit Konzepten funktionaler, musterbasierter und monadischer Programmierung und deren Einsatz in verschiedenen Anwendungsbereichen. Sie werden damit u. a. vorbereitet auf Wahlpflicht-Lehrveranstaltungen wie Übersetzerbau und das Fachprojekt Rapid Prototyping. Außerdem lernen sie, wie diese Konzepte nicht nur zur Lösung reiner Implementierungsaufgaben, sondern auch zur präzisen Modellierung verwendet werden können, was sie wiederum befähigt, die Konzepte sowie entsprechende Werkzeuge auch in Arbeitsumgebungen zu nutzen, in denen nichtfunktionale Implementierungssprachen vorherrschen. Das ist vor allem deshalb möglich, weil – wie in der Lehrveranstaltung gezeigt wird – auch zustandsorientierte und logische Programmierung Spezialfälle der funktionalen sind.
Prüfungen von Funktionale Programmierung (FuPro): Modulprüfung: Klausur oder mündliche Prüfung BOSS-NR. 61891. Studienleistung: • Aktive Mitarbeit in der Übung und Erreichen der Mindestpunktzahl der Übungsaufgaben oder erfolgreiche Teilnahme an einem midterm-Test nach Ankündigung des Veranstalters. Die Studienleistung ist Voraussetzung für die Teilnahme an der Klausur.
Teilnahmevoraussetzungen von Funktionale Programmierung (FuPro): Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: Modul „Datenstrukturen Algorithmen und Programmierung 1 (DAP 1)“, „Datenstrukturen Algorithmen und Programmierung 2 (DAP 2)“, Modul „Mathematik für Informatik 1“ oder Modul „Höhere Mathematik 1“, Modul „Mathematik für Informatik 2“ oder Modul „Höhere Mathematik 2“.
Modultyp und Verwendbarkeit des Moduls Funktionale Programmierung (FuPro): Wahlpflicht-Modul im Bachelor-Studiengang Informatik und Angewandte Informatik. Katalog: Konzepte für Software.
Modulbeauftragte/r von Funktionale Programmierung (FuPro): Prof. Dr. J. Rehof
Zuständige Fakultät von Funktionale Programmierung (FuPro): Informatik


Name des Moduls: Effiziente Algorithmen (EA)
Englischer Modultitel: Efficient Algorithms
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab dem 5. Semester
Credits: 8
Aufwand: 240 Stunden (90 Präsenzzeit / 150 Selbststudium)
Lehrveranstaltungssprache von Effiziente Algorithmen (EA): Deutsch
Lehrinhalte von Effiziente Algorithmen (EA): Die im Modul Datenstrukturen, Algorithmen und Programmierung 2 eingeführten Basistechniken werden vertieft und auf komplexere Probleme angewendet, hinzu kommen ausgewählte Probleme mit großen Anwendungsbereichen, weitergehende Aspekte wie Approximation und weitergehende Entwurfsmethoden wie primal-duale Ansätze.
Ziel der Veranstaltung von Effiziente Algorithmen (EA): Die Studierenden sollen in die Lage versetzt werden, die in der Praxis auftauchenden algorithmischen Probleme erfolgreich zu meistern, indem sie entscheiden können, welche der allgemein anwendbaren Methoden/Algorithmen/Datenstrukturen wann Erfolg versprechend sind.
Kompetenzen von Effiziente Algorithmen (EA): Die Studierenden sollen in die Lage versetzt werden, die in der Praxis auftauchenden algorithmischen Probleme erfolgreich zu meistern, indem sie entscheiden können, welche der allgemein anwendbaren Methoden/Algorithmen/Datenstrukturen wann Erfolg versprechend sind.
Prüfungen von Effiziente Algorithmen (EA): Modulprüfung: mündliche Prüfung oder Klausur BOSS-NR. 65391. Studienleistungen: –keine–
Teilnahmevoraussetzung von Effiziente Algorithmen (EA): Erfolgreich abgeschlossen: –keine– Vorausgesetzte Kenntnisse: Gründliche Kenntnisse der mathematischen Pflichtveranstaltungen, Modul „Datenstrukturen Algorithmen und Programmierung 2 (DAP 2)“, Modul „Grundbegriffe der Theoretischen Informatik (GTI)“ bzw. Modul „Theoretische Informatik für Angewandte Informatik“
Modultyp und Verwendbarkeit des Moduls Effiziente Algorithmen (EA): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik. Katalog: Algorithmisch-formale Grundlagen
Modulbeauftragte/r von Effiziente Algorithmen (EA): Prof. Dr. Coja-Oghlan
Zuständige Fakultät von Effiziente Algorithmen (EA): Informatik


Name des Moduls: Darstellung, Verarbeitung und Erwerb von Wissen (DVEW)
Englischer Modultitel: Representation, Processing, and Acquisition of Knowledge
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: Ab dem 5. Semester
Credits: 8
Aufwand: 240 Stunden (90 Präsenzzeit / 150 Selbststudium)
Lehrveranstaltungssprache von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Deutsch
Lehrinhalte von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Die Vorlesung behandelt symbolische Logiken, die für die Wissensrepräsentation und -verarbeitung geeignet sind, einschließlich Beschreibungslogiken und Default-Logiken. Weiterhin werden quantitative Ansätze behandelt, insbesondere probabilistische Netzwerke und Fuzzy-Theorie. Es wird auf die Behandlung unsicheren Wissens sowie auf algorithmische und implementationsrelevante Details eingegangen. Basistechniken des überwachten und unüberwachten Lernens werden für den Wissenserwerb vorgestellt. Der Teil Wissensdynamik behandelt grundsätzliche Rahmenbedingungen, die eine Wissensänderung erfüllen soll.
Ziel der Veranstaltung von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Die Studierenden sollen die grundlegenden Techniken der Wissensrepräsentation und -verarbeitung beherrschen und anwenden können, um für einen komplexen Problembereich angemessene Ansätze auswählen und die gegebene Aufgabenstellung modellieren zu können. Sie sollen Methoden kennen, um das erforderliche Wissen aus Daten oder anderen Quellen zu akquirieren, und sich mit der grundsätzlichen Problemstellung der dynamischen Veränderung von Wissen auseinandersetzen.
Kompetenzen von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Die Studierenden sollen die grundlegenden Techniken der Wissensrepräsentation und -verarbeitung beherrschen und anwenden können, um für einen komplexen Problembereich angemessene Ansätze auswählen und die gegebene Aufgabenstellung modellieren zu können. Sie sollen Methoden kennen, um das erforderliche Wissen aus Daten oder anderen Quellen zu akquirieren.
Prüfungen von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Modulprüfung: Klausur (120 Minuten) oder mündliche Prüfung (30 Minuten) BOSS-NR. 65491. Studienleistungen: –keine–
Teilnahmevoraussetzung von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Erfolgreich abgeschlossen: –keine– Vorausgesetzte Kenntnisse: Modul „Datenstrukturen Algorithmen und Programmierung 1 (DAP 1)“, Modul „Datenstrukturen Algorithmen und Programmierung 2 (DAP 2)“. Wünschenswerte Kenntnisse: Modul „Logik für Informatik“, Prolog
Modultyp und Verwendbarkeit des Moduls Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik. Katalog: Algorithmisch formale Grundlagen
Modulbeauftragte/r von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): (Studiendekan)
Zuständige Fakultät von Darstellung, Verarbeitung und Erwerb von Wissen (DVEW): Informatik


Name des Moduls: Formale Methoden des Systementwurfs (FMSE)
Englischer Modultitel: Formal Methods of System Design
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Formale Methoden des Systementwurfs (FMSE): Deutsch
Lehrinhalte von Formale Methoden des Systementwurfs (FMSE): Modellierung in verschiedenen Formalismen, insbesondere temporale Logiken und Automaten. Lose Spezifikation und Verfeinerung von Spezifikationen. (Semi-)automatische Analyse von Modellen. Diagnostik. Die Vorlesung enthält praktische Anteile, in denen die erlernten Konzepte anhand konkreter Systementwurfsszenarien umgesetzt werden.
Ziel der Veranstaltung von Formale Methoden des Systementwurfs (FMSE): Die Erfassung der Essenz und des Profils unterschiedlicher Aufgabenstellungen unter dem Aspekt der formalen Modellierbarkeit. Insbesondere sollen hier Methoden erlernt werden, die durch formale Kontrolle die Zuverlässigkeit des Modellierungsprozesses erhöhen. Einsatz von Modell-basierten Software-Entwicklungswerkzeugen.
Kompetenzen von Formale Methoden des Systementwurfs (FMSE): Die Erfassung der Essenz und des Profils unterschiedlicher Aufgabenstellungen unter dem Aspekt der formalen Modellierbarkeit. Insbesondere sollen hier Methoden erlernt werden, die durch formale Kontrolle die Zuverlässigkeit des Modellierungsprozesses erhöhen. Einsatz von Modell-basierten Software-Entwicklungswerkzeugen.
Prüfungen von Formale Methoden des Systementwurfs (FMSE): Modulprüfung: Mündliche Prüfung (30 Minuten) BOSS-NR. 65591. Studienleistungen: –keine–
Teilnahmevoraussetzung von Formale Methoden des Systementwurfs (FMSE): Erfolgreich abgeschlossen: Modul „Datenstrukturen Algorithmen und Programmierung 1 (DAP 2)“, Modul „Datenstrukturen Algorithmen und Programmierung 2 (DAP 2), mind. ein Modul aus dem Bereich Mathematik für Informatik bzw. dem Bereich Höhere Mathematik. Wünschenswerte Kenntnisse: Programmierkenntnisse
Modultyp und Verwendbarkeit des Moduls Formale Methoden des Systementwurfs (FMSE): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik. Katalog: Algorithmisch-formale Grundlagen
Modulbeauftragte/r von Formale Methoden des Systementwurfs (FMSE): Prof. Dr. B. Steffen
Zuständige Fakultät von Formale Methoden des Systementwurfs (FMSE): Informatik


Name des Moduls: Big Data Analytics (BDA)
Englischer Modultitel: Big Data Analytics (BDA)
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 3. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Big Data Analytics (BDA): Englisch
Lehrinhalte von Big Data Analytics (BDA): Der Schwerpunkt der Vorlesung liegt auf den grundlegenden Methoden des Maschinellen Lernens (ML) sowie Data Mining Algorithmen zur Wissensextraktion aus großen Datenmengen. Die einzelnen Schritte des Knowledge Discovery in Databases (KDD) Prozess werden für die explorative und automatische Datenanalyse vorgestellt. Es werden dabei die grundsätzlichen ML-Problemstellungen vorgestellt und verschiedene algorithmische Lösungen aus jedem Bereich verglichen. Darüber hinaus werden grundsätzliche Evaluierungsmethoden vorgestellt, um diese ML-Lösungen für konkrete Anwendungen bewerten zu können.
Ziel der Veranstaltung von Big Data Analytics (BDA): Fähigkeit zur Einordnung und Durchführung überwachter und unüberwachter Lernverfahren; insbesondere Beherrschung der praktischen und theoretischen Grundlagen in den Bereichen Statistik, Clustering, Klassifikation, Anomalie Erkennung sowie Frequent Itemset Mining.
Kompetenzen von Big Data Analytics (BDA): Fähigkeit zur Einordnung und Durchführung überwachter und unüberwachter Lernverfahren; insbesondere Beherrschung der praktischen und theoretischen Grundlagen in den Bereichen Statistik, Clustering, Klassifikation, Anomalie Erkennung sowie Frequent Itemset Mining.
Prüfungen von Big Data Analytics (BDA): Modulprüfung: Mündliche Prüfung oder Klausur BOSS-NR. 65592. Studienleistungen: –keine–. Freiwillige semesterbegleitende Leistungen gem. §19 Abs.7 BPO: Bearbeitung eines speziellen Übungsblattes Die Details werden zu Beginn der Veranstaltung bekanntgegeben.
Teilnahmevoraussetzung von Big Data Analytics (BDA): Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1 (Mafi1)“, Modul „Mathematik für Informatik 2 (Mafi2)“ bzw. Modul „Höhere Mathematik I (HöMa1)“, Modul „Höhere Mathematik II (HöMa2)“
Modultyp und Verwendbarkeit des Moduls Big Data Analytics (BDA): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik. Katalog: algorithmisch-formale Grundlagen
Modulbeauftragte/r von Big Data Analytics (BDA): Prof. Dr. E. Müller
Zuständige Fakultät von Big Data Analytics (BDA): Informatik


Name des Moduls: Probabilistic Reasoning and Machine Learning (PRML)
Englischer Modultitel: Probabilistic Reasoning and Machine Learning (PRML)
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 3. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Probabilistic Reasoning and Machine Learning (PRML): Englisch
Lehrinhalte von Probabilistic Reasoning and Machine Learning (PRML): Der Dieses Modul vermittelt grundlegendes Wissen zu folgenden Themen: • Probability, frequentist statistics, Bayesian statistics • Supervised learning, unsupervised learning • Generative vs discriminative models • Linear regression, linear discriminant analysis • Gaussian processes • Support vector machines • Kernel trick, kernel PCA • Graphical models • Neural networks
Ziel der Veranstaltung von Probabilistic Reasoning and Machine Learning (PRML): Fähigkeit Studierende sollen nach Absolvierung der Lehrveranstaltung in der Lage sein, • die Grundlagen des Maschinellen Lernens zu beschreiben und anzuwenden • die mathematische Beschreibung dieser Grundlagen zu erklären und einfache Sachverhalte zu beweisen • die Grundlagen und ihre mathematischen Beschreibungen anzuwenden, um selbständig Datenanalyseprobleme zu bearbeiten
Kompetenzen von Probabilistic Reasoning and Machine Learning (PRML): Fähigkeit Studierende sollen nach Absolvierung der Lehrveranstaltung in der Lage sein, • die Grundlagen des Maschinellen Lernens zu beschreiben und anzuwenden • die mathematische Beschreibung dieser Grundlagen zu erklären und einfache Sachverhalte zu beweisen • die Grundlagen und ihre mathematischen Beschreibungen anzuwenden, um selbständig Datenanalyseprobleme zu bearbeiten
Prüfungen von Probabilistic Reasoning and Machine Learning (PRML): Modulprüfung: Mündliche Prüfung oder Klausur BOSS-NR. ????? Studienleistung: • Erreichen einer Mindestzahl von Punkten der Übungsaufgaben gemäß Ankündigung BOSS-NR. ????? Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Probabilistic Reasoning and Machine Learning (PRML): Erfolgreich abgeschlossen: –keine– Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1 (Mafi1)“, Modul „Mathematik für Informatik 2 (Mafi2)“ bzw. Modul „Höhere Mathematik I (HöMa1)“, Modul „Höhere Mathematik II (HöMa2)“
Modultyp und Verwendbarkeit des Moduls Probabilistic Reasoning and Machine Learning (PRML): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik Katalog: algorithmisch-formale Grundlagen
Modulbeauftragte/r von Probabilistic Reasoning and Machine Learning (PRML): Prof. Dr. S. Harmeling
Zuständige Fakultät von Probabilistic Reasoning and Machine Learning (PRML): Informatik


Name des Moduls: Rechnerarchitektur (RA)
Englischer Modultitel: Computer Architecture
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Rechnerarchitektur (RA): Deutsch
Lehrinhalte von Rechnerarchitektur (RA): In dieser Vorlesung werden fortgeschrittene Konzepte der Rechnerarchitektur vorgestellt. Am Anfang steht ein breiter Überblick über mögliche Programmiermodelle, wie sie für Universalrechner (z. B. MIPS-Architektur) aber auch spezielle Maschinen (z.B. Signalprozessoren) entwickelt wurden. Anschließend werden prinzipielle Aspekte der Mikroarchitektur von Prozessoren behandelt. Der Schwerpunkt liegt hierbei insbesondere auf dem sogenannten Pipelining und den in diesem Zusammenhang angewandten Methoden zur Beschleunigung der Befehlsausführung. Im letzten Abschnitt werden Rechensysteme mit mehr als einem Prozessor bzw. mehreren Recheneinheiten betrachtet. Ausgehend von der nebenläufigen Verarbeitung mit Hilfe von sogenannten Threads werden Architekturen mit unterschiedlichem Kopplungsgrad zwischen den Berechnungs- und den verwendeten Speichereinheiten vorgestellt, wie z.B. Multi-Core-Systeme, Multiprozessoren und Cluster-Rechner.
Ziel der Veranstaltung von Rechnerarchitektur (RA): Nach dem Besuch der Veranstaltung sollen die Studierenden in der Lage sein, die Möglichkeiten und die Grenzen moderner, komplexer Rechensysteme beurteilen zu können und dabei Kenntnisse über Rechensystemen im Rahmen von komplexen Systementwürfen einsetzen können. Ein Teilziel liegt bei Kompetenzen in der Anwendung der Servertechnologie, wie sie bei späteren Tätigkeiten beispielsweise in Rechenzentren und Banken benötigt wird. Speziell sollen Studierende die verschiedenen Ansätze zur Lösung der bei Parallelrechnern auftretenden Probleme in praktischen Projekten einsetzen können.
Kompetenzen von Rechnerarchitektur (RA): Nach dem Besuch der Veranstaltung sollen die Studierenden in der Lage sein, die Möglichkeiten und die Grenzen moderner, komplexer Rechensysteme beurteilen zu können und dabei Kenntnisse über Rechensystemen im Rahmen von komplexen Systementwürfen einsetzen können. Ein Teilziel liegt bei Kompetenzen in der Anwendung der Servertechnologie, wie sie bei späteren Tätigkeiten beispielsweise in Rechenzentren und Banken benötigt wird. Speziell sollen Studierende die verschiedenen Ansätze zur Lösung der bei Parallelrechnern auftretenden Probleme in praktischen Projekten einsetzen können.
Prüfungen von Rechnerarchitektur (RA): Modulprüfung: Klausur BOSS-NR. 65691
Studienleistungen: –keine–
Teilnahmevoraussetzung von Rechnerarchitektur (RA): Erfolgreich abgeschlossen: Modul „Rechnerstrukturen (RS)“. Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1 (M1)“ oder Modul „Höhere Mathematik 1 (HM1)“, Modul „Mathematik für Informatik 2 (M2)“ oder Modul „Höhere Mathematik 2 (HM2)“. Wünschenswerte Kenntnisse: Modul „Elektrotechnik und Kommunikationstechnik (ETKT)“ oder Modul „Grundlagen der Elektrotechnik“ bei Nebenfach Elektrotechnik, Modul „Betriebssysteme (BS)“, Modul „Hardware-Praktikum (HaPra)“, Automatenmodelle, Kirchhoff’sche Gleichungen.
Modultyp und Verwendbarkeit des Moduls Rechnerarchitektur (RA): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Rechnerarchitektur (RA): Prof. Dr.-Ing. G. A. Fink; Prof. Dr. J. Chen
Zuständige Fakultät von Rechnerarchitektur (RA): Informatik


Name des Moduls: Eingebettete Systeme (ES)
Englischer Modultitel: Embedded Systems
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Eingebettete Systeme (ES): Deutsch
Lehrinhalte von Eingebettete Systeme (ES): Studierende sollen eine Übersicht über die Basistechniken Eingebetteter Systeme erhalten, Eingebettete Systeme sind Systeme, bei denen eine Informationsverarbeitung in eine Umgebung eingebettet ist. In der Vorlesung werden die Grundzüge solcher Systeme vermittelt. Die Vorlesung behandelt insbesondere eine Einführung in diese Systeme (Begriffsbildung, charakteristische Eigenschaften) und deren Spezifikationssprachen (models of computation, hierarchische Zustandsautomaten, Spezifikation von verteilten Systemen, Task-Graphen, Spezifikation von RealzeitAnwendungen, Übersetzung zwischen Modellen).
Ein weiterer Abschnitt behandelt Hardware eingebetteter Systeme: Sensoren, A/D- und D/AWandler, realzeitfähige Kommunikationshardware, eingebettete Prozessoren, Speicher, Energiebedarf, rekonfigurierbare Logik und Aktuatoren. Zum Modul gehört auch eine Einführung in Realzeitbetriebssysteme, Middleware und Realzeit-Scheduling. Schließlich wird auf die Implementierung eingebetteter Systeme mittels Hardware/Software Codesign (Hardware-/ Software-Partitionierung, high-level Transformationen der Spezifikation, energieeffiziente Realisierungen, Compiler für eingebettete Prozessoren, exemplarische Vorstellung von CodesignSystemen) eingegangen. Ein kurzer Abschnitt über Validierung (Fehlermodelle, Test von Automaten, design for testability, Fehlerbäume, Verifikation) rundet das Modul ab.
Ziel der Veranstaltung von Eingebettete Systeme (ES): Nach dem Besuch der Veranstaltung sollen die Studierenden in der Lage sein, einfache eingebettete Systeme zu entwickeln. Dabei sollen die Studierenden erkennen können, welche relevanten Bereiche technologischer Kompetenzen eingesetzt werden müssen, um ein funktionierendes eingebettetes System zu erhalten. Insbesondere sollen sie Modellierungstechniken miteinander vergleichen und geeignete Techniken zur Systementwicklung einsetzen können. Sie sollen beurteilen können, in welchen Bereichen besondere Risiken bestehen. Die Veranstaltung soll die Studierenden in die Lage versetzen, sich den Zugang zu Forschungsthemen erschließen.
Kompetenzen von Eingebettete Systeme (ES): Nach dem Besuch der Veranstaltung sollen die Studierenden in der Lage sein, einfache eingebettete Systeme zu entwickeln. Dabei sollen die Studierenden erkennen können, welche relevanten Bereiche technologischer Kompetenzen eingesetzt werden müssen, um ein funktionierendes eingebettetes System zu erhalten. Insbesondere sollen sie Modellierungstechniken miteinander vergleichen und geeignete Techniken zur Systementwicklung einsetzen können. Sie sollen beurteilen können, in welchen Bereichen besondere Risiken bestehen. Die Veranstaltung soll die Studierenden in die Lage versetzen, sich den Zugang zu Forschungsthemen erschließen.
Prüfungen von Eingebettete Systeme (ES): 
  Modulprüfung: Klausur (90 Minuten) BOSS-NR. 65791
  Studienleistung: Aktive Teilnahme (inkl. Präsentation eigener Lösungen). Erreichen einer Mindestzahl von Punkten der Übungsaufgaben BOSS-NR. 65741. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Eingebettete Systeme (ES): Erfolgreich abgeschlossen: Modul „Rechnerstrukturen (RS)“. Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1“, Modul „Betriebssysteme (BS)“. Wünschenswerte Kenntnisse: Automatenmodelle, Modul „Hardware-Praktikum“, Modul „Elektrotechnik und Kommunikationstechnik“, Kirchhoff'sche Gleichungen.
Modultyp und Verwendbarkeit des Moduls: Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Eingebettete Systeme (ES): Prof. Dr. J.-J. Chen
Zuständige Fakultät von Eingebettete Systeme (ES): Informatik


Name des Moduls: Modellgestützte Analyse und Optimierung (MAO)
Englischer Modultitel: Model-Based Analysis and Optimization
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Modellgestützte Analyse und Optimierung (MAO): Deutsch
Lehrinhalte von Modellgestützte Analyse und Optimierung (MAO): Die Vorlesung beginnt mit einer Einführung in die System- und Modelltheorie. In diesem Teil werden die grundlegenden Begriffe Modellierung, Simulation und Optimierung festgelegt und verschiedene Modelltypen definiert. Der zweite Teil der Vorlesung beschäftigt sich mit der Analyse von Systemen und behandelt ausführlich die simulative Analyse ereignisdiskreter stochastischer Systeme. Dazu wird auf die Struktur von ereignisdiskreten Simulatoren und auf Methoden zur Datenmodellierung, Realisierung von Zufallszahlen und Simulationsauswertung eingegangen. Die theoretischen Erkenntnisse der Vorlesung werden in der Übung durch praktisches Arbeiten mit Modellierungs-und Simulationswerkzeugen ergänzt. Der dritte Teil der Vorlesung behandelt die Optimierung von Systemen. Der Schwerpunkt liegt dabei auf Methoden zur Optimierung diskreter und stochastischer Probleme.
Ziel der Veranstaltung von Modellgestützte Analyse und Optimierung (MAO): Die modellbasierte rechnergestützte Analyse ersetzt in zahlreichen Anwendungsgebieten das Experimentieren an realen Objekten. Im Rahmen des Moduls sollen die Studierenden die Fertigkeit erlangen, für ein gegebenes Problem aus der Systemanalyse und -optimierung ein adäquates Modell zu erstellen, dieses zu analysieren und eine optimale oder verbesserte Systemkonfiguration herzuleiten. Dieses Vorgehen setzt neben fundierten Methodenkompetenzen in der Modellbildung, -analyse und Optimierung, auch Fertigkeiten im praktischen Umgang mit Modellierungs- und Analysesoftware voraus. Diese Fertigkeiten werden insbesondere in den Übungen geschult.
Kompetenzen von Modellgestützte Analyse und Optimierung (MAO): Die modellbasierte rechnergestützte Analyse ersetzt in zahlreichen Anwendungsgebieten das Experimentieren an realen Objekten. Im Rahmen des Moduls sollen die Studierenden die Fertigkeit erlangen, für ein gegebenes Problem aus der Systemanalyse und -optimierung ein adäquates Modell zu erstellen, dieses zu analysieren und eine optimale oder verbesserte Systemkonfiguration herzuleiten. Dieses Vorgehen setzt neben fundierten Methodenkompetenzen in der Modellbildung, -analyse und Optimierung, auch Fertigkeiten im praktischen Umgang mit Modellierungs- und Analysesoftware voraus. Diese Fertigkeiten werden insbesondere in den Übungen geschult.
Prüfungen von Modellgestützte Analyse und Optimierung (MAO): 
  Modulprüfung: Mündliche Prüfung (20–30 Minuten) BOSS-NR. 65891
  Studienleistung: –keine–
Teilnahmevoraussetzung von Modellgestützte Analyse und Optimierung (MAO): Vorausgesetzte Kenntnisse: Grundkenntnisse in Wahrscheinlichkeitsrechnung und Statistik. Wünschenswerte Kenntnisse: Programmierkenntnisse.
Modultyp und Verwendbarkeit des Moduls Modellgestützte Analyse und Optimierung (MAO): Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Katalog: Systeme der Informatik
Modulbeauftragte/r von Modellgestützte Analyse und Optimierung (MAO): Prof. Dr. P. Buchholz
Zuständige Fakultät von Modellgestützte Analyse und Optimierung (MAO): Informatik


Name des Moduls: Mensch-Maschine-Interaktion (MMI)
Englischer Modultitel: Human Computer Interaction
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 8
Aufwand: 240 (90/150)
Lehrveranstaltungssprache von Mensch-Maschine-Interaktion (MMI): Deutsch
Lehrinhalte von Mensch-Maschine-Interaktion (MMI): Gegenstand des Moduls sind Techniken und Methoden zur Realisierung und Gestaltung der Interaktion von Menschen mit rechnergestützten technischen Systemen. Behandelte Schwerpunkte sind Basistechniken interaktiver Systeme, Interaktionstechniken und Interaktionsstile sowie die Entwicklung und Evaluierung interaktiver Systeme. Die Basistechniken umfassen die interaktive Computergraphik, die Verarbeitung von Sensordaten und die Verarbeitung gesprochener Sprache. Wesentliche Gegenstände des Abschnitts über Interaktionstechniken und Interaktionsstile sind die 2D-Bildschirm-zentrierte Interaktion in Form der weit vorbereiteten WIMP (Windows-Icons-MenusPointer)-Interaktion sowie räumlich-immersive, virtuelle und erweiterte reale Umgebungen. Inhalte des Abschnitts über Entwicklung und Evaluierung sind interaktionsrelevante physiologische, psychologische und ethische Aspekte, die Interaktionsgestaltung, sowie die Konstruktion und Ansätze zur Evaluierung interaktiver Systeme. Gegenstand der Übungen soll zum einen eine aktive Auseinandersetzung mit Konzepten, zum anderen das praktische Erlernen anhand existierender Systeme sein.
Ziel der Veranstaltung von Mensch-Maschine-Interaktion (MMI): Die Studierenden sollen das Gebiet der Mensch-Maschine-Interaktion so weit überblicken, dass sie in der Lage sind, weitergehendes Wissen aufzufinden, sich anzueignen und anzuwenden, das für den Entwurf und die Realisierung interaktiver Benutzungsschnittstellen für vielfältige Anwendungen unter Berücksichtigung von ergonomischen Randbedingungen notwendig ist. Sie sollen über methodische Grundkenntnisse verfügen, benutzungsfreundliche interaktive Systeme auf Grundlage heutiger Technologie zu realisieren. Sie sollen aber auch darüber hinaus denken können, um neuartige Interaktionsszenarien in Forschung und Entwicklung auf Basis aktueller technologischer Entwicklungen unter Berücksichtigung ergonomischer Anforderungen und ethischer Aspekte zu konzipieren.
Kompetenzen von Mensch-Maschine-Interaktion (MMI): Die Studierenden sollen das Gebiet der Mensch-Maschine-Interaktion so weit überblicken, dass sie in der Lage sind, weitergehendes Wissen aufzufinden, sich anzueignen und anzuwenden, das für den Entwurf und die Realisierung interaktiver Benutzungsschnittstellen für vielfältige Anwendungen unter Berücksichtigung von ergonomischen Randbedingungen notwendig ist. Sie sollen über methodische Grundkenntnisse verfügen, benutzungsfreundliche interaktive Systeme auf Grundlage heutiger Technologie zu realisieren. Sie sollen aber auch darüber hinaus denken können, um neuartige Interaktionsszenarien in Forschung und Entwicklung auf Basis aktueller technologischer Entwicklungen unter Berücksichtigung ergonomischer Anforderungen und ethischer Aspekte zu konzipieren.
Prüfungen von Mensch-Maschine-Interaktion (MMI): 
  Modulprüfung: Klausur (90 Minuten) oder mündliche Prüfung (20-30 Minuten) BOSS-NR. 65991
  Studienleistungen: –keine–
Teilnahmevoraussetzung von Mensch-Maschine-Interaktion (MMI): Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2)“, Modul „Software-Technik (SWT)“, Modul „Rechnerstrukturen (RS)“, Modul „Mathematik für Informatik 1 (MafI1)“, Modul „Mathematik für Informatik 2 (MafI2)“ bzw. Modul „Höhere Mathematik I (HM1)“, Modul „Höhere Mathematik II (HM2)“.
Vorausgesetzte Kenntnisse: Modul „Software-Technik (SWT)“, Modul „Rechnerstrukturen (RS)“, Modul „Mathematik für Informatik 1 (MafI1)“, Modul „Mathematik für Informatik 2 (MafI2)“ bzw. Modul „Höhere Mathematik I (HM1)“, Modul „Höhere Mathematik II (HM2)“.
Modultyp und Verwendbarkeit des Moduls Mensch-Maschine-Interaktion (MMI): Wahlpflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Katalog: Systeme der Informatik
Modulbeauftragte/r von Mensch-Maschine-Interaktion (MMI): Dr. Frank Weichert
Zuständige Fakultät von Mensch-Maschine-Interaktion (MMI): Informatik


Name des Moduls: Fachprojekt „Design of Embedded Systems“
Englischer Modultitel: Undergraduate Project „Design of Embedded Systems“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Design of Embedded Systems“: Englisch
Lehrinhalte von Fachprojekt „Design of Embedded Systems“: 
  This module offers the students exemplary designs and implementations of embedded systems. The detailed subjects change over time. Currently, the following subjects are offered:
  - Programming and resource management for mobile/small devices: Mobile/small devices have special requirements in the usage of resources. This project will use embedded platforms, such as Raspberry Pi, Arduino, etc. Students will learn how to install and customize an embedded real-time operating system on such mobile/small platforms and manage the available resources to improve the performance or lifetime of the system.
  - Design and evaluation of multicore embedded systems: Some embedded systems require high performance under energy budgets. This has motivated multicore embedded platforms such as big.LITTLE architecture by ARM. This project offers students to explore such platforms and design software and management strategies to use the resources effectively.
  - Software modularization and programming for cyber-physical systems (CPS): This offers a project for students to consider the hardware-in-the-loop CPS, such as robots. The students should create and implement a demonstrated CPS. Students learn an example of how A/D converts, information processing, D/A converts, and communications should be designed to make the system behavior predictable.
  - Model-based design for embedded systems: In this case, we will study how to design an embedded system by using model-based designs. The benefit for such designs is that the programs generated by the models are easier to be analyzed and integrated. Students will learn different formal models of computation for designing embedded systems.
Ziel der Veranstaltung von Fachprojekt „Design of Embedded Systems“: After attending the project, the students can build their confidence and experience for designing complex embedded systems from themselves. They should be able to apply programming languages (depending on the projects), formal models, and tools to implement the design. This project can improve their competence to integrate software and hardware components.
Kompetenzen von Fachprojekt „Design of Embedded Systems“: After attending the project, the students can build their confidence and experience for designing complex embedded systems from themselves. They should be able to apply programming languages (depending on the projects), formal models, and tools to implement the design. This project can improve their competence to integrate software and hardware components.
Prüfungen von Fachprojekt „Design of Embedded Systems“: 
  Voraussetzungen für den Modulabschluss:
  (1) Abschlusspräsentation (Project presentation) BOSS-NR. 88692
  (2) Erfolgreiches Design und Bearbeitung der gestellten Aufgaben (Successful design and implementation of the offered subject)
  BOSS-NR. –keine–
  Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzung von Fachprojekt „Design of Embedded Systems“: Erfolgreich abgeschlossen: Modul „Rechnerstrukturen (RS)“
Wünschenswerte Kenntnisse: Modul „Hardware-Praktikum (HaPra)“ (oder Modul „Hardware-Praktikum (HaPra)“ für Studierende mit Nebenfach Elektrotechnik), Modul „Elektrotechnik und Kommunikationstechnik“ oder Modul „Grundlagen der Elektrotechnik“ bei Nebenfach Elektrotechnik
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Design of Embedded Systems“: Wahlpflicht-Modul im Bachelor-Studiengang Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Design of Embedded Systems“: Prof. Dr. J.-J. Chen
Zuständige Fakultät von Fachprojekt „Design of Embedded Systems“: Informatik


Name des Moduls: Fachprojekt „Modellbildung und Simulation“
Englischer Modultitel: Undergraduate Project „Models and Simulation”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Modellbildung und Simulation“: Deutsch / Englisch
Lehrinhalte von Fachprojekt „Modellbildung und Simulation“: 
  Das Fachprojekt gliedert sich in zwei Teile. Im ersten Teil werden durch Bearbeitung von Standardaufgaben grundlegende Konzepte praktisch eingeübt und die eingesetzten Softwaresysteme kennen und nutzen gelernt. Der zweite Teil besteht aus einer umfangreicheren Modellierungsaufgabe, die in Gruppenarbeit gelöst werden soll.
  Die Standardaufgaben umfassen einfache Simulations- und Optimierungsaufgaben. Beispiele sind:
  - Modellierung und Simulation einer Autowaschstraße
  - Modellierung und Optimierung eines Scheduling-Problems
  - Stochastische Modellierung von Zwischenankunftszeiten von Anfragen an einem Web-Server
  - Entwurf einer optimalen Bestellstrategie für ein Lager bei bekannter Nachfrage.
  Die Projektaufgaben werden jeweils neu gestellt und berücksichtigen jeweils den vollständigen Zyklus der modellgestützten Analyse. Von der realen Problemstellung, über die Modellbildung und Datenerhebung, zur Modellanalyse bis hin zur Systemverbesserung durch Optimierung des Modells.
  Die Gruppengröße beträgt 3 bis 4 Studierende.
Ziel der Veranstaltung von Fachprojekt „Modellbildung und Simulation“: Die Studierenden erwerben Problemlösungskompetenzen im Bereich der modellbasierten Systemanalyse. Durch das Arbeiten in Gruppen werden ferner kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erfordert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Kompetenzen von Fachprojekt „Modellbildung und Simulation“: Die Studierenden erwerben Problemlösungskompetenzen im Bereich der modellbasierten Systemanalyse. Durch das Arbeiten in Gruppen werden ferner kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erfordert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Prüfungen von Fachprojekt „Modellbildung und Simulation“: 
  Voraussetzung für den Modulabschluss:
  - Dokumentation und Vorführung der Einzelaufgaben BOSS-NR. 66391
Teilnahmevoraussetzung von Fachprojekt „Modellbildung und Simulation“: Erfolgreich abgeschlossen: -keine-
Vorausgesetzte Kenntnisse: Wahlpflichtmodul „Modellgestützte Analyse und Optimierung“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Modellbildung und Simulation“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Modellbildung und Simulation“: Prof. Dr. P. Buchholz
Zuständige Fakultät von Fachprojekt „Modellbildung und Simulation“: Informatik


Name des Moduls: Fachprojekt „Rapid Prototyping mit Expander 2/3“
Englischer Modultitel: Undergraduate Project „Rapid Prototyping with Expander 2/3”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Rapid Prototyping mit Expander 2/3“: Deutsch
Lehrinhalte von Fachprojekt „Rapid Prototyping mit Expander 2/3“: 
  Expander2/3 ist ein Haskell-basiertes Spezifikations-, Verifikations- und Darstellungswerkzeug mit einer Tcl/Tk- bzw. GTK-Schnittstelle für graphische Darstellungen, Interaktionen und Animationen. Den Prinzipien funktionaler Programmierung folgend, sind die Features von Expander2/3 orthogonal organisiert und daher offen für Spezialisierungen und Erweiterungen, sowohl der (als Haskell-Programme) integrierten Algorithmen als auch von BenutzerInnen spezifizierter formaler Modelle, die mit dem System ausgeführt werden können.
  Die Projektaufgabe wird zu Beginn der LV in Abstimmung mit ihren TeilnehmerInnen und deren jeweiligen Kenntnissen und Studienschwerpunkten festgelegt. Sie kann eine Spezialisierung oder Erweiterung in obigem Sinne sein oder in der Entwicklung von Spezifikationen in einem bestimmten Anwendungsbereich bestehen.
  Die Spezifikationssprache von Expander2/3 umfasst Funktionen und Prädikate höherer Ordnung, die Anfrage-, Beschreibungs- oder dynamische Logiken charakterisieren. Insbesondere können beliebige Transitionssysteme mit strukturierten Zuständen regelbasiert spezifiziert und durch direkte Auswertung von Anfragen (Model Checking) oder mit Hilfe allgemeinerer Beweisregeln wie (Co-)Resolution und (Co-)Induktion verifiziert werden. Letztere erfordern Interaktion, können aber auch auf parametrisierte Transitionssysteme angewendet werden, während Model Checking im Sinne der Auswertung logischer Formeln automatisch ablaufen kann - bzgl. konkreter Modelle, die auch außerhalb von Expander2/3 erzeugt und dann an das System zur Weiterverarbeitung übergeben werden können.
Ziel der Veranstaltung von Fachprojekt „Rapid Prototyping mit Expander 2/3“: Die Studierenden lernen, komplexe Aufgabenstellungen logisch-algebraisch zu formulieren und Lösungen in einer darauf zugeschnittenen Programmierumgebung zu testen und schrittweise zu optimieren. Hierzu müssen Inhalte verschiedener LVs zusammengebracht werden sowie Logik und funktionale Programmierung kennzeichnende Konzepte in den abstrakten Entwurf und die konkrete Implementierung einfließen.
Kompetenzen von Fachprojekt „Rapid Prototyping mit Expander 2/3“: Die Studierenden lernen, komplexe Aufgabenstellungen logisch-algebraisch zu formulieren und Lösungen in einer darauf zugeschnittenen Programmierumgebung zu testen und schrittweise zu optimieren. Hierzu müssen Inhalte verschiedener LVs zusammengebracht werden sowie Logik und funktionale Programmierung kennzeichnende Konzepte in den abstrakten Entwurf und die konkrete Implementierung einfließen.
Prüfungen von Fachprojekt „Rapid Prototyping mit Expander 2/3“: 
  Voraussetzung für den Modulabschluss:
  - Mündliche Prüfung (30 Minuten) BOSS-NR. 66491
Teilnahmevoraussetzung von Fachprojekt „Rapid Prototyping mit Expander 2/3“: Erfolgreich abgeschlossen: –keine-
Wünschenswerte Kenntnisse: Funktionale und/oder logische Programmierung, mathematische Grundbegriffe
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Rapid Prototyping mit Expander 2/3“: Wahlpflicht-Modul im Bachelor-Studiengang Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Rapid Prototyping mit Expander 2/3“: Prof. Dr. P. Padawitz
Zuständige Fakultät von Fachprojekt „Rapid Prototyping mit Expander 2/3“: Informatik


Name des Moduls: Fachprojekt „Visual Computing“
Englischer Modultitel: Undergraduate Project „Visual Computing”
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Visual Computing“: Deutsch
Lehrinhalte von Fachprojekt „Visual Computing“: 
  Visual Computing umfasst alle Aspekte des rechnerbasierten Umgangs mit visuellen Daten. Dieses Modul ergänzt demgemäß die entsprechenden Module „Graphische Datenverarbeitung“ und „Digitale Bildverarbeitung“ um eine praktische Komponente. Das Modul gliedert sich in zwei Phasen. Gegenstand der ersten Phase ist das Kennenlernen verbreiteter Werkzeuge, Systeme und Programmierumgebungen des Gebietes, z.B. Matlab, OpenCV, OpenGL, Radiance, Maya. Dies geschieht an Aufgaben, die von zwei Studierenden innerhalb von zwei Wochen pro Aufgabe zu bearbeiten sind. In der zweiten Phase ist auf Grundlage der erworbenen Kenntnisse von jeweils bis zu vier Studierenden eine Projektaufgabe zu bearbeiten. Die zeitliche Aufteilung ist wie folgt: • Erste Woche: Einführung • Zweite bis neunte Woche: vier Aufgaben der Erprobungsphase • Zehnte bis fünfzehnte Woche: Projektaufgabe. Die Projektaufgabe kann mit geplanten Bachelor-Arbeiten in Verbindung stehen.
Ziel der Veranstaltung von Fachprojekt „Visual Computing“: Studierende sollen in der Lage sein, in der beruflichen Praxis eingesetzte Werkzeuge des Gebietes selbst zu erlernen und zur Lösung einschlägiger Aufgaben anwenden zu können. Ferner sollen sie dazu fähig sein, die Lösung einer größeren Aufgabe organisatorisch unter Einhaltung von zeitlichen Randbedingungen zu bewältigen.
Kompetenzen von Fachprojekt „Visual Computing“: Studierende sollen in der Lage sein, in der beruflichen Praxis eingesetzte Werkzeuge des Gebietes selbst zu erlernen und zur Lösung einschlägiger Aufgaben anwenden zu können. Ferner sollen sie dazu fähig sein, die Lösung einer größeren Aufgabe organisatorisch unter Einhaltung von zeitlichen Randbedingungen zu bewältigen.
Prüfungen von Fachprojekt „Visual Computing“: 
  Voraussetzung für den Modulabschluss:
  - Vorführungen zu den Aufgaben der ersten Phase, Dokumentation und Vorführung zu den Aufgaben der zweiten Phase BOSS-NR. 66591
Teilnahmevoraussetzung von Fachprojekt „Visual Computing“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP I)”. Vorausgesetzte Kenntnisse: Modul „Softwaretechnik (SWT)”.
Wünschenswerte Kenntnisse: C++-Kenntnisse
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Visual Computing“: Wahlpflicht-Modul im Bachelor-Studiengang Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Visual Computing“: Dr. Frank Weichert
Zuständige Fakultät von Fachprojekt „Visual Computing“: Informatik


Name des Moduls: Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“
Englischer Modultitel: Undergraduate Project „Technologies for Heterogeneous System Landscapes”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: 6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Deutsch und Englisch
Lehrinhalte von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Das Fachprojekt gliedert sich in zwei Teile. Im ersten Teil werden verschiedenen Aspekte (Anpassbarkeit, Langlebigkeit, Zuverlässigkeit, Robustheit, etc.) von Heterogenität an Hand von Beispielszenarien beleuchtet, und zwar sowohl von der Plattform- als auch von der Applikationsseite. Begleitend dazu finden vertiefende Übungen statt, die insbesondere dazu dienen, grundlegende Techniken und Werkzeuge kennen zu lernen. Im zweiten Teil werden diese Techniken und Werkzeuge in Gruppenarbeit zur Behandlung eines umfangreicheren Beispielszenarios eingesetzt. Die pro Semester neu konzipierten, konkreten Szenarien fokussieren jeweils auf einen Zentralaspekt, der vertiefend behandelt werden soll. So soll das Problembewusstsein geschärft und die Kritikfähigkeit bei der Auswahl von Softwarewerkzeugen und Plattformlösungen verbessert werden. Die Projektaufgaben werden jeweils neu gestellt und erfassen den für Heterogenität notwendigen Gesamtkontext. Die Gruppengröße beträgt drei bis vier Studierende.
Ziel der Veranstaltung von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Die Studierenden erwerben Problemlösungskompetenzen im Bereich heterogener Systemlandschaften. Durch das Arbeiten in Gruppen werden ferner kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erfordert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Kompetenzen von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Die Studierenden erwerben Problemlösungskompetenzen im Bereich heterogener Systemlandschaften. Durch das Arbeiten in Gruppen werden ferner kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erfordert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Prüfungen von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: 
  Voraussetzungen für den Modulabschluss:
  (1) Endpräsentation BOSS-NR. 66691
  (2) Proposalabnahme, Zwischenpräsentation BOSS-NR. –keine–
  Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzung von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Erfolgreich abgeschlossen: Modul "Datenstrukturen, Algorithmen und Programmierung 1 (DAP1)", Modul "Software-Technik (SWT)". Wünschenswerte Kenntnisse: Modul "Übersetzerbau", Modul "Softwarekonstruktion"
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Wahlpflicht-Modul im Bachelor-Studiengang Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Prof. Dr. B. Steffen
Zuständige Fakultät von Fachprojekt „Technologien zur Beherrschung heterogener Systemlandschaften“: Informatik


Name des Moduls: Fachprojekt „Service-Oriented Programming“
Englischer Modultitel: Undergraduate Project „Service-Oriented Programming”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 5./6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Service-Oriented Programming“: Deutsch und Englisch
Lehrinhalte von Fachprojekt „Service-Oriented Programming“: Das Fachprojekt beinhaltet im ersten Teil Konzepte und Technologien, die dem service-orientierten Paradigma zugrunde liegen, einschließlich Web-basierter Standards, Datenformate und Schnittstellenformate. Auch Konzepte und Techniken zur Modellierung von verteilten Systemen kommen zum Einsatz. Im zweiten Teil des Fachprojekts werden praktische Programmieraufgaben in Gruppen von einer voraussichtlichen Größe von 3–5 Studierenden gelöst. Die Aufgaben werden sich an Themen der Entwicklung von prozess-orientierten Systemen orientieren, zum Beispiel: Modellierung von Prozessen (Geschäftsprozessen) in einem ausgewählten Anwendungsgebiet, Bereitstellung von Services als Bausteine einer Implementierung, Realisierung der Prozesse durch Services, zum Beispiel durch Benutzung einer Workflow Engine oder anderer Umgebungen für Service-Orchestrierung. Software-Plattform zur Unterstützung von Prozess- und Service-orientierter Software-Entwicklung können zum Einsatz gebracht werden.
Ziel der Veranstaltung von Fachprojekt „Service-Oriented Programming“: Die Studierenden erwerben Kompetenzen im Bereich Service-Orientierung von Softwaresystemen, sowohl bezüglich Konzepten, Technologien und praktischer Umsetzung. Durch das Arbeiten in Gruppen werden ferner kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erfordert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Kompetenzen von Fachprojekt „Service-Oriented Programming“: Die Studierenden erwerben Kompetenzen im Bereich Service-Orientierung von Softwaresystemen, sowohl bezüglich Konzepten, Technologien und praktischer Umsetzung. Durch das Arbeiten in Gruppen werden ferner kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erfordert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Prüfungen von Fachprojekt „Service-Oriented Programming“: 
  Voraussetzungen für den Modulabschluss:
  (1) Dokumentation und Vorführung zu den Einzelaufgaben BOSS-NR. 66791
  (2) Die Standardaufgaben werden einzeln attestiert. BOSS-NR. –keine–
  Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzung von Fachprojekt „Service-Oriented Programming“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Software-Technik (SWT)”
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Service-Oriented Programming“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Service-Oriented Programming“: Prof. Dr. J. Rehof
Zuständige Fakultät von Fachprojekt „Service-Oriented Programming“: Informatik


Name des Moduls: Fachprojekt „Software im Automobil“
Englischer Modultitel: Undergraduate Project „Automotive Software”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Software im Automobil“: Deutsch
Lehrinhalte von Fachprojekt „Software im Automobil“: Heutige Autos sind „verteilte eingebettete Systeme auf Rädern.“ Sie basieren auf einer Vielzahl von elektronischen Steuergeräten und Bussystemen. Anhand von vorstrukturierten Übungsaufgaben wird die Softwareentwicklung in diesem Bereich praktisch geübt. Dabei kommen reale KFZ-Steuergeräte zum Einsatz. Die Arbeit erfolgt in Gruppen. Für die Bearbeitung der Aufgaben nötige Grundkenntnisse werden zu Beginn des Semesters im Rahmen eines Vorlesungsanteils vermittelt.
Ziel der Veranstaltung von Fachprojekt „Software im Automobil“: Die Studierenden erwerben Kenntnisse über die spezifischen Probleme bei der Softwareentwicklung in diesem Bereich, wie beispielsweise die Ressourcenknappheit und Variantenvielfalt, sowie über typische Fahrzeugtopologien und Steuergerätehardware. Durch praktische Anwendung von gängigen Werkzeugen, Standardschnittstellen und üblichen Entwicklungsmethoden, wird ein idealer Grundstein für den Einstieg in diese Branche, aber auch für Forschung im Bereich eingebetteter Systemsoftware gelegt.
Kompetenzen von Fachprojekt „Software im Automobil“: Die Studierenden erwerben Kenntnisse über die spezifischen Probleme bei der Softwareentwicklung in diesem Bereich, wie beispielsweise die Ressourcenknappheit und Variantenvielfalt, sowie über typische Fahrzeugtopologien und Steuergerätehardware. Durch praktische Anwendung von gängigen Werkzeugen, Standardschnittstellen und üblichen Entwicklungsmethoden, wird ein idealer Grundstein für den Einstieg in diese Branche, aber auch für Forschung im Bereich eingebetteter Systemsoftware gelegt.
Prüfungen von Fachprojekt „Software im Automobil“: 
  Voraussetzungen für den Modulabschluss:
  (1) Vortrag inkl. dazugehöriger Ausarbeitung BOSS-NR. 86191
  (2) erfolgreiche Bearbeitung aller Übungsaufgaben BOSS-NR. –keine–
  Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzung von Fachprojekt „Software im Automobil“: Erfolgreich abgeschlossen: Modul „Betriebssysteme (BS)“
Vorausgesetzte Kenntnisse: Modul „Rechnernetze und verteilte Systeme (RvS)“, Programmierung in C/C++
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Software im Automobil“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Software im Automobil“: (Studiendekan)
Zuständige Fakultät von Fachprojekt „Software im Automobil“: Informatik


Name des Moduls: Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“
Englischer Modultitel: Undergraduate Project „Modelling Tools for UML and Business Processes“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 5./6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: deutsch und/oder englisch
Lehrinhalte von Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: Ziel ist die Vermittlung von Fähigkeiten zur Entwicklung von Werkzeugunterstützung für die Verarbeitung von Modellen wie UML-oder Geschäftsprozessmodellen. Das Fachprojekt gliedert sich in zwei Abschnitte: 
  1. Einarbeitung in die grundlegenden Architekturen: Anhand von vorgegebenen Standardaufgaben werden die grundlegenden Architekturen von Werkzeugunterstützung für UML- oder Geschäftsprozessmodelle vermittelt.
  2. Konzeption und Realisierung eines Werkzeuges zur Verarbeitung von UML- oder Geschäftsprozessmodellen: In Kleingruppen wird ein einfaches Werkzeug mit den zuvor erarbeiteten Techniken realisiert. Dabei werden geeignete Ansätze für Spezifikation, verteilte Softwareentwicklung, Versionsmanagement und Qualitätssicherung eingesetzt.
Kompetenzen von Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: Die Studierenden erwerben Kompetenzen im Verstehen und Entwickeln von Werkzeugen zur Unterstützung des Software Engineering komplexer Softwaresysteme. Dadurch werden außerdem die im vorangehenden Studium erworbenen Erfahrungen in der Softwareentwicklung vertieft und erweitert. Durch das Arbeiten in Gruppen werden zudem kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse fördert den Erwerb von Kompetenzen in Präsentationstechniken.
Prüfungen von Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: Voraussetzungen für den Modulabschluss:
  - Dokumentation und Vorführung zu den Einzelaufgaben BOSS-NR. 88691
  - Die Standardaufgaben werden einzeln attestiert. BOSS-NR. –keine–
  Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzung von Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: Erfolgreich abgeschlossen: Modul „Softwaretechnik (SWT)“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: Prof. Dr. J. Rehof
Zuständige Fakultät von Fachprojekt „Werkzeugunterstützung für UML- und Geschäftsprozessmodelle“: Informatik


Name des Moduls: Fachprojekt „Business Process Analysis & IT-Security”
Englischer Modultitel: Undergraduate Project „Business Process Analysis & IT security”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 5./6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Business Process Analysis & IT-Security”: deutsch
Lehrinhalte von Fachprojekt „Business Process Analysis & IT-Security”:
  Ziel ist die Vermittlung von Fähigkeiten zur Entwicklung von Werkzeugunterstützung für die Geschäftsprozessanalyse im Hinblick auf IT-Sicherheitsanforderungen und Compliance. Das Fachprojekt gliedert sich in zwei Abschnitte:
  - Erarbeiten von Grundlagen im Bereich von Geschäftsprozessen und des zugehörigen Tool-Support: Anhand von vorgegebenen Standardaufgaben werden die grundlegenden Konzepte der Geschäftsprozessanalyse vermittelt.
  - Konzeption und Realisierung eines Werkzeuges zur Analyse von Geschäftsprozessen: In Kleingruppen wird ein einfaches Werkzeug mit den zuvor erarbeiteten Techniken realisiert. Dabei werden geeignete Ansätze für Spezifikation, verteilte Softwareentwicklung, Versionsmanagement und Qualitätssicherung eingesetzt.
Kompetenzen von Fachprojekt „Business Process Analysis & IT-Security”:
  Die Studierenden erwerben Kompetenzen im Verstehen und Entwickeln von Werkzeugen zur Unterstützung des Software Engineering komplexer Softwaresysteme. Dadurch werden außerdem die im vorangehenden Studium erworbenen Erfahrungen in der Softwareentwicklung vertieft und erweitert. Durch das Arbeiten in Gruppen werden zudem kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse fördert den Erwerb von Kompetenzen in Präsentationstechniken.
Prüfungen von Fachprojekt „Business Process Analysis & IT-Security”:
  Voraussetzung für den Modulabschluss:
  - Dokumentation und Vorführung zu den Einzelaufgaben BOSS-NR. 86891
  - Die Standardaufgaben werden einzeln attestiert. BOSS-NR. 86841
  Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzung von Fachprojekt „Business Process Analysis & IT-Security”: Erfolgreich abgeschlossen: Modul Software-Technik (SWT)
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Business Process Analysis & IT-Security”: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Business Process Analysis & IT-Security”: Prof. Dr. J. Rehof
Zuständige Fakultät von Fachprojekt „Business Process Analysis & IT-Security”: Informatik


Name des Moduls: Fachprojekt „Algorithm Engineering” (FP-AE)
Englischer Modultitel: Undergraduate Project „Algorithm Engineering“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 5./6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Algorithm Engineering”: deutsch
Lehrinhalte von Fachprojekt „Algorithm Engineering”:
  Algorithm Engineering beinhaltet das Design von Algorithmen, ihre theoretische Analyse, die Implementierung, sowie die experimentelle Evaluation am Rechner. Dabei liegt der Schwerpunkt auf anwendungsrelevanten Problemen. In diesem Modul sollen Projekte zu unterschiedlichen Themen des Algorithm Engineering wie z. B.
  - Kürzeste Wege Algorithmen (z.B. Verbindungssuche im öffentlichen Nahverkehr)
  - Graph Drawing (z.B. Darstellung biologischer Netzwerke, Kreuzungsminimierung)
  - Design von Netzwerken (Steinerbäume in Graphen, Kürzeste Spannbäume)
  - Vehicle Routing (z.B. Tourenplanung)
  bearbeitet werden. Die Studierenden arbeiten dabei in Teams mit Gruppengröße 3–4 an einem anwendungsnahen Problem aus der Praxis. Hierauf wenden die Studierenden die typischen Schritte des Algorithm Engineering Kreislaufs an. Neben der Modellierung des Problems und eines Algorithmus zur Problemlösung spielt hierbei auch die Realisierung und die Evaluierung anhand praktischer Benchmarkprobleme eine wichtige Rolle.
Kompetenzen von Fachprojekt „Algorithm Engineering”:
  Das Modul vermittelt grundlegende Kenntnisse über die erfolgreiche Herangehensweise an anspruchsvolle algorithmische Probleme aus der Praxis. Die Studierenden lernen, praktische Probleme in algorithmische Probleme einzuordnen (Modellierung), geeignete Lösungsmethoden zu finden (Problemlösungskompetenz), die Lösungen in die Praxis umzusetzen (praktische ITKompetenz) und diese experimentell zu evaluieren. Die Gruppenarbeit sowie die Ausarbeitung und Präsentation der Projektergebnisse schult sowohl die soziale als auch die kommunikative Kompetenz der Studierenden.
Prüfungen von Fachprojekt „Algorithm Engineering”:
  Voraussetzung für den Modulabschluss:
  - Dokumentation und Präsentation zu den Einzelaufgaben BOSS-NR. 86991
Teilnahmevoraussetzungen von Fachprojekt „Algorithm Engineering”: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“
  Vorausgesetzte Kenntnisse: Modul „Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2)“
  Wünschenswerte Kenntnisse: Modul „Mathematik für Informatik 1 (MafI1)“ bzw. Modul „Höhere Mathematik I (HM1)“, Modul „Mathematik für Informatik 2 (MafI2)“ bzw. Modul „Höhere Mathematik II (HM2)“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Algorithm Engineering”: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Algorithm Engineering”: (Studiendekan)
Zuständige Fakultät von Fachprojekt „Algorithm Engineering”: Informatik


Name des Moduls: Fachprojekt „Digital Entertainment Technologies”
Englischer Modultitel: Undergraduate Project „Digital Entertainment Technologies”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Digital Entertainment Technologies”: deutsch
Lehrinhalte von Fachprojekt „Digital Entertainment Technologies”:
  „Digital Entertainment Technologies“ umfassen rechnergestützte Methoden, Tools, Softwarepakete und Konzepte, die die Grundlage moderner Computerspiele & Unterhaltunsgmedien bilden. Die Studierenden wenden die im Rahmen des Fachprojekts erworbenen Kenntnisse in Beispielprojekten praktisch an. Diese stammen z.B. aus den Themenbereichen
  - Adaptive Game AI / Player Satisfaction Modeling
  - Procedural Content Generation
  - Game Engines / Middleware
  - Mobile Plattformen
  - Musik in Spielen / Musikbasierte Apps (z. B. Musikspiele)
  Die behandelten Themen ändern sich von Jahr zu Jahr und passen sich aktuellen Entwicklungen an.
  Das Fachprojekt gliedert sich in zwei Teile. In der ersten Hälfte werden nach einer einwöchigen Einführungsphase in Kleingruppen Miniprojekte durchgeführt, die die Studierenden mit den maßgeblichen Techniken vertraut machen. Nach der Präsentation der Ergebnisse aus der ersten Phase folgt in einer zweiten Phase in größeren Gruppen die Umsetzung eines umfangreicheren Projekts. Dies könnte z.B. die Entwicklung und Umsetzung einer neuartigen Spielidee sein, wobei einzelne Gruppen Teilmodule oder -funktionalitäten implementieren. Den Abschluss des Fachprojekts bilden die Präsentation der Ergebnisse aus der zweiten Projektphase und die Diskussion der dabei gewonnenen Erkenntnisse.
Kompetenzen von Fachprojekt „Digital Entertainment Technologies”:
  Die Studierenden sollen Kompetenzen im praktischen Umgang mit Methoden und Softwaretools aus dem Bereich der Spieleentwicklung und Unterhaltungsmedien erwerben. Die Arbeit im Team schult die sozialen Kompetenzen und bereitet die Studierenden auf die Arbeitswelt vor.
Prüfungen von Fachprojekt „Digital Entertainment Technologies”:
  Voraussetzungen für den Modulabschluss:
  - Ausarbeitung des Projekts in der zweiten Phase, Dokumentation und Präsentation der Ergebnisse BOSS-Nr. 88191
  - Vorführungen zu den Aufgaben der ersten Phase BOSS-Nr. 88141
  Die Voraussetzung (2) ist vor der Voraussetzung (1) zu erbringen.
Teilnahmevoraussetzungen von Fachprojekt „Digital Entertainment Technologies”: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Digital Entertainment Technologies”: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Fachprojekt „Digital Entertainment Technologies”: Prof. Dr. Günter Rudolph
Zuständige Fakultät von Fachprojekt „Digital Entertainment Technologies”: Informatik


Name des Moduls: Fachprojekt „Data-Mining und Datenanalyse”
Englischer Modultitel: Undergraduate Project „Data Mining and Data Analysis”
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester (Blockveranstaltung)
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Data-Mining und Datenanalyse”: deutsch
Lehrinhalte von Fachprojekt „Data-Mining und Datenanalyse”:
  Täglich produzieren wir Unmengen an Daten – beim Einkauf, beim Surfen im Web, beim Autofahren, Telefonieren. All diese Daten ergeben jedoch erst einen „Sinn“, wenn wir sie mit geeigneten Verfahren analysieren und auswerten können. Ziel dieses Fachprojektes ist die Analyse von Daten mit Hilfe maschineller Lernverfahren. Dabei werden unterschiedliche Aspekte der Datenanalyse anhand praktischer Anwendungsfälle behandelt:
  - Datenstromalgorithmen (Intrusion-Detection, Log-Analyse, ...)
  - Analyse natürlicher Sprache (Text-Klassifikation, ...)
  - Data-Mining mit Graphik-Prozessoren (GPUs, ...)
  - Data-Mining in verteilten Umgebungen (Sensornetze, ...)
  Der jeweils behandelte Schwerpunkt wechselt von Jahr zu Jahr. Innerhalb des Fachprojektes werden zu einem Schwerpunkt aufeinander aufbauende Aufgaben gestellt, die von den Teilnehmern analysiert und in einer praktischen Umsetzung gelöst werden sollen.
Kompetenzen von Fachprojekt „Data-Mining und Datenanalyse”:
  Die Veranstaltung vermittelt Grundlagen des maschinellen Lernens/Data-Mining und führt die Studierenden schrittweise an die analytische Bearbeitung von Aufgaben der Datenanalyse. Die Bearbeitung der gestellten Aufgaben schult bei den Teilnehmern sowohl Kreativität, eine strikte analytische Vorgehensweise sowie strukturierte Arbeit und Kommunikation im Team. Durch die erforderliche Dokumentation und Präsentation der erarbeiteten Lösungen erweitern die Teilnehmer ihre Kompetenzen im Bereich der Präsentationstechniken. Gleichzeitig bietet das FP die Möglichkeit sich Kompetenzen bei der Analyse oft großer Datenmassen zu erarbeiten.
Prüfungen von Fachprojekt „Data-Mining und Datenanalyse”:
  Voraussetzungen für den Modulabschluss:
  - Erfolgreiche Bearbeitung der gestellten Aufgaben, aktive Mitarbeit bei den Sitzungen, Abschlusspräsentation BOSS-Nr. 88291
Teilnahmevoraussetzungen von Fachprojekt „Data-Mining und Datenanalyse”: Erfolgreich abgeschlossen: Modul „Betriebssysteme (BS)“, Modul „Rechnernetze und verteilte Systeme“, Modul „Softwarepraktikum (SoPra)”
Vorausgesetzte Kenntnisse: Programmierung in Java
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Data-Mining und Datenanalyse”: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Fachprojekt „Data-Mining und Datenanalyse”: Prof. Dr. K. Morik
Zuständige Fakultät von Fachprojekt „Data-Mining und Datenanalyse”: Informatik


Name des Moduls: Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”
Englischer Modultitel: Undergraduate Project „Software Design for Secure Cloud Computing Systems”
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 5./6. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”: deutsch
Lehrinhalte von Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”:
  Das Ziel dieses Fachprojektes ist die Vermittlung von Fähigkeiten zur Entwicklung von Werkzeugen zur sicheren Codegenerierung für Cloud-Computing-Systeme.
  Das Fachprojekt gliedert sich in zwei Abschnitte:
  - Erarbeiten von Grundlagen im Bereich des Cloud-Computings, von modellbasierter Softwareentwicklung und IT-Sicherheits-Themen: Anhand von vorgegebenen Standardaufgaben werden die grundlegenden Konzepte der Geschäftsprozessanalyse vermittelt.
  - Konzeption und Realisierung des Werkzeuges: In Kleingruppen wird ein einfaches Werkzeug mit den zuvor erarbeiteten Techniken realisiert. Dabei werden geeignete Ansätze für Spezifikation, verteilte Softwareentwicklung, Versionsmanagement und Qualitätssicherung eingesetzt.
Kompetenzen von Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”:
  Die Studierenden erwerben Kompetenzen im Verstehen und Entwickeln von Werkzeugen zur Unterstützung des Software Engineering komplexer Softwaresysteme. Dadurch werden außerdem die im vorangehenden Studium erworbenen Erfahrungen in der Softwareentwicklung vertieft und erweitert. Durch das Arbeiten in Gruppen werden zudem kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse fördert den Erwerb von Kompetenzen in Präsentationstechniken.
Prüfungen von Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”:
  Voraussetzung für den Modulabschluss:
  - Attestierung zu den Standardaufgaben, Dokumentation und Vorführung zu den Einzelaufgaben BOSS-Nr. 88391
Teilnahmevoraussetzungen von Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”: Erfolgreich abgeschlossen: Modul „Softwaretechnik (SWT)”
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Softwaretechniken für sichere Cloud-Computing-Systeme”: Prof. Dr. J. Rehof
Zuständige Fakultät: Informatik


Name des Moduls: Fachprojekt „Dokumentenanalyse”
Englischer Modultitel: Undergraduate Project „Document Analysis”
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Dokumentenanalyse”: deutsch
Lehrinhalte von Fachprojekt „Dokumentenanalyse”:
  Das Fachprojekt Dokumentenanalyse befasst sich mit der automatischen Verarbeitung von Texten, die sowohl maschinenlesbar als auch in Form von Dokumentenabbildern vorliegen können. Die automatische Verarbeitung dient dabei dem Wissensgewinn und der Interpretation der entsprechenden Inhalte. Insbesondere soll ausgenutzt werden, dass sich die verwendeten Methoden von der Domäne der maschinenlesbaren Texte in die Domäne der durch Bilder repräsentierten Texte übertragen lassen. Die praktischen Aufgaben sollen mit Python und SciPy umgesetzt werden. Die Sprache Python bietet eine Fülle von funktionalen und objektorientierten Konzepten, die sich in diesem Zusammenhang eigenen. Darüber hinaus steht mit SciPy eine Programmbibliothek für wissenschaftliche numerische Berechnungen zur Verfügung. Nach einer Einführungsphase gliedert sich das Fachprojekt in zwei Bearbeitungsphasen. In der ersten Phase bearbeiten die Studierenden Aufgaben zur Analyse maschinenlesbarer Dokumente, wie z.B. die Schlagwortsuche oder die Kategorisierung von Texten. In der zweiten Phase schließen sich bis zu vier Studierende zur Bearbeitung einer Projektaufgabe aus dem Bereich der bildbasierten Dokumentenanalyse zusammen. Dabei wenden die Studierenden die in der ersten Phase erlernten Methoden an und erweitern diese auf die Analyse von Dokumentabbildern.
Kompetenzen von Fachprojekt „Dokumentenanalyse”:
  Die Veranstaltung vermittelt grundlegende Kompetenzen aus dem Bereich der automatischen Analyse maschinenlesbarer und bildbasierter Dokumente. Am Beispiel der Programmiersprache Python lernen die Teilnehmer auch komplexere Aufgabenstellungen in verhältnismäßig kurzer Zeit prototypisch umzusetzen. In der zweiten Phase haben die Teilnehmer einen größeren Spielraum bei der Ausgestaltung des Projekts. Sie erweitern dabei ihre Kompetenzen im Bereich der Organisation, Strukturierung und Präsentation einer größeren Aufgabe im Team.
Prüfungen von Fachprojekt „Dokumentenanalyse”:
  Voraussetzung für den Modulabschluss:
  - Erfolgreiche Bearbeitung der Aufgaben, aktive Mitarbeit und Präsentation der Ergebnisse der Projektarbeit BOSS-Nr. 88491
Teilnahmevoraussetzungen von Fachprojekt „Dokumentenanalyse”: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)”. Vorausgesetzte Kenntnisse: Modul „Softwaretechnik (SWT)”. Wünschenswerte Kenntnisse: Modul „Mensch-Maschine-Interaktion (MMI)” oder Modul „Darstellung und Verarbeitung von Wissen (DVEW)”, Python-Kenntnisse
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Dokumentenanalyse”: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Fachprojekt „Dokumentenanalyse”: Prof. Dr.-Ing. Gernot A. Fink
Zuständige Fakultät: Informatik


Name des Moduls: Fachprojekt „Ambient Intelligence”
Englischer Modultitel: Undergraduate Project „Ambient Intelligence”
Studiengänge: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Ambient Intelligence”: deutsch
Lehrinhalte von Fachprojekt „Ambient Intelligence”:
  Das Forschungsgebiet der Ambient Intelligence beschäftigt sich mit der intelligenten Unterstützung des Menschen durch ihn umgebende Sensoren und Rechner. Ziel hierbei ist insbesondere die Steigerung des Komforts und der Sicherheit für den Nutzer. In diesem Fachprojekt sollen die Studierenden am Beispiel eines intelligenten Konferenzraums in die grundlegenden Aspekte der Ambient Intelligence eingeführt werden. Hierzu zählen insbesondere die automatische Lokalisierung und Identifikation von Personen sowie die Steuerung der intelligenten Umgebung durch natürliche Interaktionsmöglichkeiten. Nach einer Einführungsphase gliedert sich das Fachprojekt in zwei Teile. Im ersten Teil bearbeiten die Studierenden grundlegende Aufgaben aus den oben beschriebenen ausgewählten Bereichen der Ambient Intelligence. Im zweiten Teil führen die Studierenden in Kleingruppen verschiedene Aspekte der vorher absolvierten Aufgaben zusammen, um kreative Interaktionsmöglichkeiten mit dem intelligenten Konferenzraum zu entwickeln. Die Ergebnisse dieser Projektphase werden anschließend in einer Abschlusspräsentation vorgestellt. Die praktischen Aufgaben sollen mit Python und SciPy umgesetzt werden. Die Sprache Python bietet eine Fülle von funktionalen und objektorientierten Konzepten, die sich in diesem Zusammenhang eignen. Darüber hinaus steht mit SciPy eine Programmbibliothek für wissenschaftliche numerische Berechnungen zur Verfügung.
Kompetenzen von Fachprojekt „Ambient Intelligence”:
  Die Veranstaltung vermittelt grundlegende Kompetenzen aus den Bereichen der Computer Vision und Mensch-Maschine-Interaktion. Durch die Programmierung in Python lernen die Teilnehmer komplexe Problemstellungen in verhältnismäßig kurzer Zeit prototypisch zu lösen. Die kreative Bearbeitung der Aufgaben im zweiten Teil erweitert die Kompetenz der Teilnehmer im Bereich Softwareentwicklung im Team in Bezug zu neuartigen Problemstellungen. Durch die Präsentation der erzielten Ergebnisse werden zudem die Vortrags- und Dokumentationskompetenzen der Teilnehmer erweitert.
Prüfungen von Fachprojekt „Ambient Intelligence”:
  Voraussetzung für den Modulabschluss:
  - Erfolgreiche Bearbeitung der Aufgaben, aktive Mitarbeit und Präsentation der Ergebnisse der Projektarbeit BOSS-Nr. 88691
Teilnahmevoraussetzungen von Fachprojekt „Ambient Intelligence”: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)”. Vorausgesetzte Kenntnisse: Modul „Softwaretechnik (SWT)”. Wünschenswerte Kenntnisse: Modul „Mensch-Maschine-Interaktion (MMI)” oder Modul „Darstellung und Verarbeitung von Wissen (DVEW)”, Python-Kenntnisse
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Ambient Intelligence”: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Fachprojekt „Ambient Intelligence”: Prof. Dr.-Ing. Gernot A. Fink
Zuständige Fakultät: Informatik


Name des Moduls: Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“
Englischer Modultitel: Undergraduate Project „Geometric modeling of manufacturing processes“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: deutsch
Lehrinhalte von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Das Ziel dieses Fachprojekts ist die Simulation von Fertigungsprozessen unter Verwendung von geometrischen Modellierungstechniken. Als Anwendungsbeispiel dienen Zerspanprozesse, die für die Fertigung unterschiedlicher Bauteile eingesetzt werden. Die Aufgabenstellung kann dabei z. B. die simulative Berechnung der aus einem exemplarischen Fräsprozess resultierenden Bauteilgeometrie sein. Die Entwicklung der Simulation kann unter anderem die geometrische Modellierung des Werkzeugs und des Werkstücks sowie die Berechnung der Werkzeugbewegung umfassen, sodass sich der Materialabtrag anschließend durch ein Verschneiden der geometrischen Modelle abbilden lässt. Zunächst werden Grundlagen zur Modellierung des betrachteten Zerspanprozesses vermittelt. Die Entwicklung der Prozesssimulation erfolgt anschließend in Gruppenarbeit. Hierzu werden kleine, aufeinander aufbauende Aufgaben vorgegeben.
Ziel der Veranstaltung von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Die Studierenden sollen grundlegende Kenntnisse im Bereich der Prozesssimulation am Beispiel von spanenden Fertigungsprozessen erwerben. Dabei steht die eigenständige Implementierung geometrischer Modelle in Form eines Simulationsprogramms im Vordergrund. Durch die Gruppenarbeit sollen die Teamfähigkeit und Kompetenzen zur Projektbearbeitung unter zeitlichen Randbedingungen gefördert werden.
Kompetenzen von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Die Studierenden erwerben grundlegende Kenntnisse im Bereich der Prozesssimulation am Beispiel von spanenden Fertigungsprozessen. Dabei steht die eigenständige Implementierung geometrischer Modelle in Form eines Simulationsprogramms im Vordergrund. Durch die Gruppenarbeit sollen die Teamfähigkeit und Kompetenzen zur Projektbearbeitung unter zeitlichen Randbedingungen gefördert werden.
Prüfungen von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Voraussetzung für den Modulabschluss: Ausarbeitung und Präsentation der Ergebnisse der Gruppenarbeit BOSS-Nr. 88991
Teilnahmevoraussetzung von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Vorausgesetzte Kenntnisse: Modul „Softwaretechnik (SWT)“, Wünschenswerte Kenntnisse: Python-Programmierkenntnisse
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Prof. Dr.-Ing. Petra Wiederkehr
Zuständige Fakultät von Fachprojekt „Geometrische Modellierung von Fertigungsprozessen“: Informatik


Name des Moduls: Fachprojekt „Musikinformatik“
Englischer Modultitel: Undergraduate Project „Music Informatics“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Musikinformatik“: deutsch
Lehrinhalte von Fachprojekt „Musikinformatik“: Musikinformatik befasst sich mit der rechnergestützten Verarbeitung und Analyse von unterschiedlichen Musikdaten: Audiosignalen, digitalen Partituren, Playlisten, Metadaten usw. Für zahlreiche Anwendungsszenarien, wie etwa Musikempfehlung, Instrumentenerkennung, Segmentierung oder automatische Transkription werden Algorithmen aus den Bereichen Data Mining, künstliche Intelligenz und statistische Datenanalyse eingesetzt. In diesem Fachprojekt werden zunächst in kleinen Gruppen Teilprojekte implementiert, welche ein bestimmtes Ziel verfolgen, wie die Optimierung von Merkmalsextraktion, Erkennung von unterschiedlichen Musikkategorien (z.B. Genres, Emotionen, Instrumente, Segmentübergänge) mithilfe von überwachter Klassifikation (z.B. Entscheidungsbäume, neuronale Netzwerke), mehrkriterielle Bewertung von Klassifikationsmodellen. Nach dieser Einführungsphase werden in größeren Gruppen aufwändigere Projekte im Themenkreis der Musikinformatik durchgeführt. Denkbar wäre hier auch ein interner Wettbewerb bei gleicher Aufgabenstellung für alle Gruppen.
Ziel der Veranstaltung von Fachprojekt „Musikinformatik“: Die Studierenden sollen grundlegende Kenntnisse im Bereich der Musikinformatik erwerben, einschließlich der Verarbeitung und Analyse von Musikdaten sowie der Anwendung von Algorithmen aus den Bereichen Data Mining, künstliche Intelligenz und statistische Datenanalyse. Sie sollen verschiedene Werkzeuge zur Bewältigung von Aufgabenstellungen in diesem Bereich auswählen, kombinieren und anwenden können. Darüber hinaus sollen sie ihre Fähigkeiten in den Bereichen Teamarbeit, Programmierung und Präsentation weiterentwickeln.
Kompetenzen von Fachprojekt „Musikinformatik“: In diesem Fachprojekt kommen die Studierenden mit so unterschiedlichen Bereichen wie Signaldatenverarbeitung, maschinelle Lernverfahren und dem Einsatz von Tensor Core Hardware in Kontakt und erlernen so die Auswahl, Kombination und Anwendung geeigneter Werkzeuge zur Bewältigung verschiedener Aufgabenstellungen im Umfeld der Musikinformatik. Je nach Teilprojekt bzw. -aufgabe muss man sich mit unterschiedlichen Sprachen beschäftigen (Java, Python, MATLAB, R), die in diesen Sprachen implementierten Tools einsetzen und möglicherweise erweitern.
Prüfungen von Fachprojekt „Musikinformatik“: Voraussetzung für den Modulabschluss: Vorführungen zu den Aufgaben der ersten Phase. Ausarbeitung des Projekts in der zweiten Phase, Dokumentation und Präsentation der Ergebnisse BOSS-Nr. 88992
Teilnahmevoraussetzung von Fachprojekt „Musikinformatik“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1 (MafI1)“ oder Modul „Höhere Mathematik I“ (HöMa1), Modul „Mathematik für Informatik 2 (MafI2)“ oder Modul „Höhere Mathematik II (HöMa2)“, Wünschenswerte Kenntnisse: Modul „Musikdatenanalyse“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Musikinformatik“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Musikinformatik“: Prof. Dr. Günter Rudolph
Zuständige Fakultät von Fachprojekt „Musikinformatik“: Informatik


Name des Moduls: Fachprojekt „Formale Methoden in der IT-Sicherheit“
Englischer Modultitel: Undergraduate Project „Formal Methods for IT-Security“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Formale Methoden in der IT-Sicherheit“: deutsch
Lehrinhalte von Fachprojekt „Formale Methoden in der IT-Sicherheit“: Ziel der Veranstaltung ist, das Bewusstsein für IT-Sicherheit der Studierenden zu schärfen und den Studierenden Hands-On Erfahrung mit State-of-the-Art-Werkzeugen für Code-Analyse und Verifikation zu ermöglichen. In der ersten Phase vermittelt das Fachprojekt Grundlagenwissen über eine Reihe von Sicherheitsschwächen und deren Ursachen im Code (z.B. Pufferüberläufe, Injektions-Angriffe und Informationsabflüsse) an Beispielen und ermöglicht den Studierenden diese Angriffe an didaktischen „Capture-The-Flag“ Systemen auszuprobieren. Im Anschluss werden verschiedene Code-Analyse-Werkzeuge mit ihren Schwächen und Stärken der Ansätze vorgestellt, die zur Detektion der Ursachen von Sicherheitsschwächen im Code eingesetzt werden können. In der an die erste Phase anschließende Projektphase sollen die Studierenden in Kleingruppen an selbstgewählten Projekten einen selbstgewählten Aspekt der Code-Analyse vertiefen. Dazu werden verschiedene Analyse-Ziele angeboten und die Studierenden sammeln neue Erfahrungen über eines der zur Verfügung stehenden Werkzeuge in Eigenarbeit. Der Dozierende unterstützt die Studierenden während der Durchführung nach Bedarf. Zum Abschluss präsentiert jede Gruppe ihre Ergebnisse.
Ziel der Veranstaltung von Fachprojekt „Formale Methoden in der IT-Sicherheit“: Die Studierenden sollen grundlegende Kenntnisse im Bereich der IT-Sicherheit erwerben und Hands-On Erfahrung mit modernen Werkzeugen zur Code-Analyse und Verifikation sammeln. Sie sollen in der Lage sein, Sicherheitsschwächen im Code zu identifizieren und zu verstehen, wie verschiedene Code-Analyse-Werkzeuge diese Schwächen erkennen. Darüber hinaus sollen sie in der Lage sein, die Effektivität dieser Werkzeuge zu bewerten und Verbesserungsmöglichkeiten zu skizzieren.
Kompetenzen von Fachprojekt „Formale Methoden in der IT-Sicherheit“: Am Ende des Projektes verstehen die Studierenden, wie IT-Sicherheitslücken in der Programmierung entstehen und können in Code-Reviews Programme auf Sicherheitslücken analysieren. Darüber hinaus verstehen sie für die vorgestellten Werkzeug die grundlegenden, formalen Konzepte der Code-Analyse, die in den vorgestellten Werkzeugen umgesetzt werden. Am Ende des Projektes können die Studierenden für ein Werkzeug und eine Klasse von Sicherheitslücken erläutern und bewerten, wie gut sich das Werkzeug zur Erkennung der Schwachstelle eignet. In Ansätzen sind sie in der Lage, zu skizzieren, welche Problemfelder man bearbeiten müsste, um das Werkzeug im Praxiseinsatz zu verbessern.
Prüfungen von Fachprojekt „Formale Methoden in der IT-Sicherheit“: Voraussetzung für den Modulabschluss: Aktive Teilnahme an den Übungsaufgaben in der ersten Phase, Erstellung einer Projektskizze zum Ende der ersten Phase für die Projektphase, abschließend Präsentation des durchgeführten Projektes und Darstellung der gewonnen Erkenntnisse BOSS-Nr. 88993
Teilnahmevoraussetzung von Fachprojekt „Formale Methoden in der IT-Sicherheit“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Formale Methoden in der IT-Sicherheit“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Formale Methoden in der IT-Sicherheit“: Prof. Dr. Falk Howar
Zuständige Fakultät von Fachprojekt „Formale Methoden in der IT-Sicherheit“: Informatik


Name des Moduls: Fachprojekt „Big Data Analytics Lab (BDA-Lab)“
Englischer Modultitel: Undergraduate Project „Big Data Analytics Lab“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: englisch
Lehrinhalte von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Die Analyse großer Datenmengen in Wissenschaft und Industrie erfordert grundlegende Methoden des Maschinellen Lernens. Diese werden im Rahmen einer Projektarbeit an Daten aus der Praxis vermittelt. Es wird dabei der gesamte Prozess von der Datenaufbereitung über die Datenanalyse bis zur empirischen Evaluation unterschiedlicher ML-Methoden für große Datenmengen vermittelt.
Ziel der Veranstaltung von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Das Modul setzt grundlegende Kenntnisse für Maschinelles Lernen (ML) in der Praxis um. Es wird die erfolgreiche Herangehensweise an anspruchsvolle überwachte und unüberwachte Lernverfahren aus der Praxis vermittelt. Die Studierenden lernen, praktische Probleme des maschinellen Lernens in algorithmische Probleme einzuordnen, geeignete Lösungsmethoden zu finden, die Lösungen in die Praxis umzusetzen und diese experimentell zu evaluieren. Die Gruppenarbeit sowie die Ausarbeitung und Präsentation der Projektergebnisse schult sowohl die soziale als auch die kommunikative Kompetenz der Studierenden.
Kompetenzen von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Das Modul setzt grundlegende Kenntnisse für Maschinelles Lernen (ML) in der Praxis um. Es wird die erfolgreiche Herangehensweise an anspruchsvolle überwachte und unüberwachte Lernverfahren aus der Praxis vermittelt. Die Studierenden lernen, praktische Probleme des maschinellen Lernens in algorithmische Probleme einzuordnen, geeignete Lösungsmethoden zu finden, die Lösungen in die Praxis umzusetzen und diese experimentell zu evaluieren. Die Gruppenarbeit sowie die Ausarbeitung und Präsentation der Projektergebnisse schult sowohl die soziale als auch die kommunikative Kompetenz der Studierenden.
Prüfungen von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Voraussetzung für den Modulabschluss: Erfolgreiche Bearbeitung der gestellten Aufgaben, aktive Mitarbeit bei den Sitzungen, Abschlusspräsentation BOSS-Nr. 88994
Teilnahmevoraussetzung von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Erfolgreich abgeschlossen: Modul „Big Data Analytics (BDA)“, Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1 (Mafi1)“, Modul „Mathematik für Informatik 2 (Mafi2)“ bzw. Modul „Höhere Mathematik I (HöMa1)“, Modul „Höhere Mathematik II (HöMa2)“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Prof. Dr. E. Müller
Zuständige Fakultät von Fachprojekt „Big Data Analytics Lab (BDA-Lab)“: Informatik


Name des Moduls: Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“
Englischer Modultitel: Undergraduate Project „Static Code Analysis in the Context of Secure Software Engineering“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Deutsch
Lehrinhalte von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Ziel der Veranstaltung ist es, den Studierenden Einblicke in den aktuellen Stand der Forschung im Bereich der Softwareentwicklung zu eröffnen, und diesen kritisch zu hinterfragen. Desweiteren werden Methodiken im Bereich der statischen Code-Analyse konkret umgesetzt und evaluiert. In der ersten Phase des Projekts wird der State-of-the-Art bezüglich Code-Analyse und sicherer Softwareentwicklung erarbeitet. Dafür werden mehrere aktuelle Paper von den Studierenden in regelmäßigen Gruppentreffen besprochen und kritisch diskutiert. Zum Ende der Phase wählen die Studierenden selbst Methoden zur konkreten Implementierung aus und präsentieren diese in einer kurzen schriftlichen Ausarbeitung. In einer zweiten Phase werden die ausgewählten Methoden aus Phase eins konkret implementiert. Dafür arbeiten die Studierenden selbstorganisiert in Kleingruppen, und präsentieren ihren Fortschritt in regelmäßigen Kurzmeetings. In Workshops wird die Nutzung von Werkzeugen wie Git, GitHub und IntelliJ vorgestellt, welche für die Umsetzung genutzt werden sollen. Konzepte wie PeerReviews und Unit-Tests werden ebenfalls eingeführt, um die Code-Qualität sicherzustellen. Zum Abschluss präsentieren alle Kleingruppen ihre Ergebnisse.
Ziel der Veranstaltung von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Nach Abschluss des Projekts haben Studierende sowohl grundlegenden Methoden als auch aktuelle Forschungsergebnisse im Bereich der sicheren Softwareentwicklung kennengelernt. Sie haben gelernt sich selbstständig Fachwissen aus wissenschaftlichen Publikationen anzueignen, dieses kritisch zu hinterfragen und mit anderen zu diskutieren. Desweiteren verstehen die Teilnehmenden in der Praxis relevante Werkzeuge wie Git, GitHub und IntelliJ grundlegend, und haben gelernt diese für die selbstständige Organisation eines Projekts zu nutzen. Sie können darüber hinaus eigene Methoden zur statischen Analyse mithilfe entsprechender Frameworks implementieren oder bestehende Methoden erweitern.
Kompetenzen von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Nach Abschluss des Projekts haben Studierende sowohl grundlegenden Methoden als auch aktuelle Forschungsergebnisse im Bereich der sicheren Softwareentwicklung kennengelernt. Sie haben gelernt sich selbstständig Fachwissen aus wissenschaftlichen Publikationen anzueignen, dieses kritisch zu hinterfragen und mit anderen zu diskutieren. Desweiteren verstehen die Teilnehmenden in der Praxis relevante Werkzeuge wie Git, GitHub und IntelliJ grundlegend, und haben gelernt diese für die selbstständige Organisation eines Projekts zu nutzen. Sie können darüber hinaus eigene Methoden zur statischen Analyse mithilfe entsprechender Frameworks implementieren oder bestehende Methoden erweitern.
Prüfungen von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Voraussetzung für den Modulabschluss: Aktive Teilnahme an den Diskussionssitzungen, Abgabe einer schriftlichen Ausarbeitung in Phase Eins, Teilnahme an den Workshops und Kurzmeetings in Phase 2, Abschließende Präsentation der Implementation und gewonnener Erkenntnisse in Phase Zwei BOSS-Nr. 88995
Teilnahmevoraussetzung von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: JProf. Dr. B. Hermann
Zuständige Fakultät von Fachprojekt „Statische Code-Analyse im Kontext von sicherer Softwareentwicklung“: Informatik


Name des Moduls: Fachprojekt „Routingalgorithmen“
Englischer Modultitel: Undergraduate Project „Routing Algorithms“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Routingalgorithmen“: Englisch
Lehrinhalte von Fachprojekt „Routingalgorithmen“: Routingalgorithmen sind ein fundamentales Element zur Erreichung guter Performance in so gut wie allen Rechnernetzen und verteilten Systemen. Dieses Fachprojekt dazu gliedert sich in drei Teile. Im ersten Teil werden zunächst theoretische Grundlagen aus dem Bereich Routingalgorithmen gelegt, die als fundamentaler Unterbau für die nächsten beiden Teile dienen. Der zweite und dritte Teil besteht je aus praktischen Projektaufgaben, die in Gruppenarbeit gelöst werden sollen. Dabei geht es insbesondere um Implementation und Evaluation von Routingalgorithmen, aber auch Aspekte des Designs. Der zweite Teil wird dazu in einer Programmiersprache umgesetzt (z.B. Python), der dritte Teil in einer virtuellen Netzumgebung (z.B. Mininet). Die Ergebnisse der beiden Projekte werden von den Studierenden dokumentiert und präsentiert.
Ziel der Veranstaltung von Fachprojekt „Routingalgorithmen“: Das Modul setzt grundlegende Erkenntnisse für Routingalgorithmen aus der Theorie in die Praxis um. Die Studierenden lernen, zu praktischen Anforderungen (z.B. Zielfunktionen, Workloads, zur Verfügung stehende Technologie) geeignete Routingalgorithmen zu wählen und zu adaptieren, sowie diese in geeigneten Umgebungen zu evaluieren und zu bewerten. Durch die Gruppenarbeit sollen die Teamfähigkeit und Kompetenzen zur Projektbearbeitung unter zeitlichen Randbedingungen gefördert werden.
Kompetenzen von Fachprojekt „Routingalgorithmen“: Das Modul setzt grundlegende Erkenntnisse für Routingalgorithmen aus der Theorie in die Praxis um. Die Studierenden lernen, zu praktischen Anforderungen (z.B. Zielfunktionen, Workloads, zur Verfügung stehende Technologie) geeignete Routingalgorithmen zu wählen und zu adaptieren, sowie diese in geeigneten Umgebungen zu evaluieren und zu bewerten. Durch die Gruppenarbeit sollen die Teamfähigkeit und Kompetenzen zur Projektbearbeitung unter zeitlichen Randbedingungen gefördert werden.
Prüfungen von Fachprojekt „Routingalgorithmen“: Voraussetzung für den Modulabschluss: Dokumentation und Präsentation der Projekte der zweiten und dritten Phase BOSS-Nr. 88996
Teilnahmevoraussetzung von Fachprojekt „Routingalgorithmen“: Erfolgreich abgeschlossen: Modul „Betriebssysteme (BS)“ oder Modul „Rechnernetze und verteilte Systeme (RvS)“. Vorausgesetzte Kenntnisse: Modul „Rechnernetze und verteilte Systeme (RvS)“, Modul „Betriebssysteme (BS)“, Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP1)“, Modul „Datenstrukturen, Algorithmen und Programmierung 2 (DAP2)“. Wünschenswerte Kenntnisse: Grundkenntnisse in Python
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Routingalgorithmen“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Routingalgorithmen“: Prof. Dr. Dr. K.-T. Förster
Zuständige Fakultät von Fachprojekt „Routingalgorithmen“: Informatik


Name des Moduls: Fachprojekt „Algorithmen für Programmierwettbewerbe“
Englischer Modultitel: Undergraduate Project „Algorithms for Competitive Programming“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Algorithmen für Programmierwettbewerbe“: Englisch/Deutsch (Aufgabenstellungen: Englisch; Vorträge und Handouts der Studierenden: Deutsch oder Englisch)
Lehrinhalte von Fachprojekt „Algorithmen für Programmierwettbewerbe“: In diesem Modul soll auf die Teilnahme an Programmierwettbewerben vorbereitet werden. Dafür arbeiten die Studierenden in Dreier-Teams zusammen und bereiten zunächst eine Präsentation sowie ein einseitiges Handout aus einem der folgenden Themenbereiche vor: Datenstrukturen (wie Strings, Stacks und Heaps), Such- und Sortieralgorithmen, Graphalgorithmen, Algorithmenentwurfsmethoden (wie Greedy, Dynamische Programmierung) und algorithmische Geometrie. Weiterhin sollen von allen Gruppen, wie bei einem Programmierwettbewerb, eine Anzahl von Problemen aus jedem Thema gelöst und implementiert werden.
Ziel der Veranstaltung von Fachprojekt „Algorithmen für Programmierwettbewerbe“: Das Modul vermittelt Kenntnisse über die Herangehensweise an algorithmische Probleme, wie sie in Programming Challenges üblich sind. Dabei lernen die Studierenden, praktische Fragestellungen in algorithmische Probleme umzusetzen (Modellierung), geeignete Lösungsmethoden zu finden (Problemlösungskompetenz) und diese in die Praxis umzusetzen (Implementierung). Außerdem wird die Kompetenz zur Gruppenarbeit sowie zu (gemeinsamen) Präsentationen geschult. Am Ende des Projektes sollten die Studierenden in der Lage sein, erfolgreich an einem Programmierwettbewerb teilzunehmen.
Kompetenzen von Fachprojekt „Algorithmen für Programmierwettbewerbe“: Das Modul vermittelt Kenntnisse über die Herangehensweise an algorithmische Probleme, wie sie in Programming Challenges üblich sind. Dabei lernen die Studierenden, praktische Fragestellungen in algorithmische Probleme umzusetzen (Modellierung), geeignete Lösungsmethoden zu finden (Problemlösungskompetenz) und diese in die Praxis umzusetzen (Implementierung). Außerdem wird die Kompetenz zur Gruppenarbeit sowie zu (gemeinsamen) Präsentationen geschult. Am Ende des Projektes sollten die Studierenden in der Lage sein, erfolgreich an einem Programmierwettbewerb teilzunehmen.
Prüfungen von Fachprojekt „Algorithmen für Programmierwettbewerbe“: Voraussetzung für den Modulabschluss: 30-Minuten-Vortrag inklusive Handout, Erfolgreiches Bearbeiten der wöchentlichen Programmieraufgaben, Erfolgreiche Teilnahme an der Programming Challenge
Teilnahmevoraussetzung von Fachprojekt „Algorithmen für Programmierwettbewerbe“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2)“, Wünschenswerte Kenntnisse: Modul „Effiziente Algorithmen“, insbesondere Matching- und Flussalgorithmen
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Algorithmen für Programmierwettbewerbe“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Algorithmen für Programmierwettbewerbe“: Prof. Dr. K. Buchin
Zuständige Fakultät von Fachprojekt „Algorithmen für Programmierwettbewerbe“: Informatik


Name des Moduls: Fachprojekt „Enterprise Computing“
Englischer Modultitel: Undergraduate Project „Enterprise Computing“
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 4. Semester
Credits: 7
Aufwand: 210 (60/150)
Lehrveranstaltungssprache von Fachprojekt „Enterprise Computing“: Deutsch oder Englisch
Lehrinhalte von Fachprojekt „Enterprise Computing“: Im Fachprojekt werden Projekte zu unterschiedlichen Themen aus dem Bereich des Enterprise Computing bzw. der Wirtschaftsinformatik durchgeführt. In Teams der Größe von etwa 3-4 Personen setzen Studierende Projekte – beispielsweise aus den nachfolgenden Themengebieten – praktisch um: Artificial Intelligence, Business Analytics, Business Process Management, Conceptual Modeling, Cyber-physical Systems, Process Mining. Die behandelten Themen ändern sich von Jahr zu Jahr. Im Einzelnen umfassen die Arbeiten neben einer Einführung in den Themenbereich typischerweise die Analyse eines vorgegebenen Problems, die Erstellung eines geeigneten Konzepts, die Entwicklung von Software sowie letztlich die Evaluierung und Dokumentation der Ergebnisse. Die Projektaufgabe kann mit geplanten Bachelor-Arbeiten in Verbindung stehen.
Ziel der Veranstaltung von Fachprojekt „Enterprise Computing“: Die Studierenden erwerben einerseits Kenntnisse im Bereich moderner betrieblicher Informationssysteme. Insbesondere werden Kompetenzen in den Bereichen des Entwurfs, der Entwicklung, des Monitorings, der Evaluation und der Verbesserung von intelligenten und prozessorientierten Systemen vermittelt. Durch das Arbeiten in Gruppen werden ferner Techniken des Projektmanagements praktisch erprobt sowie kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erweitert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Kompetenzen von Fachprojekt „Enterprise Computing“: Die Studierenden erwerben Kenntnisse im Bereich moderner betrieblicher Informationssysteme, insbesondere Kompetenzen in den Bereichen des Entwurfs, der Entwicklung, des Monitorings, der Evaluation und der Verbesserung von intelligenten und prozessorientierten Systemen. Durch das Arbeiten in Gruppen werden Techniken des Projektmanagements praktisch erprobt sowie kommunikative Kompetenzen erworben und die Teamfähigkeit gestärkt. Die Präsentation der Projektergebnisse erweitert Kompetenzen in der Präsentation von Lösungen für komplexe Problemstellungen.
Prüfungen von Fachprojekt „Enterprise Computing“: Voraussetzung für den Modulabschluss: Ausarbeitung des Projekts, Dokumentation der Ergebnisse und Abschlusspräsentation
Teilnahmevoraussetzung von Fachprojekt „Enterprise Computing“: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Software-Technik 1 (SWT)“
Modultyp und Verwendbarkeit des Moduls Fachprojekt „Enterprise Computing“: Wahlpflicht-Modul in den Bachelor-Studiengängen Informatik und Angewandte Informatik, Fachprojekt
Modulbeauftragte/r von Fachprojekt „Enterprise Computing“: Prof. Dr. C. Janiesch
Zuständige Fakultät von Fachprojekt „Enterprise Computing“: Informatik


Name des Moduls: Digitale Bildverarbeitung (DBV)
Englischer Modultitel: Digital Image Processing
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Digitale Bildverarbeitung (DBV): Deutsch
Lehrinhalte von Digitale Bildverarbeitung (DBV): Die Erfassung und die Verarbeitung von Bildern mit Rechnern verbreiten sich aufgrund der kostengünstigen Verfügbarkeit der gerätetechnischen Ausstattung rasant. Gegenstand des Moduls sind Methoden der digitalen Bildanalyse. Ein Schwerpunkt ist die klassische Verarbeitungskette der Bildanalyse, die sich in die Teile Diskretisierung, Bildrestauration, Bildverbesserung und Segmentierung gliedert. Dabei werden grundlegende Konzepte wie das Abtasttheorem, die Fourier-Transformation und andere Transformationen sowie Verfahren zur Lösung von Optimierungsproblemen präsentiert. Ein weiterer Schwerpunkt ist die Einführung in die Bildkompression, die Mustererkennung und das 3D-Computersehen, die Grundlage für wichtige Anwendungen der digitalen Bildverarbeitung sind.
Ziel der Veranstaltung von Digitale Bildverarbeitung (DBV): Die Studierenden sollen über ein Grundwissen verfügen, das sie in die Lage versetzt, Aufgaben, die einer Lösung mit den Methoden der digitalen Bildanalyse zugänglich sind, zu erkennen und zu bewältigen. Solche Aufgaben treten auch im Zusammenhang mit der Verarbeitung von Daten anderer Sensoren auf. Die Studierenden sollen sich ferner auf dem Gebiet so zurechtfinden, dass Sie in der Lage sind, verwandte Methoden und Verfahren, die über diejenigen der Vorlesung hinausgehen, aufgabenabhängig ausfindig zu machen, zu verstehen und anzuwenden.
Kompetenzen von Digitale Bildverarbeitung (DBV): Die Studierenden sollen über ein Grundwissen verfügen, das sie in die Lage versetzt, Aufgaben, die einer Lösung mit den Methoden der digitalen Bildanalyse zugänglich sind, zu erkennen und zu bewältigen. Solche Aufgaben treten auch im Zusammenhang mit der Verarbeitung von Daten anderer Sensoren auf. Die Studierenden sollen sich ferner auf dem Gebiet so zurechtfinden, dass Sie in der Lage sind, verwandte Methoden und Verfahren, die über diejenigen der Vorlesung hinausgehen, aufgabenabhängig ausfindig zu machen, zu verstehen und anzuwenden.
Prüfungen von Digitale Bildverarbeitung (DBV): Modulprüfung: mündliche Prüfung (20-30 Minuten) BOSS-NR. 67191
Studienleistungen: Keine
Teilnahmevoraussetzung von Digitale Bildverarbeitung (DBV): Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2)“ Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1 (MafI1)“, Modul „Mathematik für Informatik 2 (MafI2)“, bzw. Modul „Höhere Mathematik I (HM1)“, Modul „Höhere Mathematik II (HM2)“
Modultyp und Verwendbarkeit des Moduls Digitale Bildverarbeitung (DBV): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Digitale Bildverarbeitung (DBV): Dr. Frank Weichert
Zuständige Fakultät von Digitale Bildverarbeitung (DBV): Informatik


Name des Moduls: Sicherheit: Fragen und Lösungsansätze (SFL)
Englischer Modultitel: Security: Challenges and Solutions
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Sicherheit: Fragen und Lösungsansätze (SFL): Deutsch und/oder Englisch
Lehrinhalte von Sicherheit: Fragen und Lösungsansätze (SFL): Das Modul gibt eine grundlegende Einführung in die Themen der Cybersicherheit. Es werden Bedrohungen und Schutzbedürfnisse erläutert, Schutzmaßnahmen erläutert und deren Restrisiken beleuchtet. Folgende Schwerpunkte werden üblicherweise behandelt: Kryptographie (u.a. symmetrische und asymmetrische Verschlüsselung, Hashfunktionen, MACs, digitale Signaturen), Netzwerksicherheit (u.a. TLS, Firewalls, DNSSEC), Schadsoftware, Systemsicherheit (u.a. Zugriffsschutz, Isolierung), Softwaresicherheit (Einführung in x86-Assembly, danach u.a. Pufferüberläufe/Shellcode und Schutz vor selbigen, Code-Reuse-Angriffe, Speicherrandomisierung).
Ziel der Veranstaltung von Sicherheit: Fragen und Lösungsansätze (SFL): Die Studierenden sollen die Fragen zur Sicherheit umfassend verstehen und gängige Lösungsansätze mitsamt der Nachweise ihrer Wirksamkeit kennen und anwenden können. Darüber hinaus sollen sie weitergehende Lösungsvorschläge im Hinblick auf die Sicherheitseigenschaften eigenständig untersuchen und bewerten können.
Kompetenzen von Sicherheit: Fragen und Lösungsansätze (SFL): Die Studierenden sollen die Fragen zur Sicherheit umfassend verstehen und gängige Lösungsansätze mitsamt der Nachweise ihrer Wirksamkeit kennen und anwenden können. Darüber hinaus sollen sie weitergehende Lösungsvorschläge im Hinblick auf die Sicherheitseigenschaften eigenständig untersuchen und bewerten können.
Prüfungen von Sicherheit: Fragen und Lösungsansätze (SFL): Modulprüfung: Klausur oder mündliche Prüfung gemäß Ankündigung nach Beginn der Veranstaltung BOSS-NR. 67291. Studienleistung: Mindestpunktzahl bei den Übungen und sonstigen Aufgaben, Details laut Vorlesungsankündigung BOSS-NR. 67241. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Sicherheit: Fragen und Lösungsansätze (SFL): Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1“, Modul „Betriebssysteme“, Modul „Rechnernetze“.
Modultyp und Verwendbarkeit des Moduls Sicherheit: Fragen und Lösungsansätze (SFL): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik.
Modulbeauftragte/r von Sicherheit: Fragen und Lösungsansätze (SFL): Prof. Dr. Chr. Rossow
Zuständige Fakultät von Sicherheit: Fragen und Lösungsansätze (SFL): Informatik


Name des Moduls: Mobile Kommunikationssysteme (MobiKom)
Englischer Modultitel: Mobile Communication Systems
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: Nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Mobile Kommunikationssysteme (MobiKom): Deutsch
Lehrinhalte von Mobile Kommunikationssysteme (MobiKom): Das Modul stellt alle Aspekte mobiler und drahtloser Kommunikation dar, die für die Informatik relevant sind. Es wird primär auf die höheren Protokollschichten eingegangen. Im Mittelpunkt stehen die angebotenen Dienste und ihre Realisierung. Neben einer Einführung in die Struktur mobiler Systeme und ihrer Protokolle werden auch verschiedene reale Systeme exemplarisch vorgestellt.
Ziel der Veranstaltung von Mobile Kommunikationssysteme (MobiKom): Die Studierenden sollen in der Lage sein, die Möglichkeiten und Grenzen mobiler Kommunikationssysteme bewerten zu können. Sie sollen die technologische Kompetenz erwerben, um auf Basis vorhandener Protokollimplementierungen mobile Anwendungen zu entwerfen.
Kompetenzen von Mobile Kommunikationssysteme (MobiKom): Die Studierenden sollen in der Lage sein, die Möglichkeiten und Grenzen mobiler Kommunikationssysteme bewerten zu können. Sie sollen die technologische Kompetenz erwerben, um auf Basis vorhandener Protokollimplementierungen mobile Anwendungen zu entwerfen.
Prüfungen von Mobile Kommunikationssysteme (MobiKom): Modulprüfung: Mündliche Prüfung (20 Minuten) BOSS-NR. 67391. Studienleistung: –keine–
Teilnahmevoraussetzung von Mobile Kommunikationssysteme (MobiKom): Erfolgreich abgeschlossen: Modul „Rechnernetze und Verteilte Systeme (RvS)“.
Modultyp und Verwendbarkeit des Moduls Mobile Kommunikationssysteme (MobiKom): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik.
Modulbeauftragte/r von Mobile Kommunikationssysteme (MobiKom): Prof. Dr. P. Buchholz
Zuständige Fakultät von Mobile Kommunikationssysteme (MobiKom): Informatik


Name des Moduls: Einführung in Computational Intelligence (EinfCI)
Englischer Modultitel: Introduction to Computational Intelligence
Studiengang: Bachelorstudiengang Informatik , Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Einführung in Computational Intelligence (EinfCI): Englisch
Lehrinhalte von Einführung in Computational Intelligence (EinfCI): 
  - Computational Intelligence wird klassischerweise als Sammelbegriff für künstliche neuronale Netze, Fuzzy Logik und evolutionäre Algorithmen vermittelt. Wesentliche Grundlagen in allen Gebieten werden diskutiert.
  - Grundlagen künstlicher neuronaler Netze: McCulloch-Pitts-Netze, Perzeptron, Hopfield-Netze, überwachtes und unüberwachtes Lernen, Backpropagation.
  - Grundlagen der Fuzzy Logik: Fuzzy Mengen, Fuzzy Logik, Inferenzen, Fuzzy Zahlen.
  - Grundlagen evolutionärer Algorithmen: algorithmische Grundlagen, Parametrisierung, Analysemethoden, Grenzen der Anwendbarkeit.
Ziel der Veranstaltung von Einführung in Computational Intelligence (EinfCI): Unbekannt
Kompetenzen von Einführung in Computational Intelligence (EinfCI): Studierende sollen einen Überblick über die verschiedenen Aspekte der Computational Intelligence erhalten und in allen drei Bereichen (künstliche neuronale Netze, Fuzzy Logik und evolutionäre Algorithmen) die wesentlichen Elemente kennen, sie einsetzen und für konkrete Anwendungen anpassen können. Sie sollen in der Lage sein einzuschätzen, wo Einsatzmöglichkeiten und Grenzen der Einsetzbarkeit bestehen.
Prüfungen von Einführung in Computational Intelligence (EinfCI): Modulprüfung: Klausur BOSS-NR. 67591. Studienleistung: Erreichen einer Mindestzahl von Punkten der Übungsaufgaben BOSS-NR. 67541. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Einführung in Computational Intelligence (EinfCI): Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: Modul „Mathematik für Informatik 1“ bzw. Modul „Höhere Mathematik 1“, Modul „Mathematik für Informatik 2“ bzw. Modul „Höhere Mathematik 2“ und Modul „Wahrscheinlichkeitsrechnung und mathematische Statistik“.
Modultyp und Verwendbarkeit des Moduls Einführung in Computational Intelligence (EinfCI): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik.
Modulbeauftragte/r von Einführung in Computational Intelligence (EinfCI): Prof. Dr. G. Rudolph
Zuständige Fakultät von Einführung in Computational Intelligence (EinfCI): Informatik


Name des Moduls: Einführung in die Grundlagen des Model Checking
Englischer Modultitel: Foundations of Model Checking
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: Ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Einführung in die Grundlagen des Model Checking: Deutsch
Lehrinhalte von Einführung in die Grundlagen des Model Checking: 
  - Schwerpunkt der Veranstaltung sind die theoretischen Grundlagen des Model Checking für lineare und verzweigende Zeit vermittelt.
  - Zur Spezifikation von Eigenschaften werden die Logiken LTL und CTL verwendet.
  - Ihre grundlegenden Eigenschaften aus Sicht der Logik und Komplexitätstheorie sowie Zusammenhänge zur Spieltheorie werden dargestellt.
  - Die wichtigsten algorithmischen Ansätze für das Model Checking sowie Techniken zur Größenreduktion von Transitionssystemen werden vorgestellt.
Ziel der Veranstaltung von Einführung in die Grundlagen des Model Checking: 
  - Die Studierenden sollen verteilte Systeme durch Transitionssysteme modellieren und Eigenschaften in LTL und CTL spezifizieren können.
  - Die Kenntnis der zugrunde liegenden Algorithmen soll ein Verständnis für Möglichkeiten und Grenzen des Model Checking erreicht werden.
Kompetenzen von Einführung in die Grundlagen des Model Checking: 
  - Die Studierenden sollen verteilte Systeme durch Transitionssysteme modellieren und Eigenschaften in LTL und CTL spezifizieren können.
  - Die Kenntnis der zugrunde liegenden Algorithmen soll ein Verständnis für Möglichkeiten und Grenzen des Model Checking erreicht werden.
Prüfungen von Einführung in die Grundlagen des Model Checking: 
  - Modulprüfung: mündliche Prüfung (20 Minuten), bei großer Teilnehmerzahl: Klausur (90 Minuten)
  - Studienleistung: Aktive Teilnahme und Erreichen der Mindestpunktzahl der Übungsaufgaben
Teilnahmevoraussetzung von Einführung in die Grundlagen des Model Checking: 
  - Erfolgreich abgeschlossen: –keine–
  - Vorausgesetzte Kenntnisse: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Grundbegriffe der Theoretischen Informatik (GTI)“, Modul „Logik für Informatik“
  - Wünschenswerte Kenntnisse: Modul „Software-Technik (SWT)“
Modultyp und Verwendbarkeit des Moduls Einführung in die Grundlagen des Model Checking: Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Einführung in die Grundlagen des Model Checking: Prof. Dr. T. Schwentick
Zuständige Fakultät von Einführung in die Grundlagen des Model Checking: Informatik


Name des Moduls: Betriebliche Informationssysteme (BIS)
Englischer Modultitel: Business Information Systems
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: ab 3. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Betriebliche Informationssysteme (BIS): deutsch
Lehrinhalte von Betriebliche Informationssysteme (BIS): Einführung in die Wirtschaftsinformatik als eigenständige Disziplin, die wissenschaftlich fundiert sozio-technische Systeme, die menschliche und maschinelle Komponenten (Teilsysteme) umfassen, in Wirtschaft und Gesellschaft erklärt und gestaltet. Es werden konkrete Beispiele von Mensch-Aufgabe-Technik-Systeme behandelt, die zur Entscheidungsfindung, Koordination, Steuerung und Kontrolle von Wertschöpfungsprozessen sowie deren Automatisierung, Integration und Virtualisierung unter insbesondere ökonomischen Kriterien beitragen. Beispielhaft werden Systeme aus verschiedenen Bereichen beleuchtet: Enterprise Resource Planning, Customer Relationship Management, Supplier Relationship Management, Business Analytics und Business Process Management.
Kompetenzen von Betriebliche Informationssysteme (BIS): Studierende sollen in der Lage sein, differenziert über die Sammlung, Strukturierung, Verarbeitung, Bereitstellung, Kommunikation und Nutzung von Daten, Informationen und Wissen sowie deren Transformation zu referieren. Weiterhin können sie Produkt-, Prozess- und Geschäftsmodellinnovationen auf Basis gegenwärtiger technologischer Trends beurteilen.
Prüfungen von Betriebliche Informationssysteme (BIS): Modulprüfung: Klausur oder mündliche (Gruppen-)Prüfung. Studienleistung: -keine-. Freiwillige semesterbegleitende Leistungen gem. §19 Abs.7 BPO: nach Ankündigung der Prüferinnen und Prüfer.
Teilnahmevoraussetzung von Betriebliche Informationssysteme (BIS): Erfolgreich abgeschlossen: –keine–. Wünschenswerte Kenntnisse: Modul „Informationssysteme (IS)“
Modultyp und Verwendbarkeit des Moduls Betriebliche Informationssysteme (BIS): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Betriebliche Informationssysteme (BIS): Prof. Dr. C. Janiesch
Zuständige Fakultät von Betriebliche Informationssysteme (BIS): Informatik


Name des Moduls: Webtechnologien 2 (WT2)
Englischer Modultitel: Web Technologies 2
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: ab 3. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Webtechnologien 2 (WT2): deutsch
Lehrinhalte von Webtechnologien 2 (WT2): Weiterführende Themen und aktuelle Entwicklungen im Kontext der Erstellung von komplexen Web-Anwendungen, z.B. Semantic Web, Web Engineering, Web Mining, aktuelle Softwareentwicklungsumgebungen.
Kompetenzen von Webtechnologien 2 (WT2): Aufbauend auf das Modul „Webtechnologien 1“ sollen die Studierenden ihre Kenntnisse und Fähigkeiten im Bereich der Entwicklung von komplexen, web-basierten Anwendungen vertiefen und erweitern. Sie sollen beispielhaft aktuelle Forschungsthemen auf dem Gebiet kennen lernen. In der eng an die Vorlesung gekoppelten Übung sollen die Studierenden die vermittelten Konzepte anhand praktischer Beispiele und anhand eines Webentwicklungsprojekts anwenden und vertiefen.
Prüfungen von Webtechnologien 2 (WT2): Modulprüfung: Klausur (100 Minuten) BOSS-NR. 67991. Studienleistung: Erreichen der Mindestpunktezahl der Übungsaufgaben BOSS-NR. 67941. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Webtechnologien 2 (WT2): Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“. Wünschenswerte Kenntnisse: Modul „Informationssysteme“
Modultyp und Verwendbarkeit des Moduls Webtechnologien 2 (WT2): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Webtechnologien 2 (WT2): (Studiendekan)
Zuständige Fakultät von Webtechnologien 2 (WT2): Informatik


Name des Moduls: Aktuelle Themen der Dienstleistungsinformatik (ATDLI)
Englischer Modultitel: Current Topics in e-Services
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: ab 3. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Aktuelle Themen der Dienstleistungsinformatik (ATDLI): deutsch
Lehrinhalte von Aktuelle Themen der Dienstleistungsinformatik (ATDLI): Aktuelle Themen der Dienstleistungsinformatik, beispielsweise in folgenden Umfeldern: Geschäftsprozessmodellierung, -optimierung, -realisierung, -monitoring, -evolution und –produktlinienmanagement; Enterprise Application Integration, insbesondere mit serviceorientierten Methoden (SO-Design, SO-Computing, SO-Softwaredevelopment) auf Basis serviceorientierter Architekturen; (Re-)Kombination bestehender betrieblicher Informationen und Funktionalitäten (Enterprise Mashups), d.h. Professionalisierung des Mashup-Gedankens, sowie Integration dieses Konzeptes in den Bereich der Geschäftsprozesse; Methoden zur systematischen, typischerweise modellgetriebenen Beherrschung der unweigerlichen und kontinuierlichen Änderungsanforderungen (Changemanagement); Behandlung nicht funktionaler Eigenschaften, wie Security, Verfügbarkeit, Kosten (Total Cost of Ownership), Performanz, Durchsatz.
Kompetenzen von Aktuelle Themen der Dienstleistungsinformatik (ATDLI): Die Studierenden sollen in der Veranstaltung nicht nur die Fähigkeit erwerben, konzeptuelle Hintergründe (Motivation, Problematik, Lösungsideen, Stärken und Schwächenanalysen) der oben genannten Thematiken zu verstehen und zu bewerten, sondern auch den jeweiligen Status Quo im Umgang mit realen Werkzeugen konkret auszuloten. Insbesondere sollen sie in die Lage versetzt werden, Firmenpräsentation und White Papers bzgl. folgender Kriterien, z. B. bzgl. der Kostennutzenrelation, richtig einzuschätzen: Kernfeatures versus Marketingstatements; tatsächliche praktische Einflussfaktoren; Integrierbarkeit in das geschäftliche Umfeld.
Prüfungen von Aktuelle Themen der Dienstleistungsinformatik (ATDLI): Modulprüfung: Klausur, mündliche Prüfung oder erfolgreiche Projektbearbeitung nach Ankündigung BOSS-NR. 87291. Studienleistung: Ankündigung BOSS-NR. 87241. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Aktuelle Themen der Dienstleistungsinformatik (ATDLI): Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“. Wünschenswerte Kenntnisse: Modul „Informationssysteme (IS)“, Modul „Webtechnologien 1“
Modultyp und Verwendbarkeit des Moduls Aktuelle Themen der Dienstleistungsinformatik (ATDLI): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Aktuelle Themen der Dienstleistungsinformatik (ATDLI): Prof. Dr. B. Steffen
Zuständige Fakultät von Aktuelle Themen der Dienstleistungsinformatik (ATDLI): Informatik


Name des Moduls: Software-Engineering für langlebige Systeme
Englischer Modultitel: Software Engineering for Long-Living Systems
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: 4.–6. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Software-Engineering für langlebige Systeme: deutsch
Lehrinhalte von Software-Engineering für langlebige Systeme: In den grundlegenden Vorlesungen zur Softwaretechnik wurden die Grundlagen der ingenieurmäßigen Konstruktion großer Softwaresysteme gelegt. Über diese Grundlagen hinaus haben sich für spezielle Systeme-Klassen sowohl spezielle Anforderungen an das Design und den Entwicklungsprozess als auch verschiedene Techniken herausgebildet. So hat die Softwareentwicklung für eingebettete Systeme, Echtzeitsysteme oder langlaufende Systeme jeweils spezialisierte Techniken entwickelt. Ziel dieser Vorlesung ist es, eine Einführung in allgemeine Probleme der verschiedenen Systemgruppen zu geben, und Techniken für den speziellen Bereich der langlebenden Systeme zu vermitteln. Dazu werden die Themen Software- und Architektur-Erosion, Softwarearchitekturen für langlaufende Systeme bzw. das Design von Erweiterungen unter unvollständiger Information über das Bestandssystem behandelt. Ein weiterer Schwerpunkt wird auf die sogenannte „Updatefähigkeit“ gelegt.
Kompetenzen von Software-Engineering für langlebige Systeme: Die Studierenden können auf verschiedenen Ebenen (z.B. Modell- und Code-Ebene) die ingenieurmäßige Weiterentwicklungstechniken von Software anwenden, die das Ziel haben, eine zu schnelle Softwareerosion zu verhindern und eine möglichst lange Einsetzbarkeit der Software zu ermöglichen. Sie sollen die Vor- und Nachteile der vorgestellten Techniken abschätzen und für Probleme mittlerer Größe anwenden können.
Prüfungen von Software-Engineering für langlebige Systeme: Modulprüfung: Klausur oder mündliche Prüfung gemäß Ankündigung in der Veranstaltung BOSS-NR. 87791. Studienleistung: erfolgreiche Teilnahme an den Übungen gemäß Ankündigung in der Veranstaltung BOSS-NR. 87741. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Software-Engineering für langlebige Systeme: Erfolgreich abgeschlossen: Modul „Software-Technik (SWT)“. Vorausgesetzte Kenntnisse: gründliche Kenntnisse des objektorientierten Programmierparadigmas; vertiefte Programmierpraxis, bevorzugt in der Programmiersprache Java
Modultyp und Verwendbarkeit des Moduls Software-Engineering für langlebige Systeme: Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Software-Engineering für langlebige Systeme: Prof. Dr. J. Rehof
Zuständige Fakultät von Software-Engineering für langlebige Systeme: Informatik


Name des Moduls: Datenbanken in der Praxis (DBprax)
Englischer Modultitel: Databases in Practice
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: 4.–6. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Datenbanken in der Praxis: deutsch
Lehrinhalte von Datenbanken in der Praxis: Aufbauend auf der Vorlesung „Informationssysteme“ lernen die Studierenden, wie sich Datenbanksysteme und die darin implementierten Techniken für spezifische Anwendungsfelder einsetzen lassen. Die diskutierten Anwendungsfelder wechseln dabei in unregelmäßigen Rhythmus. Beispielhafte Anwendungsfelder könnten sein: XML und Datenbanken: • Einführung in das Datenmodell von XML (XDM) • Schemadefinition (DTD, XML Schema) • Anfragesprachen: XPath, XQuery, XSLT • Speicherungs- und Auswertungstechniken für XML (relational, nicht-relational) Data Warehousing: • Abgrenzung OLAP vs. OLTP • Data Cubes, Faktentabelle, Dimensionen, Star Schema • Indexstrukturen (Bitmap-Indizes, Join-Indizes) • ETL-Prozesse • Data Cleansing
Kompetenzen von Datenbanken in der Praxis: Die Studierenden erlernen die Begriffe und Konzepte der jeweiligen Anwendungsdomäne. Durch den Bezug zu Implementierungsaspekten werden die Studierenden in die Lage versetzt, ein Datenbanksystem für ein gegebenes Anwendungsproblem einzusetzen, zu konfigurieren, zu optimieren, sowie eine Lösung für ein Anwendungsproblem zu verstehen, zu analysieren und zu bewerten.
Prüfungen von Datenbanken in der Praxis: Modulprüfung: Klausur oder mündliche Prüfung gemäß Ankündigung in der Veranstaltung BOSS-NR. 87891. Studienleistung: erfolgreiche Teilnahme an den Übungen gemäß Ankündigung in der Veranstaltung BOSS-NR. 87841. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Datenbanken in der Praxis: Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: Modul „Informationssysteme“
Modultyp und Verwendbarkeit des Moduls Datenbanken in der Praxis: Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Datenbanken in der Praxis: Prof. Dr. Jens Teubner
Zuständige Fakultät von Datenbanken in der Praxis: Informatik


Name des Moduls: Einführung in die Datenvisualisierung (EiDV)
Englischer Modultitel: Introduction to Data Visualization
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Einführung in die Datenvisualisierung: deutsch
Lehrinhalte von Einführung in die Datenvisualisierung: Mit der in praktisch allen Bereichen steigenden Größe von Datenmengen sowie deren Komplexität und Wandelbarkeit, gewinnt die Visualisierung zunehmend an Bedeutung. Dabei dient sie sowohl zur intuitiven Darstellung aber auch als Mittel zur Analyse. Entsprechende Visualisierungen werden häufig durch Abbildung auf graphische Szenen erreicht, die dann mittels Verfahren der graphischen Datenverarbeitung effizient dargestellt werden. Gegenstand des Moduls sind grundlegende Konzepte zur Visualisierung und Analyse von Daten unterschiedlichen Typs im Kontext von Anwendungen. Betrachtete Datentypen sind insbesondere ein- und zweidimensionale Funktionen, mehrdimensionale Funktionen, Graphen und gestreute Punktmengen. Es werden Methoden der graphischen Datenverarbeitung, der statistischen Datenanalyse, der effizienten diskreten Algorithmen und Datenstrukturen sowie der angewandten Mathematik präsentiert, auf denen die Konzepte und deren Realisierung beruhen. Ferner wird auf existierende Visualisierungssysteme eingegangen, die entsprechende Konzepte bereitstellen.
Kompetenzen von Einführung in die Datenvisualisierung: Die Studierenden sollen über ein methodisches Wissen verfügen, das sie in die Lage versetzt, komplexe Visualisierungs- und Analyseaufgaben auf Daten zu lösen. Dazu sollen sie sowohl Methoden, die in existierenden Systemen verfügbar sind und auf Originalliteratur beruhen, in gegebener Form anwenden, diese aber auch auf neue eventuell erweiterte Fragestellungen anpassen sowie Einsatzgrenzen und spezifische Besonderheiten identifizieren können.
Prüfungen von Einführung in die Datenvisualisierung: Modulprüfung: mündliche Prüfung (20-30 Minuten) BOSS-Nr. 88591. Studienleistung: –keine–
Teilnahmevoraussetzung von Einführung in die Datenvisualisierung: Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“, Modul „Datenstrukturen, Algorithmen und Programmierung 2 (DAP 2)“. Vorausgesetzte Kenntnisse: Mathematische Grundausbildung (Analysis, lineare Algebra)
Modultyp und Verwendbarkeit des Moduls Einführung in die Datenvisualisierung: Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Einführung in die Datenvisualisierung: Dr. Frank Weichert
Zuständige Fakultät von Einführung in die Datenvisualisierung: Informatik


Name des Moduls: Grundlagen der Datenwissenschaft (GDW)
Englischer Modultitel: Foundations of Data Science
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Grundlagen der Datenwissenschaft (GDW): Deutsch und Englisch, insbesondere soll der 2. Teil im Rahmen des International Summer Programs angeboten und daher auf Englisch gehalten werden
Lehrinhalte von Grundlagen der Datenwissenschaft (GDW): Die Verarbeitung von Daten stellt im Zeitalter von „Big Data“ neue Herausforderungen an die Informatik. Anfragen an Datenbanken werden immer komplexer und benötigen Ansätze des Maschinellen Lernens und des Data Minings, und die Größe der Datenmengen stellt neue algorithmische Herausforderung an diese Techniken. Die Vorlesung soll die Grundlagen moderner Ansätze zur Verarbeitung von Daten und zum Extrahieren von Wissen aus ihnen abdecken. Das umfasst Fragestellungen zu Datenbankmanagementsystemen wie z.B. Datenbanken, Anfragesprachen, verteilte Dateisysteme, Map-Reduce und Datenstrommodelle als Hilfsmittel um Algorithmen zu entwerfen, die mit großen Datenmengen umgehen können. Dann soll anhand der Nächste-Nachbarn-Klassifikation Techniken zur Ähnlichkeitssuche wie z.B. minhash, locality-sensitive Hashing und spektrales Hashing angesprochen werden. Danach sollen weitere Basistechniken des Maschinellen Lernens und des Data Minings erläutert werden wie z.B. naive Bayes, Entscheidungsbäume, Stützvektormaschinen, die Clusteranalyse und das Finden von häufigen Teilmengen. Abschließend sollen die Grundlagen von Suchmaschinen vermittelt werden wie z.B. Googles PageRank und Kleinbergs Hypertext-induced Topic Selection zur Berechnung von Hubs und Authorities. Die Vorlesung basiert auf http://www.mmds.org und wird hauptsächlich algorithmische Aspekte der Datenwissenschaften betrachten. Grundlegende Konzepte der Mathematik und Statistik sollen aber auch vermittelt werden.
Ziel der Veranstaltung von Grundlagen der Datenwissenschaft (GDW): Ziel des Moduls ist es, dass Studierende eine ausreichende Kompetenz zu vermitteln, die ihnen eine aktive Lösungsgestaltung von alltäglich auftauchenden Problemen der Datenwissenschaften ermöglicht. Im Einzelnen: Verständnis dafür, was Daten sind, Kenntnis der grundlegenden und fortgeschrittenen Verfahren der verteilten Datenverarbeitung, Kenntnis der grundlegenden und fortgeschrittenen Verfahren des Maschinellen Lernens und des Data Minings zum Extrahieren von Wissen aus Daten. Insbesondere soll die Studierende durch ein grundlegendes Verständnis der Prinzipien der Datenwissenschaften die Fähigkeit erhalten, deren Möglichkeiten und Grenzen in bestimmten Anwendungsfeldern einschätzen zu können.
Kompetenzen von Grundlagen der Datenwissenschaft (GDW): Ziel des Moduls ist es, dass Studierende eine ausreichenden Kompetenz zu vermitteln, die ihnen eine aktiven Lösungsgestaltung von alltäglich auftauchenden Problemen der Datenwissenschaften
Prüfungen von Grundlagen der Datenwissenschaft (GDW): Modulprüfung: Klausur oder mündliche Prüfung BOSS-Nr. 88791. Studienleistung: aktive Mitarbeit in der Übung und Erreichen der Mindestpunktzahl bei den Übungsaufgaben BOSS-Nr. –keine–. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzung von Grundlagen der Datenwissenschaft (GDW): Erfolgreich abgeschlossen: -keine-. Wünschenswerte Kenntnisse: Grundlegende Kenntnisse der Mathematik (insbes. Statistik)
Modultyp und Verwendbarkeit des Moduls Grundlagen der Datenwissenschaft (GDW): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Grundlagen der Datenwissenschaft (GDW): Prof. Dr. E. Schubert
Zuständige Fakultät von Grundlagen der Datenwissenschaft (GDW): Informatik


Name des Moduls: Konzepte und Methoden der Theoretischen Informatik (KoMTI)
Englischer Modultitel: Concepts and Methods of Theoretical Computer Science
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Deutsch und/oder Englisch
Lehrinhalte von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Das Modul gibt einen Einblick in Methoden und Denkweisen der Theoretischen Informatik, die über die kanonischen Inhalte des Moduls Grundbegriffe der Theoretischen Informatik hinausgehen. Beispielhafte Themen können sein: Rewritingsysteme, Algorithmisches Lernen, Parametrisierte Algorithmenanalyse, Kommunikationskomplexität, Informationstheorie, Beschreibungskomplexität, Kolmogorovkomplexität, Petrinetze, Spieltheorie.
Ziel der Veranstaltung von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Studierende kennen eine deutlich über die GTI hinausreichende Menge von Denkansätzen und Techniken der Theoretischen Informatik. Sie sind in der Lage zu erkennen, wenn diese Denkansätze zur Modellierung oder zum Erkenntnisgewinn eingesetzt werden können. Sie kennen die allerwichtigsten Hauptaussagen der jeweiligen Gebiete und können sich selbstständig vertiefende Kenntnisse erarbeiten.
Kompetenzen von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Studierende kennen eine deutlich über die GTI hinausreichende Menge von Denkansätzen und Techniken der Theoretischen Informatik. Sie sind in der Lage zu erkennen, wenn diese Denkansätze zur Modellierung oder zum Erkenntnisgewinn eingesetzt werden können. Sie kennen die allerwichtigsten Hauptaussagen der jeweiligen Gebiete und können sich selbstständig vertiefende Kenntnisse erarbeiten.
Prüfungen von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Modulprüfung: Mündliche Prüfung von 20 bis 30 Minuten oder schriftliche Klausur von 90 Minuten, laut Ankündigung in der Veranstaltung BOSS-Nr. 88891. Studienleistung: erfolgreiche Teilnahme an den Übungen gemäß Ankündigung in der Veranstaltung BOSS-Nr. 88841
Teilnahmevoraussetzung von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Erfolgreich abgeschlossen: Modul „Grundbegriffe der Theoretischen Informatik“ bzw. Modul „Theoretische Informatik für Studierende der Angewandten Informatik “. Wünschenswerte Kenntnisse: Modul „Logik für Informatik“
Modultyp und Verwendbarkeit des Moduls Konzepte und Methoden der Theoretischen Informatik (KoMTI): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Prof. Dr. Th. Schwentick
Zuständige Fakultät von Konzepte und Methoden der Theoretischen Informatik (KoMTI): Informatik


Name des Moduls: Musikdatenanalyse (MDA)
Englischer Modultitel: Music Data Analysis
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: zweijährlich
Dauer: 1 Semester
Studienabschnitt: ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Musikdatenanalyse (MDA): Deutsch
Lehrinhalte von Musikdatenanalyse (MDA): Physikalische Grundlagen von Musik; Musikalische Grundlagen; Digitale Signalverarbeitung; Digitale Darstellung von Musik; Signalbasierte und andere Merkmale von Musik; Statistik in der Musik; unüberwachtes Lernen, überwachte Klassifikation und Bewertung von Modellen auf Musikdaten; Merkmalsbearbeitung und -auswahl; Transkription (Vernotung); Segmentierung; Instrumentenerkennung
Ziel der Veranstaltung von Musikdatenanalyse (MDA): Nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage, Musikdaten digital zu bearbeiten, analysieren und auf dieser Basis Anwendungen zu entwickeln.
Kompetenzen von Musikdatenanalyse (MDA): Nach erfolgreichem Abschluss des Moduls sind die Studierenden in der Lage, Musikdaten digital zu bearbeiten, analysieren und auf dieser Basis Anwendungen zu entwickeln.
Prüfungen von Musikdatenanalyse (MDA): Modulprüfung: Klausur oder mündliche Prüfung (Die Prüfungsform wird zu Beginn der Veranstaltung bekanntgegeben.) BOSS-Nr. 88892. Studienleistung: –keine–
Teilnahmevoraussetzung von Musikdatenanalyse (MDA): Erfolgreich abgeschlossen: -keine Wünschenswerte Kenntnisse: Grundlegende Kenntnisse der Mathematik (insbes. Statistik)
Modultyp und Verwendbarkeit des Moduls Musikdatenanalyse (MDA): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Musikdatenanalyse (MDA): Prof. Dr. Claus Weihs / Studiendekan Informatik
Zuständige Fakultät von Musikdatenanalyse (MDA): Informatik


Name des Moduls: Wissenschaftliches Rechnen
Englischer Modultitel: Scientific Computing
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Wissenschaftliches Rechnen: Deutsch
Lehrinhalte von Wissenschaftliches Rechnen: Viele Fragestellungen in den Natur- und Ingenieurwissenschaften laufen am Ende auf die numerische Lösung mathematischer Probleme hinaus, wie z.B. das Lösen von Gleichungssystemen oder das Minimieren von Kostenfunktionen. In dieser Vorlesung wird das häufig benötigte numerische Handwerkszeug kompakt und anhand von anschaulichen und interessanten Problemen eingeführt. Der Schwerpunkt liegt dabei weniger auf der theoretischen Herleitung dieser Methoden, als vielmehr auf deren Verständnis, praktischen Anwendung und effizienten Implementierung. Die behandelten Methoden enthalten das Lösen dicht und dünn besetzter linearer Gleichungssysteme, Least Squares Approximationen und partielle Differentialgleichungen. Im Kontext der effizienten Implementation wird auf effizientes C++ und die Parallelisierung auf multi-core CPUs und many-core GPUs eingegangen. Zum besseren Verständnis wird ein Großteil der besprochenen Methoden in den praktischen Übungsaufgaben implementiert.
Ziel der Veranstaltung von Wissenschaftliches Rechnen: Die Studierenden erlernen die grundlegenden numerischen Werkzeuge für typische Anwendungen in den Natur- und Ingenieurwissenschaften. Sie sind in der Lage, gegebene mathematische/numerische Probleme zu analysieren, die passenden numerischen Methoden auszuwählen und diese effizient zu implementieren.
Kompetenzen von Wissenschaftliches Rechnen: Die Studierenden erlernen die grundlegenden numerischen Werkzeuge für typische Anwendungen in den Natur- und Ingenieurwissenschaften. Sie sind in der Lage, gegebene mathematische/numerische Probleme zu analysieren, die passenden numerischen Methoden auszuwählen und diese effizient zu implementieren.
Prüfungen von Wissenschaftliches Rechnen: Modulprüfung: Klausur oder mündliche Prüfung (20–30 Minuten) BOSS-Nr. 88891. Studienleistung: –keine–
Teilnahmevoraussetzung von Wissenschaftliches Rechnen: Erfolgreich abgeschlossen: -keine. Vorausgesetzte Kenntnisse: Mathematische Grundausbildung (Analysis, lineare Algebra), Effiziente Algorithmen und Datenstrukturen, Programmierkenntnisse. Wünschenswerte Kenntnisse: Programmierkenntnisse in C++.
Modultyp und Verwendbarkeit des Moduls Wissenschaftliches Rechnen: Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Wissenschaftliches Rechnen: Prof. Dr. Mario Botsch
Zuständige Fakultät: Informatik


Name des Moduls: Grundlagen der Data Privacy (GDP)
Englischer Modultitel: Foundations of Data Privacy
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: nach Ankündigung
Dauer: 1 Semester
Studienabschnitt: ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Grundlagen der Data Privacy (GDP): Deutsch und Englisch (Insbesondere soll der zweite Teil im Rahmen des International Summer Programs angeboten und daher auf Englisch gehalten werden.)
Lehrinhalte von Grundlagen der Data Privacy (GDP): Datenverarbeitungssysteme müssen bei der Verarbeitung, Speicherung und Übermittlung personengebundener Datenschutz berücksichtigen. In diesem Kurs werden die grundlegenden Algorithmen von privatsphäreschützenden Systemen vermittelt. Die Lehrinhalte umfassen:
1. Einführung in den Datenschutz (Risiken der Re-Identifizierung, Ebenen und Begriff des Datenschutzes, Taxonomie der Datenschutzdefinitionen)
2. Datenschutz durch Aggregation (Datenaggregationsmethoden, Datennutzen bei Aggregation, Kennzeichnungsproportionen)
3. Datenschutz durch Secret Sharing (Sichere Mehrparteien-Berechnungen)
4. Privatsphäre durch Sketches (Streaming Algorithmen, verlustbehaftete Zählung, Reservoir Sampling, Count-Min Sketches, Flajolet-Martin Sketches)
5. Vertraulichkeit durch Datenperturbation (Filterung, Vereinfachung, Verallgemeinerung, Hashing)
6. Privatsphäre durch differentielle Privatsphäre (Konzept der Differential Privacy, Laplacian Noise, datenschutzgerechte Datenveröffentlichung)
7. Grundlagen der Kryptographie (Diskreter Logarithmus, Diskrete Wurzeln, Erweiterter Euklidischer Algorithmus, Chinese Remainder Theorem)
8. Privatsphäre durch Kryptographie (Symmetrische vs. asymmetrische Kryptographie, RSA)
9. Privatsphäre durch homomorphe Verschlüsselung (Pailliers homomorphes Verschlüsselungsverfahren, Shamir's Secret Sharing, E-Voting-Systeme)
10. Datenschutzbestimmungen (GDPR, UNDG)
11. Ethik und Big Data (Bewertung von Datenschutz und Ethik, Sensibilisierung für ethische Herausforderungen durch Big Data)
Ziel der Veranstaltung von Grundlagen der Data Privacy (GDP): Die Hauptziele des Kurses sind:
- Lernen der Herausforderungen des Datenschutzes,
- Vermittlung von Kenntnissen von privacy-preserving Methoden für die Speicherung/Übertragung/Analyse von Daten und deren Veröffentlichung,
- Erlernen von Privacy-by-design Analysemethoden,
- Einführung zu gesetzlichen Regelungen in Bezug auf Datensysteme, Vorstellung des ethischen Beurteilungsprozesses.
Kompetenzen von Grundlagen der Data Privacy (GDP): Nach Abschluss des Kurses sollen die Teilnehmer*innen in der Lage sein:
- die vielfältigen Herausforderungen des Datenschutzes bei der Speicherung, Verarbeitung und Modellierung von Big Data, Datenströmen oder episodischen Daten zu erklären und zu interpretieren,
- Differential Privacy zu verwenden,
- Methoden des Secret Sharing zu verwenden,
- Kryptographische Prinzipien darstellen,
- eine Ethikbewertung eines Softwaresystems durchführen.
Prüfungen von Grundlagen der Data Privacy (GDP): Modulprüfung: Klausur oder mündliche Prüfung BOSS-Nr. 88894. Studienleistung: aktive Mitarbeit in der Übung und Erreichen der Mindestpunktzahl bei den Übungsaufgaben BOSS-Nr. 8844. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung
Teilnahmevoraussetzung von Grundlagen der Data Privacy (GDP): Erfolgreich abgeschlossen: -keine. Wünschenswerte Kenntnisse: Grundlegende Kenntnisse der Mathematik (insbes. Ringe), und Grundlagen der Datenwissenschaft
Modultyp und Verwendbarkeit des Moduls Grundlagen der Data Privacy (GDP): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Grundlagen der Data Privacy (GDP): Prof. Dr. Th. Liebig
Zuständige Fakultät von Grundlagen der Data Privacy (GDP): Informatik


Name des Moduls: Business Process Management (BPM)
Englischer Modultitel: Business Process Management (BPM)
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: ab 5. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Business Process Management (BPM): Deutsch oder Englisch
Lehrinhalte von Business Process Management (BPM): Das Modul umfasst ökonomische, organisatorische und technische Grundlagen des Geschäftsprozessmanagements auf Basis des Prozesslebenszyklus: Prozessidentifikation, Geschäftsprozessmodellierung, Prozesserhebung, Prozessanalyse, Prozessverbesserung, Prozesstechnologie und Prozessüberwachung. Dabei werden Konzepte, Methoden und Werkzeuge der Betriebswirtschaftslehre, der Informatik und der Ingenieurswissenschaften als Teil eines durchgängigen und interdisziplinären Ansatzes dargestellt.
Ziel der Veranstaltung von Business Process Management (BPM): Die Studierenden erwerben Grundwissen darüber, wie Geschäftsprozesse erhoben, dokumentiert, analysiert, verbessert und überwacht werden unter Berücksichtigung nicht nur technologischer Besonderheiten prozessgetriebener Informationssysteme, sondern auch unter Berücksichtigung ökonomischer und organisatorischer Gesichtspunkte. Dies befähigt Studierende dazu, prozessorientierte Arbeiten in IT-Projekten zu planen und durchzuführen, prozessorientierte Informationssysteme zu entwickeln und zu betreiben und damit als Prozessmanager oder Chief Process Officer zu arbeiten. Die Studierenden sollen sich ferner auf dem Gebiet so zurechtfinden, dass Sie in der Lage sind, verwandte Methoden und Verfahren, die über diejenigen der Vorlesung hinausgehen bzw. dort nur ausschnittsweise behandelt werden, aufgabenabhängig ausfindig zu machen, zu verstehen und anzuwenden. In der eng an die Vorlesung gekoppelten Übung sollen die Studierenden den Umgang mit aktuellen Prozessautomatisierungs- und ProzessanalyseUmgebungen lernen. Sie sollen eigene Anwendungen auf Basis der gelernten Konzepte und Techniken erstellen können.
Kompetenzen von Business Process Management (BPM): Die Studierenden erwerben Grundwissen darüber, wie Geschäftsprozesse erhoben, dokumentiert, analysiert, verbessert und überwacht werden unter Berücksichtigung nicht nur technologischer Besonderheiten prozessgetriebener Informationssysteme, sondern auch unter Berücksichtigung ökonomischer und organisatorischer Gesichtspunkte. Dies befähigt Studierende dazu, prozessorientierte Arbeiten in IT-Projekten zu planen und durchzuführen, prozessorientierte Informationssysteme zu entwickeln und zu betreiben und damit als Prozessmanager oder Chief Process Officer zu arbeiten. Die Studierenden sollen sich ferner auf dem Gebiet so zurechtfinden, dass Sie in der Lage sind, verwandte Methoden und Verfahren, die über diejenigen der Vorlesung hinausgehen bzw. dort nur ausschnittsweise behandelt werden, aufgabenabhängig ausfindig zu machen, zu verstehen und anzuwenden. In der eng an die Vorlesung gekoppelten Übung sollen die Studierenden den Umgang mit aktuellen Prozessautomatisierungs- und ProzessanalyseUmgebungen lernen. Sie sollen eigene Anwendungen auf Basis der gelernten Konzepte und Techniken erstellen können.
Prüfungen von Business Process Management (BPM): Modulprüfung: Klausur oder mündliche (Gruppen-)Prüfung BOSS-Nr. 88895. Studienleistung: –keine–. Freiwillige semesterbegleitende Leistungen gem. §19 Abs.7 BPO: nach Ankündigung der Prüferinnen und Prüfer.
Teilnahmevoraussetzung von Business Process Management (BPM): Erfolgreich abgeschlossen: -keine. Wünschenswerte Kenntnisse: Betriebliche Informationssysteme (BIS)
Modultyp und Verwendbarkeit des Moduls Business Process Management (BPM): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragter von Business Process Management (BPM): Prof. Dr. J. Janiesch
Zuständige Fakultät von Business Process Management (BPM): Informatik


Name des Moduls: Modellierung Nebenläufiger Prozesse (MNP)
Englischer Modultitel: Modelling of concurrent processes
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich
Dauer: 1 Semester
Studienabschnitt: ab 3. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Modellierung Nebenläufiger Prozesse (MNP): Deutsch
Lehrinhalte von Modellierung Nebenläufiger Prozesse (MNP): Die Lehrveranstaltung vermittelt Konzepte und Techniken zur Modellierung, Analyse und Implementierung von verteilten nebenläufigen Prozessen. Dazu wird Prozesstheorie anhand formaler Modelle betrachtet, und Programmiermodelle und Programmiersprachen für nebenläufige verteilte Prozesse werden eingeführt.
Ziel der Veranstaltung von Modellierung Nebenläufiger Prozesse (MNP): Die Studierenden sollen formale Modelle und Ansätze in Theorie und Praxis für nebenläufige Prozesse anwenden lernen. Sie sollen grundlegende theoretische Fragestellungen beantworten können, und sie sollen in Anwendungen zeigen, dass sie Szenarien analysieren und prototypische Systeme entwerfen und umsetzen können.
Kompetenzen von Modellierung Nebenläufiger Prozesse (MNP): Die Studierenden sollen formale Modelle und Ansätze in Theorie und Praxis für nebenläufige Prozesse anwenden lernen. Sie sollen grundlegende theoretische Fragestellungen beantworten können, und sie sollen in Anwendungen zeigen, dass sie Szenarien analysieren und prototypische Systeme entwerfen und umsetzen können.
Prüfungen von Modellierung Nebenläufiger Prozesse (MNP): Modulprüfung: Klausur (100 Minuten) BOSS-NR. ?????. Studienleistung: Erfolgreiche Bearbeitung von zwei Projekten gemäß Ankündigung BOSS-NR. ????. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Modellierung Nebenläufiger Prozesse (MNP): Erfolgreich abgeschlossen: Modul „Datenstrukturen, Algorithmen und Programmierung 1 (DAP 1)“. Wünschenswerte Kenntnisse: Modul „Informationssysteme“.
Modultyp und Verwendbarkeit des Moduls Modellierung Nebenläufiger Prozesse (MNP): Wahlmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik. Dieses Modul ist nur wählbar, wenn das Modul „Elektronische Geschäftsprozesse“ nicht bestanden wurde. Nichtbestandene Prüfungsversuche im Modul „Elektronische Geschäftsprozesse“ werden für dieses Modul angerechnet.
Modulbeauftragter von Modellierung Nebenläufiger Prozesse (MNP): Prof. Dr. J. Rehof
Zuständige Fakultät von Modellierung Nebenläufiger Prozesse (MNP): Informatik


Name des Moduls: Mathematik für Informatik 1 (MafI1)
Englischer Modultitel: Mathematics for Computer Science 1
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: 1. Semester
Credits: 9
Aufwand: 270 (90/180)
Lehrveranstaltungssprache von Mathematik für Informatik 1 (MafI1): Deutsch
Lehrinhalte von Mathematik für Informatik 1 (MafI1): Das Modul stellt einige der für Studierende der Informatik notwendigen Grundlagen der Mathematik maßgeschneidert zur Verfügung. Behandelt werden insbesondere zunächst folgende allgemeine Themen: Mengen, Abbildungen und Relationen; Zahlbereiche; Logische Grundlagen und Beweistechniken. Weitere Themen des Moduls sind insbesondere: Grundlegendes aus der linearen Algebra (lineare Gleichungssysteme, lineare Abbildungen, Matrizen und Vektoren); Grundlegendes aus der Algebra (Gruppen, Körper). Dabei werden informatikspezifische Anwendungen sowie die für die Informatik wichtige Unterscheidung zwischen Syntax und Semantik exemplarisch hervorgehoben. Die Übungen vertiefen die in der Vorlesung vermittelten Lehrinhalte durch selbständiges Nachvollziehen ausgewählter Beispiele.
Ziel der Veranstaltung von Mathematik für Informatik 1 (MafI1): Die Studierenden sollen die in der Vorlesung vorgestellten grundlegenden mathematischen Konzepte und Techniken verstehen und anwenden können. Hierzu gehört insbesondere das Beweisen einfacher Sätze.
Kompetenzen von Mathematik für Informatik 1 (MafI1): Die Studierenden sollen die in der Vorlesung vorgestellten grundlegenden mathematischen Konzepte und Techniken verstehen und anwenden können. Hierzu gehört insbesondere das Beweisen einfacher Sätze.
Prüfungen von Mathematik für Informatik 1 (MafI1): Benotete Modulprüfung: Klausur (max. 180 Minuten) BOSS-NR. 61591. Studienleistung: Regelmäßige erfolgreiche Bearbeitung der Übungsaufgaben. BOSS-NR. 61541. Die Details werden durch die jeweilige Dozentin / den jeweiligen Dozenten in der Veranstaltungsankündigung bekannt gemacht. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Mathematik für Informatik 1 (MafI1): - keine -
Modultyp und Verwendbarkeit des Moduls Mathematik für Informatik 1 (MafI1): Pflichtmodul im Bachelor-Studiengang Informatik und im Bachelor-Studiengang Angewandte Informatik mit Anwendungsfach Dienstleistungsinformatik.
Modulbeauftragter von Mathematik für Informatik 1 (MafI1): Prof. Dr. B. Steffen, (Studiendekan)
Zuständige Fakultät von Mathematik für Informatik 1 (MafI1): Fakultät für Informatik


Name des Moduls: Mathematik für Informatik 2 (MafI2)
Englischer Modultitel: Mathematics for Computer Science 2
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 2. Semester
Credits: 9
Aufwand: 270 (90/180)
Lehrveranstaltungssprache von Mathematik für Informatik 2 (MafI2): Deutsch
Lehrinhalte von Mathematik für Informatik 2 (MafI2): Das Modul stellt einige der für Studierende der Informatik notwendigen Grundlagen der Mathematik maßgeschneidert zur Verfügung. Behandelt werden insbesondere zunächst folgende allgemeine Themen: Mengen, Abbildungen und Relationen; Zahlbereiche; Logische Grundlagen und Beweistechniken. Weitere Themen des Moduls sind insbesondere: Analysis (Folgen und Reihen, Stetigkeit, Differenzierbarkeit, Integralrechnung) sowie Kombinatorik (Schwerpunkt: abzählende Kombinatorik). Dabei wird auf informatikspezifische Anwendungen exemplarisch eingegangen. Die Übungen vertiefen die in der Vorlesung vermittelten Lehrinhalte durch selbständiges Nachvollziehen ausgewählter Beispiele.
Ziel der Veranstaltung von Mathematik für Informatik 2 (MafI2): Die Studierenden sollen die in der Vorlesung vorgestellten grundlegenden mathematischen Konzepte und Techniken verstehen und anwenden können. Abstrakte Konzepte sollten so gut verstanden sein, dass sie auf andere Beispiele übertragen werden können.
Kompetenzen von Mathematik für Informatik 2 (MafI2): Die Studierenden sollen die in der Vorlesung vorgestellten grundlegenden mathematischen Konzepte und Techniken verstehen und anwenden können. Abstrakte Konzepte sollten so gut verstanden sein, dass sie auf andere Beispiele übertragen werden können.
Prüfungen von Mathematik für Informatik 2 (MafI2): Benotete Modulprüfung: Klausur (max. 180 Min.) BOSS-NR. 61691. Studienleistung: Regelmäßige erfolgreiche Bearbeitung der Übungsaufgaben. BOSS-NR. 61641. Die Details werden durch die jeweilige Dozentin / den jeweiligen Dozenten in der Veranstaltungsankündigung bekannt gemacht. Die Studienleistung ist Voraussetzung für die Teilnahme an der Modulprüfung.
Teilnahmevoraussetzungen von Mathematik für Informatik 2 (MafI2): Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: Mathematikkenntnisse mindestens auf Grundkursniveau der gymnasialen Oberstufe
Modultyp und Verwendbarkeit des Moduls Mathematik für Informatik 2 (MafI2): Pflichtmodul im Bachelor-Studiengang Informatik und im Bachelor-Studiengang Angewandte Informatik mit Anwendungsfach Dienstleistungsinformatik.
Modulbeauftragter von Mathematik für Informatik 2 (MafI2): (Studiendekan/in der Fakultät für Informatik)
Zuständige Fakultät von Mathematik für Informatik 2 (MafI2): Fakultät für Informatik


Name des Moduls: Elektrotechnik und Kommunikationstechnik (ETKT)
Englischer Modultitel: Electrical and Communications Engineering
Studiengang: Bachelorstudiengang Informatik
Turnus: jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 2. Semester
Credits: 5
Aufwand: 150 (45/105)
Lehrveranstaltungssprache von Elektrotechnik und Kommunikationstechnik (ETKT)1: Deutsch
Lehrinhalte von Elektrotechnik und Kommunikationstechnik (ETKT)1: Gleichstromkreise: Elektrisches Feld, Widerstand, Kapazität, Kirchhoffsche Gesetze, Strom- und Spannungsquellen, Widerstandsnetzwerke, gemischte Schaltungen. Grundlagen von Wechselstromkreisen: harmonische Anregung, Leistung in Wechselstromkreisen. Halbleiterbauelemente: Materialeigenschaften, Dioden, Transistoren. Realisierung von Grundschaltungen: Gatter, Flip-Flops, Zähler, Schieberegister, Halbleiterspeicher, Laufzeiteffekte. Logikfamilien und Ausgangsstufen: Logikfamilien, Open-Kollektor, Open-Drain, Tristate-Ausgangsstufen. Transportmedien: Freiraumausbreitung, Elektrische Leitungen. Nachrichtenübertragung: Basisband-Übertragung, Modulationsverfahren (AM, FM, PM, QAM, OFDM), Zugriffsarten (TDMA, FDMA, CDMA).
Ziel der Veranstaltung von Elektrotechnik und Kommunikationstechnik (ETKT)1: Nicht vorhanden im bereitgestellten Text.
Kompetenzen von Elektrotechnik und Kommunikationstechnik (ETKT)1: Das Modul vermittelt grundlegende Kenntnisse aus den wichtigsten Teilbereichen der Elektrotechnik und Kommunikationstechnik. Nach erfolgreichem Abschluss verstehen die Studierenden die für die elektrische Energieversorgung und elektronische Schaltungstechnik wichtigen physikalischen Phänomene und können einfache Berechnungsverfahren der Elektrotechnik anwenden. Wichtige Systeme der Kommunikationstechnik sind bekannt und können hinsichtlich möglicher Anwendungen bewertet werden. Die Studierenden haben Grundlagenkenntnisse erworben, um fortgeschrittenen Veranstaltungen folgen zu können.
Prüfungen von Elektrotechnik und Kommunikationstechnik (ETKT)1: Modulprüfung: Klausur (max. 3 Std.) BOSS-NR. 61491. Studienleistungen: –keine–
Teilnahmevoraussetzungen von Elektrotechnik und Kommunikationstechnik (ETKT)1: Erfolgreich abgeschlossen: –keine–. Wünschenswerte Kenntnisse: Modul „Höhere Mathematik I (HM1)“ oder Modul „Mathematik für Informatik I (M1)“
Modultyp und Verwendbarkeit des Moduls Elektrotechnik und Kommunikationstechnik (ETKT)1: Pflichtmodul im Bachelor-Studiengang Informatik
Modulbeauftragte/r von Elektrotechnik und Kommunikationstechnik (ETKT)1: Prof. Dr.-Ing. Timm Faulwasser, Prof. Dr. Selma Saidi
Zuständige Fakultät von Elektrotechnik und Kommunikationstechnik (ETKT)1: Fakultät für Elektrotechnik und Informationstechnik


Name des Moduls: Wahrscheinlichkeitsrechnung und mathematische Statistik
Englischer Modultitel: Calculus of Probabilities and Mathematical Statistics
Studiengänge: Bachelorstudiengang Informatik , Bachelorstudiengang Angewandte Informatik
Turnus: jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: 3. Semester
Credits: 4
Aufwand: 120 (45/75)
Lehrveranstaltungssprache von Wahrscheinlichkeitsrechnung und mathematische Statistik: Deutsch
Lehrinhalte von Wahrscheinlichkeitsrechnung und mathematische Statistik: Das Modul dient als Einführung in die Wahrscheinlichkeitsrechnung und Statistik. Dabei stehen vor allem Anwendungsbereiche im Vordergrund, die für Informatik wesentlich sind. Themenfelder umfassen Merkmale und Datentypen, Statistische Kennzahlen für univariate und bivariate Daten (Lage, Streuung, Zusammenhang), Wahrscheinlichkeitsräume und Grundlagen der statistischen Modellbildung, Zufallsvariablen und deren Verteilungen, wichtige Wahrscheinlichkeitsverteilungen, bedingte Wahrscheinlichkeiten und stochastische Unabhängigkeit, Erwartungswert und Varianz, Markoffketten, Schätzen, statistische Tests und Konfidenzintervalle.
Ziel der Veranstaltung von Wahrscheinlichkeitsrechnung und mathematische Statistik: Nicht vorhanden im bereitgestellten Text.
Kompetenzen von Wahrscheinlichkeitsrechnung und mathematische Statistik: Die Studierenden sollen die Grundlagen der statistischen Modellbildung verstehen und die vorgestellten statistischen Verfahren anwenden können.
Prüfungen von Wahrscheinlichkeitsrechnung und mathematische Statistik: Benotete Modulprüfung: Klausur (max. 120 Minuten) BOSS-NR. 60791. Als Zulassungsvoraussetzung ist folgende Studienleistung zu erbringen: Regelmäßige erfolgreiche Bearbeitung der Übungsaufgaben. BOSS-NR. 60741. Die Details werden durch die jeweilige Prüferin / den jeweiligen Prüfer in der Veranstaltungsankündigung bekannt gemacht.
Teilnahmevoraussetzungen von Wahrscheinlichkeitsrechnung und mathematische Statistik: Erfolgreich abgeschlossen: –keine–. Vorausgesetzte Kenntnisse: solide Kenntnisse der Inhalte des Moduls „Mathematik für Informatik 1 (M1)“ und des Moduls „Mathematik für Informatik 2 (M2)“ bzw. des Moduls „Höhere Mathematik I (HM1)“ und des Moduls „Höhere Mathematik II (HM2)“
Modultyp und Verwendbarkeit des Moduls Wahrscheinlichkeitsrechnung und mathematische Statistik: Pflichtmodul in den Bachelor-Studiengängen Informatik und Angewandte Informatik
Modulbeauftragte/r von Wahrscheinlichkeitsrechnung und mathematische Statistik: Der Vorsitzende des Prüfungsausschusses der Fakultät Statistik
Zuständige Fakultät von Wahrscheinlichkeitsrechnung und mathematische Statistik: Fakultät Statistik


Name des Moduls: Höhere Mathematik I (HM1)
Englischer Modultitel: Higher Mathematics I
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: 1. Semester
Credits: 9
Aufwand: 270 (90/180)
Lehrveranstaltungssprache von Höhere Mathematik I (HM1): Deutsch
Lehrinhalte von Höhere Mathematik I (HM1): Dieses Modul vermittelt die grundlegenden mathematischen Begriffe der Analysis, Linearen Algebra und der Numerik. Die Vorlesung (Element 1) beginnt mit der Einführung der reellen und komplexen Zahlen. Es folgen aus der Analysis die Themen 'Folgen und Reihen' sowie 'Stetigkeit und Differenzierbarkeit von Funktionen einer Veränderlichen'. Im Teil für Lineare Algebra werden 'Vektorräume und Lineare Abbildungen', sowie 'Determinanten und Eigenwerte' behandelt. Zudem werden aus der Numerik die Themen 'Fehleranalyse', 'Interpolation' und 'Lineare Gleichungssysteme' erörtert. Die Übungen (Element 2) dienen der Vertiefung der Lehrinhalte, der Einübung wichtiger Rechentechniken und der Anwendung auf konkrete Probleme der Physik und Ingenieurswissenschaften. Sie sind zweistündig und bestehen in der Regel aus der Diskussion der bearbeiteten Hausaufgaben und weiteren Übungsaufgaben.
Ziel der Veranstaltung von Höhere Mathematik I (HM1): Nicht spezifiziert
Kompetenzen von Höhere Mathematik I (HM1): Die Studierenden sollen die grundlegenden mathematischen Methoden sowie einige Standardanwendungen erlernen.
Prüfungen von Höhere Mathematik I (HM1):
  - Modulprüfung: Benotete Klausur (90 Minuten) BOSS-NR. 61291
    Als Zulassungsvoraussetzung ist folgende Studienleistung zu erbringen:
    • Regelmäßige erfolgreiche Bearbeitung der Hausaufgaben und aktive Teilnahme an den Übungen. BOSS-NR. 61241
    Die Details werden durch den jeweiligen Dozenten in der Veranstaltungsankündigung bekannt gemacht.
Teilnahmevoraussetzung von Höhere Mathematik I (HM1): –keine–
Modultyp und Verwendbarkeit des Moduls Höhere Mathematik I (HM1): Pflichtmodul im Bachelor-Studiengang Angewandte Informatik
Modulbeauftragter von Höhere Mathematik I (HM1): Studiendekan/in der Fakultät für Mathematik
Zuständige Fakultät von Höhere Mathematik I (HM1): Fakultät für Mathematik


Name des Moduls: Höhere Mathematik II (HM2)
Englischer Modultitel: Higher Mathematics II
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich im Sommersemester
Dauer: 1 Semester
Studienabschnitt: 2. Semester
Credits: 9
Aufwand: 270 (90/180)
Lehrveranstaltungssprache von Höhere Mathematik II (HM2): Deutsch
Lehrinhalte von Höhere Mathematik II (HM2): Dieses Modul setzt das Modul „Höhere Mathematik I (HM1)“ fort. Die Vorlesung (Element 1) beginnt mit dem eindimensionalen Integral sowie numerischen Integrationsmethoden. Es folgen die Themenkomplexe ‚Wegintegrale,’ ‚gewöhnliche Differentialgleichungen,’ ‚mehrdimensionale Differentialrechnung' und ‚Normalformen’. Parallel hierzu wird die numerische Umsetzung der erlernten Methoden diskutiert. Die Übungen (Element 2) dienen der Vertiefung der Lehrinhalte, der Einübung wichtiger Rechentechniken und der Anwendung auf konkrete Probleme der Physik und Ingenieurswissenschaften. Sie sind zweistündig und bestehen in der Regel aus der Diskussion der bearbeiteten Hausaufgaben.
Ziel der Veranstaltung von Höhere Mathematik II (HM2): Nicht spezifiziert
Kompetenzen von Höhere Mathematik II (HM2): Die Studierenden sollen die grundlegenden mathematischen Methoden sowie einige Standardanwendungen erlernen bzw. weiter vertiefen.
Prüfungen von Höhere Mathematik II (HM2):
  - Benotete Modulprüfung: Klausur (90 Minuten) BOSS-NR. 61391
    Als Zulassungsvoraussetzung ist folgende Studienleistung zu erbringen: BOSS-NR. 61341
    • Regelmäßige erfolgreiche Bearbeitung der Hausaufgaben und aktive Teilnahme an den Übungen
    Die Details werden durch den jeweiligen Dozenten in der Veranstaltungsankündigung bekannt gemacht.
Teilnahmevoraussetzung von Höhere Mathematik II (HM2): Erfolgreich abgeschlossen: –keine–, Vorausgesetzte Kenntnisse: Modul „Höhere Mathematik I (HM1)“
Modultyp und Verwendbarkeit des Moduls Höhere Mathematik II (HM2): Pflichtmodul im Bachelor-Studiengang Angewandte Informatik
Modulbeauftragter von Höhere Mathematik II (HM2): Studiendekan der Fakultät Mathematik
Zuständige Fakultät von Höhere Mathematik II (HM2): Fakultät für Mathematik


Name des Moduls: Höhere Mathematik III (HM3)
Englischer Modultitel: Higher Mathematics III
Studiengang: Bachelorstudiengang Informatik, Bachelorstudiengang Angewandte Informatik
Turnus: jährlich im Wintersemester
Dauer: 1 Semester
Studienabschnitt: 3. Semester
Credits: 9
Aufwand: 270 (90/180)
Lehrveranstaltungssprache von Höhere Mathematik III (HM3): Deutsch
Lehrinhalte von Höhere Mathematik III (HM3): Dieses Modul setzt das Modul „Höhere Mathematik II (HM2)“ fort. Die Vorlesung (Element 1) beginnt mit den Themenkomplexen ‚Mehrdimensionale Integrationstheorie’ und ‚Vektoranalysis und Integralsätze.’ Dann folgen die Themen ‚Funktionstheorie’, ‚Fourieranalysis’ und ‚Integraltransformation’ sowie eine Einführung in die Partiellen Differentialgleichungen. Die Übungen (Element 2) dienen der Vertiefung der Lehrinhalte, der Einübung wichtiger Rechentechniken und der Anwendung auf konkrete Probleme der Physik und Ingenieurswissenschaften. Sie sind zweistündig und bestehen in der Regel aus der Diskussion der bearbeiteten Hausaufgaben und weiteren Übungsaufgaben.
Ziel der Veranstaltung von Höhere Mathematik III (HM3): Nicht spezifiziert
Kompetenzen von Höhere Mathematik III (HM3): Die Studierenden sollen die grundlegenden mathematischen Methoden sowie einige Standardanwendungen erlernen bzw. weiter vertiefen.
Prüfungen von Höhere Mathematik III (HM3):
  - Benotete Modulprüfung: Klausur (90 Minuten) BOSS-NR. 61491
    Als Zulassungsvoraussetzung ist folgende Studienleistung zu erbringen: BOSS-NR. 61441
    • Regelmäßige erfolgreiche Bearbeitung der Hausaufgaben und aktive Teilnahme an den Übungen
    Die Details werden durch den jeweiligen Dozenten in der Veranstaltungsankündigung bekannt gemacht.
Teilnahmevoraussetzung von Höhere Mathematik III (HM3): Erfolgreich abgeschlossen: –keine–, Vorausgesetzte Kenntnisse: Modul „Höhere Mathematik I (HM2)” und Modul „Höhere Mathematik II (HM2)“
Modultyp und Verwendbarkeit des Moduls Höhere Mathematik III (HM3): Pflichtmodul im Bachelor-Studiengang Angewandte Informatik
Modulbeauftragter von Höhere Mathematik III (HM3): Studiendekan der Fakultät für Mathematik
Zuständige Fakultät von Höhere Mathematik III (HM3): Fakultät für Mathematik


Name des Moduls: Markt und Absatz
Englischer Modultitel: Markets and Marketing
Studiengang: Bachelorstudiengang Angewandte Informatik
Dauer: 2 Semester
Studienabschnitt: 3.–4. Semester
Credits: 15
Aufwand: 450
Modultyp und Verwendbarkeit des Moduls Markt und Absatz: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Markt und Absatz: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Markt und Absatz: In dem Modul wird der Markt als Erkenntnisobjekt von BWL und VWL eingeführt. Die BWL
sieht im Markt ein Nachfragepotenzial, das es mit den Instrumenten des Marketings zu
wecken und zu bedienen gilt. Die VWL begreift den Markt als Institution, die bei funktionierendem Wettbewerb eine effiziente Verwendung knapper Ressourcen verspricht.
Im Rahmen der Präsentationstechniken wird gemeinsam erarbeitet und erprobt, wie fachbezogene Inhalte in schriftlicher, medialer und persönlicher Form adressatenspezifisch
aufbereiten und vermittelt werden. 
Kompetenzen von Markt und Absatz: Am Objekt Markt lernen die Studierenden die spezifischen Erkenntnisinteressen und -
methoden von BWL und VWL exemplarisch kennen. Ihnen wird vermittelt, die grundlegenden Fragestellungen der zwei Bereiche zu erkennen und Lösungsansätze für typische
Problemstellungen eigenständig zu erarbeiten. Die Studierenden sind in der Lage, unternehmerische Problemstellungen zu analysieren und für einfache Situationen eigenständige Lösungen zu erarbeiten. Im Rahmen der Präsentationstechnik werden ihnen Schlüsselkompetenzen in Form der Methoden- und Sozialkompetenz vermittelt. Die Studierenden arbeiten das erlernte Wissen zielgruppengerecht auf, um es dann unter Einsatz verschiedener Medien selber zu präsentieren.
Teilnahmevoraussetzungen von Markt und Absatz: keine.
Informativer Teil: Struktur des Original-Moduls 
  Elemente:
    (1) Marketing (3 V+Ü, 6LP)
    (2) Markt und Wettbewerb (3 V+Ü, 6LP)
    (3) Präsentationstechnik (2 V+Ü, 3LP)
  Modulprüfung von Markt und Absatz:
    - Benotete Klausurarbeit (90 Minuten) über die Elemente 1 und 2
  Weitere Voraussetzung für den Modulabschluss:
    - Unbenotete Klausurarbeit (60 Minuten) über das Element 3


Name des Moduls: Rechnungswesen und Finanzen I
Englischer Modultitel: Accounting and Finance I
Studiengang: Bachelorstudiengang Angewandte Informatik
Studienabschnitt: 4. Semester
Credits: 7,5
Aufwand: 225
Modultyp und Verwendbarkeit des Moduls Rechnungswesen und Finanzen I: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Rechnungswesen und Finanzen I: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Rechnungswesen und Finanzen I: Auf der Basis kostentheoretischer Grundlagen wird die Abrechnungsstruktur der Kostenund Leistungsrechnung als Vollkostenrechnung auf Istkostenbasis thematisiert. Dabei
werden die Kostenarten-, Kostenstellen- und Kostenträgerrechnung behandelt. Bilanzierung soll einen grundlegenden Überblick über dieses Teilgebiet des Rechnungswesens
vermitteln. Zu diesem Zweck werden die rechtlichen Hintergründe und relevanten Rechengrößen erläutert. Der Schwerpunkt liegt auf der Formulierung von Ansatzkriterien
und der Berücksichtigung verschiedener Bewertungsmaßstäbe, wobei auch auf die Erfordernis einer nicht-finanziellen Berichterstattung zu Nachhaltigkeitsmaßnahmen eingegangen wird.
Kompetenzen von Rechnungswesen und Finanzen I: Im Bereich Kostenrechnung und Controlling lernen die Studierenden die Abrechnungsstruktur des innerbetrieblichen Rechnungswesens kennen und werden in die Lage versetzt, die Auswirkungen betrieblicher Entscheidungen auf das Betriebsergebnis aufzuzeigen. Ziel der Veranstaltung Bilanzierung ist es, die Studierenden mit der Bilanzierung eines Unternehmens als Werkzeug zu dessen Rechenschaftslegung vertraut zu machen und
ein Verständnis für die bilanzielle Erfassung von Geschäftsvorfällen zu entwickeln. Insbesondere wird eine Schulung der Studierenden dahingehend angestrebt, den Ansatz und
die Bewertung von Bilanzgrößen kritisch zu hinterfragen. 
Teilnahmevoraussetzungen von Rechnungswesen und Finanzen I: keine.
Informativer Teil: Struktur des Original-Moduls 
  Elemente:
    (1) Bilanzierung, Kostenrechnung und Controlling (4 V+Ü, 7,5LP)
  Modulprüfung:
    - Benotete Klausurarbeit (90 Minuten)


Name des Moduls: Rechnungswesen und Finanzen II
Englischer Modultitel: Accounting and Finance I
Studiengang: Bachelorstudiengang Angewandte Informatik
Studienabschnitt: 4. Semester
Credits: 7,5
Aufwand: 225
Modultyp und Verwendbarkeit des Moduls Rechnungswesen und Finanzen II: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Rechnungswesen und Finanzen II: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Rechnungswesen und Finanzen II: In der Investition werden folgende Konzepte behandelt: Einführung in die Nutzentheorie,
Fisher Separation, Net Present Value als Entscheidungskriterium, Vor- und Nachteile alternativer Entscheidungskriterien, Einführung in die Realoptionsbewertung und Anwendung. Im Bereich der Finanzierung werden verschiedene Finanzierungsformen und die
Rolle der Finanzmärkte sowie Finanzintermediäre vorgestellt, Konzepte zu Risiko und
Rendite auf Kapitalmärkten erläutert und Unternehmensbewertung eingeführt.
Kompetenzen von Rechnungswesen und Finanzen II: Die Studierenden können in der Investition Budgetprobleme identifizieren und ausgewählte Instrumente zu deren Behebung nutzen. Die Quantifizierung von Resultaten und
deren Darstellung aus Anwendungsbereichen unter unvollständiger Information werden
trainiert. In der Finanzierung wird die Ermittlung von Finanzierungskosten unterschiedlicher Quellen, der Einfluss der Kapitalstruktur auf den Unternehmenswert sowie verschiedene Methoden zur Unternehmensbewertung erlernt. 
Teilnahmevoraussetzungen von Rechnungswesen und Finanzen II: keine.
Informativer Teil: Struktur des Original-Moduls 
  Elemente:
    (1) Investition und Finanzierung (4 V+Ü, 7,5LP)
  Modulprüfung:
    - Benotete Klausurarbeit (90 Minuten)


Name des Moduls: Wirtschaftstheorie I
Englischer Modultitel: Accounting and Finance I
Studiengang: Bachelorstudiengang Angewandte Informatik
Studienabschnitt: 4. Semester
Credits: 7,5
Aufwand: 225
Modultyp und Verwendbarkeit des Moduls Wirtschaftstheorie I: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Wirtschaftstheorie I: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Wirtschaftstheorie I: Einführung in die Mikroökonomie als die Theorie einzelwirtschaftlichen Verhaltens
1. Konzeptionelle Einführung, 2. Angebot und Nachfrage, 3. Märkte und Marktgleichgewicht, 4. Nachfragetheorie: Haushalte und Konsumenten, 5. Produktionstheorie, 6. Kosten
und Kostentheorie, 7. Angebotstheorie: Monopol und vollkommene Konkurrenz, 8. Allgemeines Gleichgewicht
Kompetenzen von Wirtschaftstheorie I: Die Studierenden erwerben grundlegendes systemisches Wissen über mikroökonomische
Begrifflichkeiten und die Theorie von Märkten als Instrumente der Güterallokation. 
Teilnahmevoraussetzungen von Wirtschaftstheorie I: keine.
Informativer Teil: Struktur des Original-Moduls
  Elemente:
    (1) Mikroökonomie (4 V+Ü, 7,5LP)
  Modulprüfung:
    - Benotete Klausurarbeit (90 Minuten)


Name des Moduls: Wirtschaftstheorie II
Englischer Modultitel: Accounting and Finance II
Studiengang: Bachelorstudiengang Angewandte Informatik
Studienabschnitt: 4. Semester
Credits: 7,5
Aufwand: 225
Modultyp und Verwendbarkeit des Moduls Wirtschaftstheorie II: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Wirtschaftstheorie II: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Wirtschaftstheorie II: Einführung in die Makroökonomie als die Theorie gesamtwirtschaftlichen Verhaltens
1. Volkswirtschaftliche Gesamtrechnung, 2. Arbeitsmärkte, 3. Intertemporale
Konsumentscheidung, 4.Steuern und Staat, 5. Kreditmärkte, 6.Wachstum, 7.
Geld, 8. Konjunkturpolitik, 9. Offene Volkswirtschaften
Kompetenzen von Wirtschaftstheorie II: Die Studierenden erwerben Wissen über wichtige makroökonomische Größen wie Produktion, Beschäftigung und Preisniveau und lernen einfache theoretische Modelle zur Beschreibung und Analyse ganzer Volkswirtschaften kennen. 
Teilnahmevoraussetzungen von Wirtschaftstheorie II: keine
Informativer Teil: Struktur des Original-Moduls
  Elemente:
    (1) Makroökonomie (4 V+Ü, 7,5LP)
  Modulprüfung:
    - Benotete Klausurarbeit (90 Minuten)


Name des Moduls: Planung, Entscheidung und Wertschöpfung
Studiengang: Bachelorstudiengang Angewandte Informatik
Studienabschnitt 3.–4. Semester
Credits 15
Aufwand 450 (120/330)
Modultyp und Verwendbarkeit des Moduls Planung, Entscheidung und Wertschöpfung: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Planung, Entscheidung und Wertschöpfung: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Planung, Entscheidung und Wertschöpfung: 1. „Wirtschaften heißt entscheiden“: Die Komplexität technisch-ökonomischer Entscheidungen erzwingt die
Nutzung methodischer Hilfsmittel zum Finden „guter Entscheidungen“. Die Veranstaltung gibt einen Einblick,
wie Entscheidungsmodelle als Instrumente der Entscheidungsunterstützung generiert und genutzt werden
können.
2. Einführung in die funktionale und aktivitätsanalytische Produktionstheorie sowie in theoretisch fundierte
quantitative Ansätze zur Planung und Steuerung der Produktion und deren praktische Anwendung.
3a. Die Veranstaltung „Industrieökonomik“ bietet eine Einführung zu Unternehmensverhalten und -strategien
in Märkten mit unvollkommenem Wettbewerb. Diese Abweichungen vom vollkommenen Wettbewerb umfassen unter anderem eine Begrenzung der Anzahl von Wettbewerbern, die Existenz von Marktzutrittsbarrieren
sowie Strategien zur Einschränkung des Wettbewerbs wie z.B. Absprachen. Ziel ist es, die Interaktion zwischen Unternehmen zu analysieren, um das Marktergebnis bezüglich Preis- und Mengensetzung zu bestimmen.
3b. Basierend auf den zentralen Paradigmen der Wirtschaftsinformatik bietet die Veranstaltung „Digitalisierung“ eine Einführung in den Prozess des digitalen Wandels der Wertschöpfung als Integrationselement zwischen Wirtschaft, Gesellschaft und IT.
Kompetenzen von Planung, Entscheidung und Wertschöpfung: In der Veranstaltung "Entscheidungsmodelle" erwerben die Studierenden Kenntnisse im Bereich der Modellbildung. Sie erlernen, Modelle für praktische Problemstellungen aufzustellen und zu verwenden. Hierzu wird
ihnen u.a. vermittelt, wie sich speziell Graphen- und Netzwerkmodelle eignen, eine große Klasse von Praxisproblemen zu analysieren und zu lösen.
In der Veranstaltung „Produktionswirtschaft“ werden den Studierenden Kenntnisse der theoretischen und
methodischen Grundlagen der Produktionswirtschaft vermittelt und sie lernen, dieses Wissen zur Analyse und
wirtschaftlichen Gestaltung von Produktprogramm, Produktionspotential und Produktionsprozess anzuwenden.
In der Veranstaltung „Industrieökonomik“ wird die Fähigkeit vermittelt, das Verhalten von Unternehmen unter
verschiedenen Wettbewerbsformen zu verstehen und zu analysieren. Dies bereitet die Studierenden auf die
Berufspraxis vor, in der Strategien zum Überleben bei bspw. ausgeprägter in- und ausländischer Konkurrenz
gefunden, festgelegt und verfolgt werden müssen.
In der Veranstaltung „Digitalisierung“ erwerben Studierende ein grundlegendes Verständnis von Informationssystemen als Treiber der Digitalisierung und lernen, Modelle als Grundlage zur Gestaltung solcher Systeme
zu verstehen.
Teilnahmevoraussetzungen von Planung, Entscheidung und Wertschöpfung: keine
Informativer Teil: Struktur des Original-Moduls
  Elemente
    (1) Entscheidungsmodelle (3 V+Ü, 5,5LP)
    (2) Produktionswirtschaft (3 V+Ü, 5,5LP)
    (3) Industrieökonomik (2 V+Ü, 4LP) oder Digitalisierung (2 V+Ü, 4LP)
  Teilleistungen
    (1) über Element 1: benotete Klausurarbeit (60 Minuten)
    (2) über Element 2: benotete Klausurarbeit (60 Minuten)
    (3) über Element 3: benotete Klausurarbeit (60 Minuten)


Name des Moduls: Management, Technologie und Innovation I
Studiengang: Bachelorstudiengang Angewandte Informatik
Studienabschnitt 3.–4. Semester
Credits 7,5
Aufwand 225
Modultyp und Verwendbarkeit des Moduls Management, Technologie und Innovation I: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Management, Technologie und Innovation I: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Management, Technologie und Innovation I: Innerhalb dieses Moduls werden zentrale Management-Themen besprochen. Diese beziehen sich auf die grundsätzlichen Richtungsentscheidungen eines gesamten Unternehmens. Konkret werden die Managementfunktionen der Planung, der Organisation, des
Personals, der Führung und der Kontrolle mit strategischen und operativen Facetten besprochen. In allen fünf Managementfunktionen erfolgt eine Vorstellung der theoretischen
Grundlagen, ergänzt um praktische aktuelle Anwendungsfelder dieser Theorien. Der Wert
von Theorien, auch für die praktische Tätigkeit in Managementaufgaben, wird abgeleitet
und vermittelt. Die Veranstaltung stellt die zentralen „Frameworks“ der Managementund Strategielehre entlang der fünf Managementfunktionen dar. 
Kompetenzen von Management, Technologie und Innovation I: Die Studierenden erwerben die Fähigkeit, unsicherheitsbehaftete, zukunftsgerichtete
Aufgaben und Herausforderungen des Managements insbesondere auf strategischer,
aber auch auf operativer Ebene zu erkennen, strukturiert zu erfassen und zu adressieren.
Die Studierenden erlangen die Fähigkeit, theoretische Grundgerüste auf konkrete praktische Fragestellungen anzuwenden und dabei die Grenzen und den Nutzen von Theorien
des Managements zu erkennen. 
Teilnahmevoraussetzungen von Management, Technologie und Innovation I: keine
Informativer Teil: Struktur des Original-Moduls
  Elemente
    (1) Management (4 V+Ü, 7,5LP)
  Modulprüfung
    • benotete Klausurarbeit (90 Minuten)


Name des Moduls: Management, Technologie und Innovation II
Studiengang: Bachelorstudiengang Angewandte Informatik
Studienabschnitt 3.–4. Semester
Credits 7,5
Aufwand 225
Modultyp und Verwendbarkeit des Moduls Management, Technologie und Innovation II: Wahlpflichtmodul im Bachelorstudiengang Angewandte Informatik, Katalog Wirtschaftswissenschaften
Zuständige Fakultät von Management, Technologie und Innovation II: Wirtschaftswissenschaftliche Fakultät
Lehrinhalte von Management, Technologie und Innovation II: Das Modul führt in die theoretischen und methodischen Grundlagen eines nachhaltigen
Technologie- und Innovationsmanagements ein. Hierbei werden die grundsätzlichen Managementansätze des Verantwortungsbereichs miteinander in Verbindung gesetzt und in
den größeren organisatorischen Kontext eingebettet. Der Fokus der Veranstaltung liegt
hierbei auf den Fähigkeiten, Prozessen und Strukturen, die für die Generierung, Entwicklung und Einführung von Technologien, Innovationen sowie neuen Geschäftsfeldern und
somit die Sicherung eines langfristigen Wettbewerbsvorteils erforderlich sind.
Kompetenzen von Management, Technologie und Innovation II: Die Studierenden erlangen im Rahmen der Veranstaltung die Fähigkeit, die grundlegenden
Prozesse und Aktivitäten eines nachhaltigen Technologie- und Innovationsmanagements
zu strukturieren und in der Praxis umzusetzen. Darüber hinaus werden die Studierenden
befähigt, die wesentlichen Instrumente und Tools des Fachbereichs anzuwenden und somit die Entwicklung und Verbesserung des organisatorischen Technologie- und Innovationsmanagement aktiv mitzugestalten.
Teilnahmevoraussetzungen von Management, Technologie und Innovation II: keine
Informativer Teil: Struktur des Original-Moduls 
  Elemente
    (1) Technologie- und Innovationsmanagement (4 V+Ü, 7,5LP)
  Modulprüfung
    • benotete Klausurarbeit (90 Minuten)


Modul Name: Studium Fundamentale
Studiengang: Bachelorstudiengang Informatik
Turnus: jedes Semester
Dauer: 1 oder 2 Semester
Studienabschnitt: 3.–4. Semester
Credits: 5
Aufwand: 150 Stunden
Lehrveranstaltungssprache: deutsch oder englisch
Lehrinhalte von Studium Fundamentale:
  - Das Studium Fundamentale zielt darauf ab, Studierende zu befähigen, sich mit Studierenden und Lehrenden anderer Fächer über das eigene Fach, seine Methoden und Probleme zu verständigen und das Eigene im Kontext des Fremden sehen und einordnen zu können. Es werden insbesondere Veranstaltungen angeboten, die allgemein zugängliche Aspekte eines Fachs darstellen, interdisziplinär ausgerichtet sind oder auf eine verstärkte Reflexion des eigenen Fachs abzielen. Es soll Denkanstöße liefern. Der Blick auf andere Fächer wirkt einseitiger, auf die Arbeitswelt eingeengter beruflicher Spezialisierung entgegen.
Kompetenzen von Studium Fundamentale:
  - Neben der Erweiterung des eigenen Bildungshorizonts kann es zum Erwerb von Schlüsselkompetenzen kommen, die im Rahmen des eigentlichen Fachstudiums nur eingeschränkt vermittelt werden können. Es soll ein tiefergehendes Verständnis für Problemstellungen, Erkenntnisinteressen und Lösungsansätze des eigenen Fachs und anderer Disziplinen ermöglichen. Nach Abschluss des Moduls sind die Studierenden in der Lage, sich über das andere oder das eigene Fach zu verständigen, über unterschiedliche Sichtweisen zu reflektieren und diese zu würdigen.
Prüfungen von Studium Fundamentale:
  - Teilleistungen: je eine unbenotete Teilleistung pro besuchter Veranstaltung. Die Prüfungsform richtet sich nach den Vorgaben der anbietenden Fakultät.
Teilnahmevoraussetzungen von Studium Fundamentale: –keine–
Modultyp und Verwendbarkeit des Moduls Studium Fundamentale: Pflichtmodul im Bachelorstudiengang Informatik, Nebenfach Wirtschaftswissenschaften
Modulbeauftragte/r von Studium Fundamentale: Studiendekan
Zuständige Fakultät von Studium Fundamentale: Informatik
